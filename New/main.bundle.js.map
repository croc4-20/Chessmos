{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://chessmos/webpack/runtime/async module","webpack://chessmos/webpack/runtime/create fake namespace object","webpack://chessmos/webpack/runtime/load script","webpack://chessmos/./node_modules/@keplr-wallet/provider/build/core.js","webpack://chessmos/./node_modules/@keplr-wallet/provider/build/cosmjs.js","webpack://chessmos/./node_modules/@keplr-wallet/provider/build/enigma.js","webpack://chessmos/./node_modules/@keplr-wallet/provider/build/index.js","webpack://chessmos/./node_modules/@keplr-wallet/provider/build/inject.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/constant.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/encoding/index.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/error.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/handler.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/hex.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/index.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/interfaces.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/message.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/router/index.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/simple.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/types.js","webpack://chessmos/./node_modules/@keplr-wallet/router/build/uint8-array.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/bech32.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/bip44.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/chain-info.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/cosmjs-alt.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/cosmjs.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/currency.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/ethereum.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/index.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/secretjs.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/settled.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/wallet/eip6963.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/wallet/index.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/wallet/keplr.js","webpack://chessmos/./node_modules/@keplr-wallet/types/build/window.js","webpack://chessmos/./node_modules/base64-js/index.js","webpack://chessmos/./node_modules/buffer/index.js","webpack://chessmos/./node_modules/deepmerge/dist/cjs.js","webpack://chessmos/./node_modules/events/events.js","webpack://chessmos/./node_modules/ieee754/index.js","webpack://chessmos/./node_modules/long/src/long.js","webpack://chessmos/./jsFiles/KeplrConnect.js","webpack://chessmos/./jsFiles/classBoard.js","webpack://chessmos/./jsFiles/classGame.js","webpack://chessmos/./gameSessions.js","webpack://chessmos/./jsFiles/classPiece.js","webpack://chessmos/./jsFiles/seedRng.js","webpack://chessmos/./jsFiles/utility.js","webpack://chessmos/webpack/bootstrap","webpack://chessmos/webpack/runtime/define property getters","webpack://chessmos/webpack/runtime/ensure chunk","webpack://chessmos/webpack/runtime/get javascript chunk filename","webpack://chessmos/webpack/runtime/global","webpack://chessmos/webpack/runtime/hasOwnProperty shorthand","webpack://chessmos/webpack/runtime/make namespace object","webpack://chessmos/webpack/runtime/node module decorator","webpack://chessmos/webpack/runtime/publicPath","webpack://chessmos/webpack/runtime/jsonp chunk loading","webpack://chessmos/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"chessmos:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Keplr = void 0;\nconst router_1 = require(\"@keplr-wallet/router\");\nconst enigma_1 = require(\"./enigma\");\nconst cosmjs_1 = require(\"./cosmjs\");\nconst deepmerge_1 = __importDefault(require(\"deepmerge\"));\nconst long_1 = __importDefault(require(\"long\"));\nconst buffer_1 = require(\"buffer/\");\nconst events_1 = __importDefault(require(\"events\"));\nclass Keplr {\n    constructor(version, mode, requester) {\n        this.version = version;\n        this.mode = mode;\n        this.requester = requester;\n        this.enigmaUtils = new Map();\n        this.defaultOptions = {};\n        this.ethereum = new EthereumProvider(this, this.requester);\n    }\n    ping() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"chains\", \"keplr-ping\", {});\n        });\n    }\n    enable(chainIds) {\n        if (typeof chainIds === \"string\") {\n            chainIds = [chainIds];\n        }\n        return new Promise((resolve, reject) => {\n            let f = false;\n            (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"permission-interactive\", \"enable-access\", {\n                chainIds,\n            })\n                .then(resolve)\n                .catch(reject)\n                .finally(() => (f = true));\n            setTimeout(() => {\n                if (!f) {\n                    this.protectedTryOpenSidePanelIfEnabled();\n                }\n            }, 100);\n        });\n    }\n    // TODO: 웹페이지에서도 필요할수도 있을 것 같으니 나중에 keplr의 API로 추가해준다.\n    isEnabled(chainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof chainIds === \"string\") {\n                chainIds = [chainIds];\n            }\n            return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"permission-interactive\", \"is-enabled-access\", {\n                chainIds,\n            });\n        });\n    }\n    disable(chainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof chainIds === \"string\") {\n                chainIds = [chainIds];\n            }\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"permission-interactive\", \"disable-access\", {\n                    chainIds: chainIds !== null && chainIds !== void 0 ? chainIds : [],\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    experimentalSuggestChain(chainInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (chainInfo.hideInUI) {\n                throw new Error(\"hideInUI is not allowed\");\n            }\n            if (chainInfo.gasPriceStep) {\n                // Gas price step in ChainInfo is legacy format.\n                // Try to change the recent format for backward-compatibility.\n                const gasPriceStep = Object.assign({}, chainInfo.gasPriceStep);\n                for (const feeCurrency of chainInfo.feeCurrencies) {\n                    if (!feeCurrency.gasPriceStep) {\n                        feeCurrency.gasPriceStep = gasPriceStep;\n                    }\n                }\n                delete chainInfo.gasPriceStep;\n                console.warn(\"The `gasPriceStep` field of the `ChainInfo` has been moved under `feeCurrencies`. This is automatically handled as of right now, but the upcoming update would potentially cause errors.\");\n            }\n            if (chainInfo.coinType) {\n                console.warn(\"The `coinType` field of the `ChainInfo` is removed. This is automatically handled as of right now, but the upcoming update would potentially cause errors.\");\n                delete chainInfo.coinType;\n            }\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"chains\", \"suggest-chain-info\", {\n                    chainInfo,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getKey(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"get-cosmos-key\", {\n                    chainId,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getKeysSettled(chainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"get-cosmos-keys-settled\", {\n                    chainIds,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getChainInfosWithoutEndpoints() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"chains\", \"get-chain-infos-without-endpoints\", {})\n                    .then((r) => resolve(r.chainInfos))\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getChainInfoWithoutEndpoints(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"chains\", \"get-chain-info-without-endpoints\", {\n                    chainId,\n                })\n                    .then((r) => resolve(r.chainInfo))\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    sendTx(chainId, tx, mode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // XXX: 원래 enable을 미리하지 않아도 백그라운드에서 알아서 처리해주는 시스템이였는데...\n            //      side panel에서는 불가능하기 때문에 이젠 provider에서 permission도 관리해줘야한다...\n            //      sendTx의 경우는 일종의 쿼리이기 때문에 언제 결과가 올지 알 수 없다. 그러므로 미리 권한 처리를 해야한다.\n            yield this.enable(chainId);\n            return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"background-tx\", \"send-tx-to-background\", {\n                chainId,\n                tx,\n                mode,\n            });\n        });\n    }\n    signAmino(chainId, signer, signDoc, signOptions = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"request-cosmos-sign-amino\", {\n                    chainId,\n                    signer,\n                    signDoc,\n                    signOptions: (0, deepmerge_1.default)((_a = this.defaultOptions.sign) !== null && _a !== void 0 ? _a : {}, signOptions),\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    signDirect(chainId, signer, signDoc, signOptions = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"request-cosmos-sign-direct\", {\n                    chainId,\n                    signer,\n                    signDoc: {\n                        bodyBytes: signDoc.bodyBytes,\n                        authInfoBytes: signDoc.authInfoBytes,\n                        chainId: signDoc.chainId,\n                        accountNumber: signDoc.accountNumber\n                            ? signDoc.accountNumber.toString()\n                            : null,\n                    },\n                    signOptions: (0, deepmerge_1.default)((_a = this.defaultOptions.sign) !== null && _a !== void 0 ? _a : {}, signOptions),\n                })\n                    .then((r) => resolve({\n                    signed: {\n                        bodyBytes: r.signed.bodyBytes,\n                        authInfoBytes: r.signed.authInfoBytes,\n                        chainId: r.signed.chainId,\n                        accountNumber: long_1.default.fromString(r.signed.accountNumber),\n                    },\n                    signature: r.signature,\n                }))\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    signDirectAux(chainId, signer, signDoc, signOptions = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"request-cosmos-sign-direct-aux\", {\n                    chainId,\n                    signer,\n                    signDoc: {\n                        bodyBytes: signDoc.bodyBytes,\n                        publicKey: signDoc.publicKey,\n                        chainId: signDoc.chainId,\n                        accountNumber: signDoc.accountNumber\n                            ? signDoc.accountNumber.toString()\n                            : null,\n                        sequence: signDoc.sequence ? signDoc.sequence.toString() : null,\n                    },\n                    signOptions: (0, deepmerge_1.default)({\n                        preferNoSetMemo: (_a = this.defaultOptions.sign) === null || _a === void 0 ? void 0 : _a.preferNoSetMemo,\n                    }, signOptions),\n                })\n                    .then((r) => resolve({\n                    signed: {\n                        bodyBytes: r.signed.bodyBytes,\n                        publicKey: r.signed.publicKey,\n                        chainId: r.signed.chainId,\n                        accountNumber: long_1.default.fromString(r.signed.accountNumber),\n                        sequence: long_1.default.fromString(r.signed.sequence),\n                    },\n                    signature: r.signature,\n                }))\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    signArbitrary(chainId, signer, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"request-cosmos-sign-amino-adr-36\", {\n                    chainId,\n                    signer,\n                    data: typeof data === \"string\" ? buffer_1.Buffer.from(data) : data,\n                    signOptions: {\n                        isADR36WithString: typeof data === \"string\",\n                    },\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    verifyArbitrary(chainId, signer, data, signature) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof data === \"string\") {\n                data = buffer_1.Buffer.from(data);\n            }\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"verify-cosmos-sign-amino-adr-36\", {\n                    chainId,\n                    signer,\n                    data,\n                    signature,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    signEthereum(chainId, signer, message, signType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-ethereum\", \"request-sign-ethereum\", {\n                    chainId,\n                    signer,\n                    message: typeof message === \"string\" ? buffer_1.Buffer.from(message) : message,\n                    signType,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    signICNSAdr36(chainId, contractAddress, owner, username, addressChainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"request-icns-adr-36-signatures-v2\", {\n                    chainId,\n                    contractAddress,\n                    owner,\n                    username,\n                    addressChainIds,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getOfflineSigner(chainId, signOptions) {\n        return new cosmjs_1.CosmJSOfflineSigner(chainId, this, signOptions);\n    }\n    getOfflineSignerOnlyAmino(chainId, signOptions) {\n        return new cosmjs_1.CosmJSOfflineSignerOnlyAmino(chainId, this, signOptions);\n    }\n    getOfflineSignerAuto(chainId, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = yield this.getKey(chainId);\n            if (key.isNanoLedger) {\n                return new cosmjs_1.CosmJSOfflineSignerOnlyAmino(chainId, this, signOptions);\n            }\n            return new cosmjs_1.CosmJSOfflineSigner(chainId, this, signOptions);\n        });\n    }\n    suggestToken(chainId, contractAddress, viewingKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"token-cw20\", \"SuggestTokenMsg\", {\n                    chainId,\n                    contractAddress,\n                    viewingKey,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getSecret20ViewingKey(chainId, contractAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"token-cw20\", \"get-secret20-viewing-key\", {\n                    chainId,\n                    contractAddress,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getEnigmaPubKey(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"secret-wasm\", \"get-pubkey-msg\", {\n                    chainId,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getEnigmaTxEncryptionKey(chainId, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"secret-wasm\", \"get-tx-encryption-key-msg\", {\n                    chainId,\n                    nonce,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    enigmaEncrypt(chainId, contractCodeHash, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"secret-wasm\", \"request-encrypt-msg\", {\n                    chainId,\n                    contractCodeHash,\n                    msg,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    enigmaDecrypt(chainId, cipherText, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!cipherText || cipherText.length === 0) {\n                return new Uint8Array();\n            }\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"secret-wasm\", \"request-decrypt-msg\", {\n                    chainId,\n                    cipherText,\n                    nonce,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    getEnigmaUtils(chainId) {\n        if (this.enigmaUtils.has(chainId)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.enigmaUtils.get(chainId);\n        }\n        const enigmaUtils = new enigma_1.KeplrEnigmaUtils(chainId, this);\n        this.enigmaUtils.set(chainId, enigmaUtils);\n        return enigmaUtils;\n    }\n    experimentalSignEIP712CosmosTx_v0(chainId, signer, eip712, signDoc, signOptions = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"request-sign-eip-712-cosmos-tx-v0\", {\n                    chainId,\n                    signer,\n                    eip712,\n                    signDoc,\n                    signOptions: (0, deepmerge_1.default)((_a = this.defaultOptions.sign) !== null && _a !== void 0 ? _a : {}, signOptions),\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    __core__getAnalyticsId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"analytics\", \"get-analytics-id\", {});\n        });\n    }\n    changeKeyRingName({ defaultName, editable = true, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-v2\", \"change-keyring-name-interactive\", {\n                    defaultName,\n                    editable,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    __core__privilageSignAminoWithdrawRewards(chainId, signer, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"PrivilegeCosmosSignAminoWithdrawRewards\", {\n                chainId,\n                signer,\n                signDoc,\n            });\n        });\n    }\n    __core__privilageSignAminoDelegate(chainId, signer, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-cosmos\", \"PrivilegeCosmosSignAminoDelegate\", {\n                chainId,\n                signer,\n                signDoc,\n            });\n        });\n    }\n    sendEthereumTx(chainId, tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // XXX: 원래 enable을 미리하지 않아도 백그라운드에서 알아서 처리해주는 시스템이였는데...\n            //      side panel에서는 불가능하기 때문에 이젠 provider에서 permission도 관리해줘야한다...\n            //      sendTx의 경우는 일종의 쿼리이기 때문에 언제 결과가 올지 알 수 없다. 그러므로 미리 권한 처리를 해야한다.\n            yield this.enable(chainId);\n            return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"background-tx-ethereum\", \"send-ethereum-tx-to-background\", {\n                chainId,\n                tx,\n            });\n        });\n    }\n    suggestERC20(chainId, contractAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"token-erc20\", \"SuggestERC20TokenMsg\", {\n                    chainId,\n                    contractAddress,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    // IMPORTANT: protected로 시작하는 method는 InjectedKeplr.startProxy()에서 injected 쪽에서 event system으로도 호출할 수 없도록 막혀있다.\n    //            protected로 시작하지 않는 method는 injected keplr에 없어도 event system을 통하면 호출 할 수 있다.\n    //            이를 막기 위해서 method 이름을 protected로 시작하게 한다.\n    protectedTryOpenSidePanelIfEnabled(ignoreGestureFailure = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isInContentScript = false;\n            // 이 provider가 content script 위에서 동작하고 있는지 아닌지 구분해야한다.\n            // content script일때만 side panel을 열도록 시도해볼 가치가 있다.\n            // 근데 js 자체적으로 api등을 통해서는 이를 알아낼 방법이 없다.\n            // extension 상에서 content script에서 keplr provider proxy를 시작하기 전에 window에 밑의 field를 알아서 주입하는 방식으로 처리한다.\n            if (typeof window !== \"undefined\" &&\n                window.__keplr_content_script === true) {\n                isInContentScript = true;\n            }\n            if (isInContentScript) {\n                const isEnabled = yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"side-panel\", \"GetSidePanelEnabledMsg\", {});\n                if (isEnabled.enabled) {\n                    try {\n                        // IMPORTANT: \"tryOpenSidePanelIfEnabled\"는 다른 msg system과 아예 분리되어있고 다르게 동작한다.\n                        //            router-extension package의 src/router/extension.ts에 있는 주석을 참고할 것.\n                        return yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"router-extension/src/router/extension.ts\", \"tryOpenSidePanelIfEnabled\", {});\n                    }\n                    catch (e) {\n                        console.log(e);\n                        if (!ignoreGestureFailure &&\n                            e.message &&\n                            e.message.includes(\"in response to a user gesture\")) {\n                            if (!document.getElementById(\"__open_keplr_side_panel__\")) {\n                                const sidePanelPing = yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"interaction\", \"ping-content-script-tab-has-opened-side-panel\", {});\n                                // 유저가 직접 side panel을 이미 열어논 상태일 수 있다.\n                                // 이 경우는 무시하도록 한다.\n                                if (sidePanelPing) {\n                                    return;\n                                }\n                                const isKeplrLocked = yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring\", \"GetIsLockedMsg\", {});\n                                const keplrThemeOption = yield (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"settings\", \"GetThemeOptionMsg\", {});\n                                // extension에서 `web_accessible_resources`에 추가된 파일은 이렇게 접근이 가능함\n                                const fontUrl = chrome.runtime.getURL(\"/assets/Inter-SemiBold.ttf\");\n                                const fontFaceAndKeyFrames = `\n                @font-face {\n                  font-family: 'Inter-SemiBold-Keplr';\n                  src: url('${fontUrl}') format('truetype');\n                  font-weight: 600;\n                  font-style: normal;\n                }\n\n                @keyframes slide-left {\n                  0% {\n                    transform: translateY(0%) translateX(100%);\n                  }\n                  100% {\n                    transform: translateY(0%) translateX(0);\n                  }\n                }\n                    \n                @keyframes tada {\n                  0% {\n                    transform: scale3d(1, 1, 1);\n                  }\n                  10%, 20% {\n                    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);\n                  }\n                  30%, 50%, 70%, 90% {\n                    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n                  }\n                  40%, 60%, 80% {\n                    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n                  }\n                  100% {\n                    transform: scale3d(1, 1, 1);\n                  }\n                }\n                  \n            `;\n                                const isLightMode = keplrThemeOption === \"auto\"\n                                    ? !window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n                                    : keplrThemeOption === \"light\";\n                                // 폰트와 애니메이션을 위한 스타일 요소를 head에 추가\n                                const styleElement = document.createElement(\"style\");\n                                styleElement.appendChild(document.createTextNode(fontFaceAndKeyFrames));\n                                document.head.appendChild(styleElement);\n                                const button = document.createElement(\"div\");\n                                button.id = \"__open_keplr_side_panel__\";\n                                button.style.boxSizing = \"border-box\";\n                                button.style.animation = \"slide-left 0.5s forwards\";\n                                button.style.position = \"fixed\";\n                                button.style.right = \"1.5rem\";\n                                button.style.top = \"1.5rem\";\n                                button.style.padding = \"1rem 1.75rem 1rem 0.75rem\";\n                                button.style.zIndex = \"2147483647\"; // 페이지 상의 다른 요소보다 버튼이 위에 오도록 함\n                                button.style.borderRadius = \"1rem\";\n                                button.style.display = \"flex\";\n                                button.style.alignItems = \"center\";\n                                button.style.fontFamily = \"Inter-SemiBold-Keplr\";\n                                button.style.fontWeight = \"600\";\n                                // button.style.cursor = \"pointer\";\n                                button.style.background = isLightMode ? \"#FEFEFE\" : \"#1D1D1F\";\n                                // if (isLightMode) {\n                                //   button.style.boxShadow =\n                                //     \"0px 0px 15.5px 0px rgba(0, 0, 0, 0.20)\";\n                                // }\n                                // button.addEventListener(\"mouseover\", () => {\n                                //   button.style.background = isLightMode ? \"#F2F2F6\" : \"#242428\";\n                                // });\n                                // button.addEventListener(\"mouseout\", () => {\n                                //   button.style.background = isLightMode ? \"#FEFEFE\" : \"#1D1D1F\";\n                                // });\n                                // const megaphoneWrapper = document.createElement(\"div\");\n                                // megaphoneWrapper.style.boxSizing = \"border-box\";\n                                // megaphoneWrapper.style.display = \"flex\";\n                                // megaphoneWrapper.style.position = \"absolute\";\n                                // megaphoneWrapper.style.left = \"-10px\";\n                                // megaphoneWrapper.style.top = \"-10px\";\n                                // megaphoneWrapper.style.padding = \"6.5px 6px 5.5px\";\n                                // megaphoneWrapper.style.borderRadius = \"255px\";\n                                // megaphoneWrapper.style.background = \"#FC8441\";\n                                //\n                                // const megaphone = document.createElement(\"img\");\n                                // const megaphoneUrl = chrome.runtime.getURL(\n                                //   \"/assets/megaphone.svg\"\n                                // );\n                                // megaphone.src = megaphoneUrl;\n                                // megaphone.style.width = \"1.25rem\";\n                                // megaphone.style.height = \"1.25rem\";\n                                // megaphone.style.animation = \"tada 1s infinite\";\n                                // megaphoneWrapper.appendChild(megaphone);\n                                const arrowTop = document.createElement(\"div\");\n                                arrowTop.style.boxSizing = \"border-box\";\n                                arrowTop.style.transform = \"translateY(-0.65rem)\";\n                                arrowTop.style.marginRight = \"0.35rem\";\n                                arrowTop.innerHTML = `\n                <svg width=\"31\" height=\"31\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M30 29.7522C25.1484 31.0691 16.7109 27.1184 18.6093 18.3391C20.5078 9.55979 25.5703 11.5351 26.414 12.852C27.2578 14.1689 28.3125 22.2898 15.8672 19.2171C5.9109 16.7589 7.15625 6.04811 8 1M8 1L14 8M8 1L1 7.5\" stroke=\"${isLightMode ? \"#2C4BE2\" : \"#72747B\"}\"/>\n                </svg>\n              `;\n                                const keplrLogoWrap = document.createElement(\"div\");\n                                keplrLogoWrap.style.boxSizing = \"border-box\";\n                                keplrLogoWrap.style.position = \"relative\";\n                                keplrLogoWrap.style.marginRight = \"1rem\";\n                                const keplrLogo = document.createElement(\"img\");\n                                const keplrLogoUrl = chrome.runtime.getURL(`/assets/${isKeplrLocked ? \"locked-keplr-logo\" : \"icon\"}-128.png`);\n                                keplrLogo.src = keplrLogoUrl;\n                                keplrLogo.style.boxSizing = \"border-box\";\n                                keplrLogo.style.width = \"3rem\";\n                                keplrLogo.style.height = \"3rem\";\n                                keplrLogoWrap.appendChild(keplrLogo);\n                                const logoClickCursor = document.createElement(\"img\");\n                                const logoClickCursorUrl = chrome.runtime.getURL(\"assets/icon-click-cursor.png\");\n                                logoClickCursor.src = logoClickCursorUrl;\n                                logoClickCursor.style.boxSizing = \"border-box\";\n                                logoClickCursor.style.position = \"absolute\";\n                                logoClickCursor.style.right = \"-0.2rem\";\n                                logoClickCursor.style.bottom = \"-0.2rem\";\n                                logoClickCursor.style.aspectRatio = \"78/98\";\n                                logoClickCursor.style.height = \"1.375rem\";\n                                keplrLogoWrap.appendChild(logoClickCursor);\n                                const mainText = document.createElement(\"span\");\n                                mainText.style.boxSizing = \"border-box\";\n                                // mainText.style.maxWidth = \"9.125rem\";\n                                mainText.style.fontSize = \"1rem\";\n                                mainText.style.color = isLightMode ? \"#020202\" : \"#FEFEFE\";\n                                mainText.textContent = isKeplrLocked\n                                    ? \"Unlock Keplr to proceed\"\n                                    : \"Open Keplr to approve request(s)\";\n                                // const arrowLeftOpenWrapper = document.createElement(\"div\");\n                                // arrowLeftOpenWrapper.style.boxSizing = \"border-box\";\n                                // arrowLeftOpenWrapper.style.display = \"flex\";\n                                // arrowLeftOpenWrapper.style.alignItems = \"center\";\n                                // arrowLeftOpenWrapper.style.padding = \"0.5rem 0.75rem\";\n                                //\n                                // arrowLeftOpenWrapper.innerHTML = `\n                                // <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                //   <path d=\"M13 5L6.25 11.75L13 18.5\" stroke=${\n                                //     isLightMode ? \"#1633C0\" : \"#566FEC\"\n                                //   } stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                //   <path d=\"M19.3333 5L12.5833 11.75L19.3333 18.5\" stroke=${\n                                //     isLightMode ? \"#1633C0\" : \"#566FEC\"\n                                //   }  stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                // </svg>`;\n                                //\n                                // const openText = document.createElement(\"span\");\n                                // openText.style.boxSizing = \"border-box\";\n                                // openText.style.fontSize = \"1rem\";\n                                // openText.style.color = isLightMode ? \"#1633C0\" : \"#566FEC\";\n                                // openText.textContent = \"OPEN\";\n                                //\n                                // arrowLeftOpenWrapper.appendChild(openText);\n                                // button.appendChild(megaphoneWrapper);\n                                button.appendChild(arrowTop);\n                                button.appendChild(keplrLogoWrap);\n                                button.appendChild(mainText);\n                                // button.appendChild(arrowLeftOpenWrapper);\n                                // 버튼을 추가하기 전에 한 번 더 이미 추가된 버튼이 있는지 확인\n                                const hasAlready = document.getElementById(\"__open_keplr_side_panel__\");\n                                if (!hasAlready) {\n                                    let removed = false;\n                                    // 유저가 이 button이 아니라 다른 방식(직접 작업줄의 아이콘을 눌러서 등등)으로 side panel을 열수도 있다.\n                                    // 이 경우를 감지해서 side panel이 열렸으면 자동으로 이 버튼이 삭제되도록 한다.\n                                    const intervalId = setInterval(() => {\n                                        (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"interaction\", \"ping-content-script-tab-has-opened-side-panel\", {}).then((sidePanelPing) => {\n                                            if (sidePanelPing) {\n                                                clearInterval(intervalId);\n                                                if (!removed) {\n                                                    button.remove();\n                                                    removed = true;\n                                                }\n                                            }\n                                        });\n                                    }, 300);\n                                    // 버튼을 body에 추가\n                                    document.body.appendChild(button);\n                                    // XXX: 현재 크롬의 버그로 인해서 밑의 코드가 동작할 수 없기 때문에 일단 주석처리한다.\n                                    // 버튼 클릭 이벤트 추가 (필요한 동작을 정의)\n                                    // button.addEventListener(\"click\", () => {\n                                    //   this.protectedTryOpenSidePanelIfEnabled(true);\n                                    //\n                                    //   clearInterval(intervalId);\n                                    //   if (!removed) {\n                                    //     button.remove();\n                                    //     removed = true;\n                                    //   }\n                                    // });\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    }\n}\nexports.Keplr = Keplr;\nclass EthereumProvider extends events_1.default {\n    constructor(keplr, requester) {\n        super();\n        this.keplr = keplr;\n        this.requester = requester;\n        this.chainId = null;\n        this.selectedAddress = null;\n        this.networkVersion = null;\n        this.isKeplr = true;\n        this.isMetaMask = true;\n    }\n    protectedEnableAccess() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"permission-interactive\", \"enable-access-for-evm\", {})\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f) {\n                        this.keplr.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    isConnected() {\n        return true;\n    }\n    request({ method, params, providerId, chainId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // XXX: 원래 enable을 미리하지 않아도 백그라운드에서 알아서 처리해주는 시스템이였는데...\n            //      side panel에서는 불가능하기 때문에 이젠 provider에서 permission도 관리해줘야한다...\n            //      request의 경우는 일종의 쿼리이기 때문에 언제 결과가 올지 알 수 없다. 그러므로 미리 권한 처리를 해야한다.\n            if (method !== \"keplr_initProviderState\") {\n                yield this.protectedEnableAccess();\n            }\n            return new Promise((resolve, reject) => {\n                let f = false;\n                (0, router_1.sendSimpleMessage)(this.requester, router_1.BACKGROUND_PORT, \"keyring-ethereum\", \"request-json-rpc-to-evm\", {\n                    method,\n                    params,\n                    providerId,\n                    chainId,\n                })\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => (f = true));\n                setTimeout(() => {\n                    if (!f && sidePanelOpenNeededJSONRPCMethods.includes(method)) {\n                        this.keplr.protectedTryOpenSidePanelIfEnabled();\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Legacy methods\n     */\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.request({ method: \"eth_requestAccounts\" });\n        });\n    }\n    net_version() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.request({ method: \"net_version\" });\n        });\n    }\n}\n// IMPORTANT: 사이드 패널을 열어야하는 JSON-RPC 메소드들이 생길 때마다 여기에 추가해야한다.\nconst sidePanelOpenNeededJSONRPCMethods = [\n    \"eth_sendTransaction\",\n    \"personal_sign\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"wallet_addEthereumChain\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_watchAsset\",\n];\n//# sourceMappingURL=core.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CosmJSOfflineSigner = exports.CosmJSOfflineSignerOnlyAmino = void 0;\nclass CosmJSOfflineSignerOnlyAmino {\n    constructor(chainId, keplr, signOptions) {\n        this.chainId = chainId;\n        this.keplr = keplr;\n        this.signOptions = signOptions;\n    }\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = yield this.keplr.getKey(this.chainId);\n            return [\n                {\n                    address: key.bech32Address,\n                    // Currently, only secp256k1 is supported.\n                    algo: \"secp256k1\",\n                    pubkey: key.pubKey,\n                },\n            ];\n        });\n    }\n    signAmino(signerAddress, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.chainId !== signDoc.chain_id) {\n                throw new Error(\"Unmatched chain id with the offline signer\");\n            }\n            const key = yield this.keplr.getKey(signDoc.chain_id);\n            if (key.bech32Address !== signerAddress) {\n                throw new Error(\"Unknown signer address\");\n            }\n            return yield this.keplr.signAmino(this.chainId, signerAddress, signDoc, this.signOptions);\n        });\n    }\n    // Fallback function for the legacy cosmjs implementation before the stargate.\n    sign(signerAddress, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.signAmino(signerAddress, signDoc);\n        });\n    }\n}\nexports.CosmJSOfflineSignerOnlyAmino = CosmJSOfflineSignerOnlyAmino;\nclass CosmJSOfflineSigner extends CosmJSOfflineSignerOnlyAmino {\n    constructor(chainId, keplr, signOptions) {\n        super(chainId, keplr, signOptions);\n    }\n    signDirect(signerAddress, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.chainId !== signDoc.chainId) {\n                throw new Error(\"Unmatched chain id with the offline signer\");\n            }\n            const key = yield this.keplr.getKey(signDoc.chainId);\n            if (key.bech32Address !== signerAddress) {\n                throw new Error(\"Unknown signer address\");\n            }\n            return yield this.keplr.signDirect(this.chainId, signerAddress, signDoc, this.signOptions);\n        });\n    }\n}\nexports.CosmJSOfflineSigner = CosmJSOfflineSigner;\n//# sourceMappingURL=cosmjs.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeplrEnigmaUtils = void 0;\n/**\n * KeplrEnigmaUtils duplicates the public methods that are supported on secretjs's EnigmaUtils class.\n */\nclass KeplrEnigmaUtils {\n    constructor(chainId, keplr) {\n        this.chainId = chainId;\n        this.keplr = keplr;\n    }\n    getPubkey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.keplr.getEnigmaPubKey(this.chainId);\n        });\n    }\n    getTxEncryptionKey(nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.keplr.getEnigmaTxEncryptionKey(this.chainId, nonce);\n        });\n    }\n    encrypt(contractCodeHash, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.keplr.enigmaEncrypt(this.chainId, contractCodeHash, msg);\n        });\n    }\n    decrypt(ciphertext, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.keplr.enigmaDecrypt(this.chainId, ciphertext, nonce);\n        });\n    }\n}\nexports.KeplrEnigmaUtils = KeplrEnigmaUtils;\n//# sourceMappingURL=enigma.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./core\"), exports);\n__exportStar(require(\"./cosmjs\"), exports);\n__exportStar(require(\"./enigma\"), exports);\n__exportStar(require(\"./inject\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectedKeplr = exports.injectKeplrToWindow = void 0;\nconst types_1 = require(\"@keplr-wallet/types\");\nconst router_1 = require(\"@keplr-wallet/router\");\nconst enigma_1 = require(\"./enigma\");\nconst cosmjs_1 = require(\"./cosmjs\");\nconst deepmerge_1 = __importDefault(require(\"deepmerge\"));\nconst long_1 = __importDefault(require(\"long\"));\nconst events_1 = __importDefault(require(\"events\"));\nfunction defineUnwritablePropertyIfPossible(o, p, value) {\n    const descriptor = Object.getOwnPropertyDescriptor(o, p);\n    if (!descriptor || descriptor.writable) {\n        if (!descriptor || descriptor.configurable) {\n            Object.defineProperty(o, p, {\n                value,\n                writable: false,\n            });\n        }\n        else {\n            o[p] = value;\n        }\n    }\n    else {\n        console.warn(`Failed to inject ${p} from keplr. Probably, other wallet is trying to intercept Keplr`);\n    }\n}\nfunction injectKeplrToWindow(keplr) {\n    defineUnwritablePropertyIfPossible(window, \"keplr\", keplr);\n    defineUnwritablePropertyIfPossible(window, \"getOfflineSigner\", keplr.getOfflineSigner);\n    defineUnwritablePropertyIfPossible(window, \"getOfflineSignerOnlyAmino\", keplr.getOfflineSignerOnlyAmino);\n    defineUnwritablePropertyIfPossible(window, \"getOfflineSignerAuto\", keplr.getOfflineSignerAuto);\n    defineUnwritablePropertyIfPossible(window, \"getEnigmaUtils\", keplr.getEnigmaUtils);\n}\nexports.injectKeplrToWindow = injectKeplrToWindow;\n/**\n * InjectedKeplr would be injected to the webpage.\n * In the webpage, it can't request any messages to the extension because it doesn't have any API related to the extension.\n * So, to request some methods of the extension, this will proxy the request to the content script that is injected to webpage on the extension level.\n * This will use `window.postMessage` to interact with the content script.\n */\nclass InjectedKeplr {\n    static startProxy(keplr, eventListener = {\n        addMessageListener: (fn) => window.addEventListener(\"message\", fn),\n        removeMessageListener: (fn) => window.removeEventListener(\"message\", fn),\n        postMessage: (message) => window.postMessage(message, window.location.origin),\n    }, parseMessage) {\n        const fn = (e) => __awaiter(this, void 0, void 0, function* () {\n            const message = parseMessage\n                ? parseMessage(e.data)\n                : e.data;\n            if (!message || message.type !== \"proxy-request\") {\n                return;\n            }\n            try {\n                if (!message.id) {\n                    throw new Error(\"Empty id\");\n                }\n                if (message.method.startsWith(\"protected\")) {\n                    throw new Error(\"Rejected\");\n                }\n                if (message.method === \"version\") {\n                    throw new Error(\"Version is not function\");\n                }\n                if (message.method === \"mode\") {\n                    throw new Error(\"Mode is not function\");\n                }\n                if (message.method === \"defaultOptions\") {\n                    throw new Error(\"DefaultOptions is not function\");\n                }\n                if (!keplr[message.method] ||\n                    (message.method !== \"ethereum\" &&\n                        typeof keplr[message.method] !== \"function\")) {\n                    throw new Error(`Invalid method: ${message.method}`);\n                }\n                if (message.method === \"getOfflineSigner\") {\n                    throw new Error(\"GetOfflineSigner method can't be proxy request\");\n                }\n                if (message.method === \"getOfflineSignerOnlyAmino\") {\n                    throw new Error(\"GetOfflineSignerOnlyAmino method can't be proxy request\");\n                }\n                if (message.method === \"getOfflineSignerAuto\") {\n                    throw new Error(\"GetOfflineSignerAuto method can't be proxy request\");\n                }\n                if (message.method === \"getEnigmaUtils\") {\n                    throw new Error(\"GetEnigmaUtils method can't be proxy request\");\n                }\n                const method = message.method;\n                const result = yield (() => __awaiter(this, void 0, void 0, function* () {\n                    if (method === \"signDirect\") {\n                        return yield (() => __awaiter(this, void 0, void 0, function* () {\n                            const receivedSignDoc = message.args[2];\n                            const result = yield keplr.signDirect(message.args[0], message.args[1], {\n                                bodyBytes: receivedSignDoc.bodyBytes,\n                                authInfoBytes: receivedSignDoc.authInfoBytes,\n                                chainId: receivedSignDoc.chainId,\n                                accountNumber: receivedSignDoc.accountNumber\n                                    ? long_1.default.fromString(receivedSignDoc.accountNumber)\n                                    : null,\n                            }, message.args[3]);\n                            return {\n                                signed: {\n                                    bodyBytes: result.signed.bodyBytes,\n                                    authInfoBytes: result.signed.authInfoBytes,\n                                    chainId: result.signed.chainId,\n                                    accountNumber: result.signed.accountNumber.toString(),\n                                },\n                                signature: result.signature,\n                            };\n                        }))();\n                    }\n                    if (method === \"signDirectAux\") {\n                        return yield (() => __awaiter(this, void 0, void 0, function* () {\n                            const receivedSignDoc = message.args[2];\n                            const result = yield keplr.signDirectAux(message.args[0], message.args[1], {\n                                bodyBytes: receivedSignDoc.bodyBytes,\n                                publicKey: receivedSignDoc.publicKey,\n                                chainId: receivedSignDoc.chainId,\n                                accountNumber: receivedSignDoc.accountNumber\n                                    ? long_1.default.fromString(receivedSignDoc.accountNumber)\n                                    : null,\n                                sequence: receivedSignDoc.sequence\n                                    ? long_1.default.fromString(receivedSignDoc.sequence)\n                                    : null,\n                            }, message.args[3]);\n                            return {\n                                signed: {\n                                    bodyBytes: result.signed.bodyBytes,\n                                    publicKey: result.signed.publicKey,\n                                    chainId: result.signed.chainId,\n                                    accountNumber: result.signed.accountNumber.toString(),\n                                    sequence: result.signed.sequence.toString(),\n                                },\n                                signature: result.signature,\n                            };\n                        }))();\n                    }\n                    if (method === \"ethereum\") {\n                        const ethereumProviderMethod = message.ethereumProviderMethod;\n                        if (ethereumProviderMethod === null || ethereumProviderMethod === void 0 ? void 0 : ethereumProviderMethod.startsWith(\"protected\")) {\n                            throw new Error(\"Rejected\");\n                        }\n                        if (ethereumProviderMethod === \"chainId\") {\n                            throw new Error(\"chainId is not function\");\n                        }\n                        if (ethereumProviderMethod === \"selectedAddress\") {\n                            throw new Error(\"selectedAddress is not function\");\n                        }\n                        if (ethereumProviderMethod === \"networkVersion\") {\n                            throw new Error(\"networkVersion is not function\");\n                        }\n                        if (ethereumProviderMethod === \"isKeplr\") {\n                            throw new Error(\"isKeplr is not function\");\n                        }\n                        if (ethereumProviderMethod === \"isMetaMask\") {\n                            throw new Error(\"isMetaMask is not function\");\n                        }\n                        if (ethereumProviderMethod === undefined ||\n                            typeof keplr.ethereum[ethereumProviderMethod] !== \"function\") {\n                            throw new Error(`${message.ethereumProviderMethod} is not function or invalid Ethereum provider method`);\n                        }\n                        if (ethereumProviderMethod === \"request\") {\n                            return yield keplr.ethereum.request(router_1.JSONUint8Array.unwrap(message.args));\n                        }\n                        return yield keplr.ethereum[ethereumProviderMethod](\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore\n                        ...router_1.JSONUint8Array.unwrap(message.args));\n                    }\n                    return yield keplr[method](\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    ...router_1.JSONUint8Array.unwrap(message.args));\n                }))();\n                const proxyResponse = {\n                    type: \"proxy-request-response\",\n                    id: message.id,\n                    result: {\n                        return: router_1.JSONUint8Array.wrap(result),\n                    },\n                };\n                eventListener.postMessage(proxyResponse);\n            }\n            catch (e) {\n                const proxyResponse = {\n                    type: \"proxy-request-response\",\n                    id: message.id,\n                    result: {\n                        error: e.code && !e.module\n                            ? {\n                                code: e.code,\n                                message: e.message,\n                                data: e.data,\n                            }\n                            : e.message || e.toString(),\n                    },\n                };\n                eventListener.postMessage(proxyResponse);\n            }\n        });\n        eventListener.addMessageListener(fn);\n        return () => {\n            eventListener.removeMessageListener(fn);\n        };\n    }\n    requestMethod(method, args) {\n        const bytes = new Uint8Array(8);\n        const id = Array.from(crypto.getRandomValues(bytes))\n            .map((value) => {\n            return value.toString(16);\n        })\n            .join(\"\");\n        const proxyMessage = {\n            type: \"proxy-request\",\n            id,\n            method,\n            args: router_1.JSONUint8Array.wrap(args),\n        };\n        return new Promise((resolve, reject) => {\n            const receiveResponse = (e) => {\n                const proxyResponse = this.parseMessage\n                    ? this.parseMessage(e.data)\n                    : e.data;\n                if (!proxyResponse || proxyResponse.type !== \"proxy-request-response\") {\n                    return;\n                }\n                if (proxyResponse.id !== id) {\n                    return;\n                }\n                this.eventListener.removeMessageListener(receiveResponse);\n                const result = router_1.JSONUint8Array.unwrap(proxyResponse.result);\n                if (!result) {\n                    reject(new Error(\"Result is null\"));\n                    return;\n                }\n                if (result.error) {\n                    reject(new Error(result.error));\n                    return;\n                }\n                resolve(result.return);\n            };\n            this.eventListener.addMessageListener(receiveResponse);\n            this.eventListener.postMessage(proxyMessage);\n        });\n    }\n    constructor(version, mode, eventListener = {\n        addMessageListener: (fn) => window.addEventListener(\"message\", fn),\n        removeMessageListener: (fn) => window.removeEventListener(\"message\", fn),\n        postMessage: (message) => window.postMessage(message, window.location.origin),\n    }, parseMessage, eip6963ProviderInfo) {\n        this.version = version;\n        this.mode = mode;\n        this.eventListener = eventListener;\n        this.parseMessage = parseMessage;\n        this.eip6963ProviderInfo = eip6963ProviderInfo;\n        this.enigmaUtils = new Map();\n        this.defaultOptions = {};\n        this.ethereum = new EthereumProvider(this, this.eventListener, this.parseMessage, this.eip6963ProviderInfo);\n        // Freeze fields/method except for \"defaultOptions\"\n        // Intentionally, \"defaultOptions\" can be mutated to allow a webpage to change the options with cosmjs usage.\n        // Freeze fields\n        const fieldNames = Object.keys(this);\n        for (const fieldName of fieldNames) {\n            if (fieldName !== \"defaultOptions\") {\n                Object.defineProperty(this, fieldName, {\n                    value: this[fieldName],\n                    writable: false,\n                });\n            }\n            // If field is \"eventListener\", try to iterate one-level deep.\n            if (fieldName === \"eventListener\") {\n                const fieldNames = Object.keys(this.eventListener);\n                for (const fieldName of fieldNames) {\n                    Object.defineProperty(this.eventListener, fieldName, {\n                        value: this.eventListener[fieldName],\n                        writable: false,\n                    });\n                }\n            }\n        }\n        // Freeze methods\n        const methodNames = Object.getOwnPropertyNames(InjectedKeplr.prototype);\n        for (const methodName of methodNames) {\n            if (methodName !== \"constructor\" &&\n                typeof this[methodName] === \"function\") {\n                Object.defineProperty(this, methodName, {\n                    value: this[methodName].bind(this),\n                    writable: false,\n                });\n            }\n        }\n    }\n    ping() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestMethod(\"ping\", []);\n        });\n    }\n    enable(chainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestMethod(\"enable\", [chainIds]);\n        });\n    }\n    disable(chainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.requestMethod(\"disable\", [chainIds]);\n        });\n    }\n    experimentalSuggestChain(chainInfo) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (chainInfo.hideInUI) {\n                throw new Error(\"hideInUI is not allowed\");\n            }\n            if (((_a = chainInfo.features) === null || _a === void 0 ? void 0 : _a.includes(\"stargate\")) ||\n                ((_b = chainInfo.features) === null || _b === void 0 ? void 0 : _b.includes(\"no-legacy-stdTx\"))) {\n                console.warn(\"“stargate”, “no-legacy-stdTx” feature has been deprecated. The launchpad is no longer supported, thus works without the two features. We would keep the aforementioned two feature for a while, but the upcoming update would potentially cause errors. Remove the two feature.\");\n            }\n            yield this.requestMethod(\"experimentalSuggestChain\", [chainInfo]);\n        });\n    }\n    getKey(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getKey\", [chainId]);\n        });\n    }\n    getKeysSettled(chainIds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getKeysSettled\", [chainIds]);\n        });\n    }\n    sendTx(chainId, tx, mode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(\"length\" in tx)) {\n                console.warn(\"Do not send legacy std tx via `sendTx` API. We now only support protobuf tx. The usage of legeacy std tx would throw an error in the near future.\");\n            }\n            return yield this.requestMethod(\"sendTx\", [chainId, tx, mode]);\n        });\n    }\n    signAmino(chainId, signer, signDoc, signOptions = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"signAmino\", [\n                chainId,\n                signer,\n                signDoc,\n                (0, deepmerge_1.default)((_a = this.defaultOptions.sign) !== null && _a !== void 0 ? _a : {}, signOptions),\n            ]);\n        });\n    }\n    signDirect(chainId, signer, signDoc, signOptions = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.requestMethod(\"signDirect\", [\n                chainId,\n                signer,\n                // We can't send the `Long` with remaing the type.\n                // Receiver should change the `string` to `Long`.\n                {\n                    bodyBytes: signDoc.bodyBytes,\n                    authInfoBytes: signDoc.authInfoBytes,\n                    chainId: signDoc.chainId,\n                    accountNumber: signDoc.accountNumber\n                        ? signDoc.accountNumber.toString()\n                        : null,\n                },\n                (0, deepmerge_1.default)((_a = this.defaultOptions.sign) !== null && _a !== void 0 ? _a : {}, signOptions),\n            ]);\n            const signed = result.signed;\n            return {\n                signed: {\n                    bodyBytes: signed.bodyBytes,\n                    authInfoBytes: signed.authInfoBytes,\n                    chainId: signed.chainId,\n                    // We can't send the `Long` with remaing the type.\n                    // Sender should change the `Long` to `string`.\n                    accountNumber: long_1.default.fromString(signed.accountNumber),\n                },\n                signature: result.signature,\n            };\n        });\n    }\n    signDirectAux(chainId, signer, signDoc, signOptions = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.requestMethod(\"signDirectAux\", [\n                chainId,\n                signer,\n                // We can't send the `Long` with remaing the type.\n                // Receiver should change the `string` to `Long`.\n                {\n                    bodyBytes: signDoc.bodyBytes,\n                    publicKey: signDoc.publicKey,\n                    chainId: signDoc.chainId,\n                    accountNumber: signDoc.accountNumber\n                        ? signDoc.accountNumber.toString()\n                        : null,\n                    sequence: signDoc.sequence ? signDoc.sequence.toString() : null,\n                },\n                (0, deepmerge_1.default)({\n                    preferNoSetMemo: (_a = this.defaultOptions.sign) === null || _a === void 0 ? void 0 : _a.preferNoSetMemo,\n                }, signOptions),\n            ]);\n            const signed = result.signed;\n            return {\n                signed: {\n                    bodyBytes: signed.bodyBytes,\n                    publicKey: signed.publicKey || undefined,\n                    chainId: signed.chainId,\n                    // We can't send the `Long` with remaing the type.\n                    // Sender should change the `Long` to `string`.\n                    accountNumber: long_1.default.fromString(signed.accountNumber),\n                    sequence: long_1.default.fromString(signed.sequence),\n                },\n                signature: result.signature,\n            };\n        });\n    }\n    signArbitrary(chainId, signer, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"signArbitrary\", [chainId, signer, data]);\n        });\n    }\n    signICNSAdr36(chainId, contractAddress, owner, username, addressChainIds) {\n        return this.requestMethod(\"signICNSAdr36\", [\n            chainId,\n            contractAddress,\n            owner,\n            username,\n            addressChainIds,\n        ]);\n    }\n    verifyArbitrary(chainId, signer, data, signature) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"verifyArbitrary\", [\n                chainId,\n                signer,\n                data,\n                signature,\n            ]);\n        });\n    }\n    signEthereum(chainId, signer, data, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"signEthereum\", [\n                chainId,\n                signer,\n                data,\n                type,\n            ]);\n        });\n    }\n    getOfflineSigner(chainId, signOptions) {\n        return new cosmjs_1.CosmJSOfflineSigner(chainId, this, signOptions);\n    }\n    getOfflineSignerOnlyAmino(chainId, signOptions) {\n        return new cosmjs_1.CosmJSOfflineSignerOnlyAmino(chainId, this, signOptions);\n    }\n    getOfflineSignerAuto(chainId, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = yield this.getKey(chainId);\n            if (key.isNanoLedger) {\n                return new cosmjs_1.CosmJSOfflineSignerOnlyAmino(chainId, this, signOptions);\n            }\n            return new cosmjs_1.CosmJSOfflineSigner(chainId, this, signOptions);\n        });\n    }\n    suggestToken(chainId, contractAddress, viewingKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"suggestToken\", [\n                chainId,\n                contractAddress,\n                viewingKey,\n            ]);\n        });\n    }\n    getSecret20ViewingKey(chainId, contractAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getSecret20ViewingKey\", [\n                chainId,\n                contractAddress,\n            ]);\n        });\n    }\n    getEnigmaPubKey(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getEnigmaPubKey\", [chainId]);\n        });\n    }\n    getEnigmaTxEncryptionKey(chainId, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getEnigmaTxEncryptionKey\", [\n                chainId,\n                nonce,\n            ]);\n        });\n    }\n    enigmaEncrypt(chainId, contractCodeHash, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"enigmaEncrypt\", [\n                chainId,\n                contractCodeHash,\n                msg,\n            ]);\n        });\n    }\n    enigmaDecrypt(chainId, ciphertext, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"enigmaDecrypt\", [\n                chainId,\n                ciphertext,\n                nonce,\n            ]);\n        });\n    }\n    getEnigmaUtils(chainId) {\n        if (this.enigmaUtils.has(chainId)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.enigmaUtils.get(chainId);\n        }\n        const enigmaUtils = new enigma_1.KeplrEnigmaUtils(chainId, this);\n        this.enigmaUtils.set(chainId, enigmaUtils);\n        return enigmaUtils;\n    }\n    experimentalSignEIP712CosmosTx_v0(chainId, signer, eip712, signDoc, signOptions = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"experimentalSignEIP712CosmosTx_v0\", [\n                chainId,\n                signer,\n                eip712,\n                signDoc,\n                (0, deepmerge_1.default)((_a = this.defaultOptions.sign) !== null && _a !== void 0 ? _a : {}, signOptions),\n            ]);\n        });\n    }\n    getChainInfosWithoutEndpoints() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getChainInfosWithoutEndpoints\", []);\n        });\n    }\n    getChainInfoWithoutEndpoints(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"getChainInfoWithoutEndpoints\", [chainId]);\n        });\n    }\n    __core__getAnalyticsId() {\n        return this.requestMethod(\"__core__getAnalyticsId\", []);\n    }\n    changeKeyRingName({ defaultName, editable = true, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"changeKeyRingName\", [\n                { defaultName, editable },\n            ]);\n        });\n    }\n    __core__privilageSignAminoWithdrawRewards(chainId, signer, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"__core__privilageSignAminoWithdrawRewards\", [chainId, signer, signDoc]);\n        });\n    }\n    __core__privilageSignAminoDelegate(chainId, signer, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"__core__privilageSignAminoDelegate\", [\n                chainId,\n                signer,\n                signDoc,\n            ]);\n        });\n    }\n    sendEthereumTx(chainId, tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"sendEthereumTx\", [chainId, tx]);\n        });\n    }\n    suggestERC20(chainId, contractAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.requestMethod(\"suggestERC20\", [chainId, contractAddress]);\n        });\n    }\n}\nexports.InjectedKeplr = InjectedKeplr;\nclass EthereumProvider extends events_1.default {\n    constructor(injectedKeplr, eventListener = {\n        addMessageListener: (fn) => window.addEventListener(\"message\", fn),\n        removeMessageListener: (fn) => window.removeEventListener(\"message\", fn),\n        postMessage: (message) => window.postMessage(message, window.location.origin),\n    }, parseMessage, eip6963ProviderInfo) {\n        super();\n        this.injectedKeplr = injectedKeplr;\n        this.eventListener = eventListener;\n        this.parseMessage = parseMessage;\n        this.eip6963ProviderInfo = eip6963ProviderInfo;\n        // It must be in the hexadecimal format used in EVM-based chains, not the format used in Tendermint nodes.\n        this.chainId = null;\n        // It must be in the decimal format of chainId.\n        this.networkVersion = null;\n        this.selectedAddress = null;\n        this.isKeplr = true;\n        this.isMetaMask = true;\n        this._isConnected = false;\n        this._currentChainId = null;\n        this._initProviderState();\n        window.addEventListener(\"keplr_keystorechange\", () => __awaiter(this, void 0, void 0, function* () {\n            if (this._currentChainId) {\n                const chainInfo = yield injectedKeplr.getChainInfoWithoutEndpoints(this._currentChainId);\n                if (chainInfo) {\n                    const selectedAddress = (yield injectedKeplr.getKey(this._currentChainId)).ethereumHexAddress;\n                    this._handleAccountsChanged(selectedAddress);\n                }\n            }\n        }));\n        window.addEventListener(\"keplr_chainChanged\", (event) => {\n            const origin = event.detail.origin;\n            if (origin === window.location.origin) {\n                const evmChainId = event.detail.evmChainId;\n                this._handleChainChanged(evmChainId);\n            }\n        });\n        window.addEventListener(\"keplr_ethSubscription\", (event) => {\n            var _a;\n            const origin = event.detail.origin;\n            const providerId = event.detail.providerId;\n            if (origin === window.location.origin &&\n                providerId === ((_a = this.eip6963ProviderInfo) === null || _a === void 0 ? void 0 : _a.uuid)) {\n                const data = event.detail.data;\n                this.emit(\"message\", {\n                    type: \"eth_subscription\",\n                    data,\n                });\n            }\n        });\n        if (this.eip6963ProviderInfo) {\n            const announceEvent = new CustomEvent(types_1.EIP6963EventNames.Announce, {\n                detail: Object.freeze({\n                    info: this.eip6963ProviderInfo,\n                    provider: this,\n                }),\n            });\n            window.addEventListener(types_1.EIP6963EventNames.Request, () => window.dispatchEvent(announceEvent));\n            window.dispatchEvent(announceEvent);\n        }\n    }\n    _requestMethod(method, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = new Uint8Array(8);\n            const id = Array.from(crypto.getRandomValues(bytes))\n                .map((value) => {\n                return value.toString(16);\n            })\n                .join(\"\");\n            const proxyMessage = {\n                type: \"proxy-request\",\n                id,\n                method: \"ethereum\",\n                args: router_1.JSONUint8Array.wrap(args),\n                ethereumProviderMethod: method,\n            };\n            return new Promise((resolve, reject) => {\n                const receiveResponse = (e) => {\n                    const proxyResponse = this.parseMessage\n                        ? this.parseMessage(e.data)\n                        : e.data;\n                    if (!proxyResponse || proxyResponse.type !== \"proxy-request-response\") {\n                        return;\n                    }\n                    if (proxyResponse.id !== id) {\n                        return;\n                    }\n                    this.eventListener.removeMessageListener(receiveResponse);\n                    const result = router_1.JSONUint8Array.unwrap(proxyResponse.result);\n                    if (!result) {\n                        reject(new Error(\"Result is null\"));\n                        return;\n                    }\n                    if (result.error) {\n                        const error = result.error;\n                        reject(error.code && !error.module\n                            ? new router_1.EthereumProviderRpcError(error.code, error.message, error.data)\n                            : new Error(error));\n                        return;\n                    }\n                    resolve(result.return);\n                };\n                this.eventListener.addMessageListener(receiveResponse);\n                this.eventListener.postMessage(proxyMessage);\n            });\n        });\n    }\n    _initProviderState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const initialProviderState = yield this._requestMethod(\"request\", {\n                method: \"keplr_initProviderState\",\n            });\n            if (initialProviderState) {\n                const { currentEvmChainId, currentChainId, selectedAddress } = initialProviderState;\n                if (currentChainId != null &&\n                    currentEvmChainId != null &&\n                    selectedAddress != null) {\n                    this._handleConnect(currentEvmChainId);\n                    this._handleChainChanged(currentEvmChainId);\n                    this._currentChainId = currentChainId;\n                    this._handleAccountsChanged(selectedAddress);\n                }\n            }\n        });\n    }\n    _handleConnect(evmChainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._isConnected) {\n                this._isConnected = true;\n                const evmChainIdHexString = `0x${evmChainId.toString(16)}`;\n                this.emit(\"connect\", { chainId: evmChainIdHexString });\n            }\n        });\n    }\n    _handleDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._isConnected) {\n                yield this._requestMethod(\"request\", {\n                    method: \"keplr_disconnect\",\n                });\n                this._isConnected = false;\n                this.chainId = null;\n                this.selectedAddress = null;\n                this.networkVersion = null;\n                this.emit(\"disconnect\");\n            }\n        });\n    }\n    _handleChainChanged(evmChainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const evmChainIdHexString = `0x${evmChainId.toString(16)}`;\n            if (evmChainIdHexString !== this.chainId) {\n                this.chainId = evmChainIdHexString;\n                this.networkVersion = evmChainId.toString(10);\n                this.emit(\"chainChanged\", evmChainIdHexString);\n            }\n        });\n    }\n    _handleAccountsChanged(selectedAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.selectedAddress !== selectedAddress) {\n                this.selectedAddress = selectedAddress;\n                this.emit(\"accountsChanged\", [selectedAddress]);\n            }\n        });\n    }\n    isConnected() {\n        return this._isConnected;\n    }\n    request({ method, params, chainId, }) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._isConnected) {\n                yield this._initProviderState();\n            }\n            if (method === \"eth_accounts\") {\n                return (this.selectedAddress ? [this.selectedAddress] : []);\n            }\n            return yield this._requestMethod(\"request\", {\n                method,\n                params,\n                providerId: (_a = this.eip6963ProviderInfo) === null || _a === void 0 ? void 0 : _a.uuid,\n                chainId,\n            });\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.request({\n                method: \"eth_requestAccounts\",\n            }));\n        });\n    }\n    net_version() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.request({\n                method: \"net_version\",\n            }));\n        });\n    }\n}\n//# sourceMappingURL=inject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WEBPAGE_PORT = exports.APP_PORT = exports.BACKGROUND_PORT = void 0;\nexports.BACKGROUND_PORT = \"background\";\nexports.APP_PORT = \"popup\";\nexports.WEBPAGE_PORT = \"webpage\";\n//# sourceMappingURL=constant.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageRegistry = void 0;\nclass MessageRegistry {\n    constructor() {\n        this.registeredMsgType = new Map();\n    }\n    registerMessage(msgCls) {\n        if (this.registeredMsgType.has(msgCls.type())) {\n            throw new Error(`Already registered type ${msgCls.type()}`);\n        }\n        this.registeredMsgType.set(msgCls.type(), msgCls);\n    }\n    parseMessage(message) {\n        if (!message.type) {\n            throw new Error(\"Null type\");\n        }\n        const msgCls = this.registeredMsgType.get(message.type);\n        if (!msgCls) {\n            throw new Error(`Unregistered msg type ${message.type}`);\n        }\n        return Object.setPrototypeOf(message.msg, msgCls.prototype);\n    }\n}\nexports.MessageRegistry = MessageRegistry;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProviderRpcError = exports.KeplrError = void 0;\nclass KeplrError extends Error {\n    constructor(module, code, message) {\n        super(message);\n        this.module = module;\n        this.code = code;\n        Object.setPrototypeOf(this, KeplrError.prototype);\n    }\n}\nexports.KeplrError = KeplrError;\nclass EthereumProviderRpcError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = code;\n        this.data = data;\n        Object.setPrototypeOf(this, EthereumProviderRpcError.prototype);\n    }\n}\nexports.EthereumProviderRpcError = EthereumProviderRpcError;\n//# sourceMappingURL=error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=handler.js.map","\"use strict\";\n/*\n  Belows are from @cosmjs/encoding library.\n  To reduce the bundle size of provider, put them directly here.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHex = exports.toHex = void 0;\nfunction toHex(data) {\n    let out = \"\";\n    for (const byte of data) {\n        out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n    return out;\n}\nexports.toHex = toHex;\nfunction fromHex(hexstring) {\n    if (hexstring.length % 2 !== 0) {\n        throw new Error(\"hex string length must be a multiple of 2\");\n    }\n    const listOfInts = [];\n    for (let i = 0; i < hexstring.length; i += 2) {\n        const hexByteAsString = hexstring.substr(i, 2);\n        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n            throw new Error(\"hex string contains invalid characters\");\n        }\n        listOfInts.push(parseInt(hexByteAsString, 16));\n    }\n    return new Uint8Array(listOfInts);\n}\nexports.fromHex = fromHex;\n//# sourceMappingURL=hex.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./router\"), exports);\n__exportStar(require(\"./handler\"), exports);\n__exportStar(require(\"./interfaces\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./error\"), exports);\n__exportStar(require(\"./message\"), exports);\n__exportStar(require(\"./constant\"), exports);\n__exportStar(require(\"./encoding\"), exports);\n__exportStar(require(\"./simple\"), exports);\n__exportStar(require(\"./uint8-array\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = void 0;\n/**\n * This messaging system is influenced by cosmos-sdk.\n * The messages are processed in the following order:\n * \"deserialize message -> approve external -> validate basic -> handler by routing\".\n * This deserializing system has weak polymorphism feature.\n * Message would be converted to object according to their class and registered type.\n * But, nested class is not supported. Non primitivie types or array that includes non primitive types in message's fields\n * can't be decoded to their type properly. In this case, user should set thier prototype manually.\n */\nclass Message {\n    /**\n     * Ask for approval if message is sent externally.\n     */\n    approveExternal(_env, _sender) {\n        return false;\n    }\n}\nexports.Message = Message;\n//# sourceMappingURL=message.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Router = void 0;\nconst encoding_1 = require(\"../encoding\");\nconst uint8_array_1 = require(\"../uint8-array\");\nclass Router {\n    constructor(envProducer) {\n        this.envProducer = envProducer;\n        this.msgRegistry = new encoding_1.MessageRegistry();\n        this.registeredHandler = new Map();\n        this.guards = [];\n        this.port = \"\";\n        this._isInitialized = false;\n    }\n    get isInitialized() {\n        return this._isInitialized;\n    }\n    registerMessage(msgCls) {\n        this.msgRegistry.registerMessage(msgCls);\n    }\n    addHandler(route, handler) {\n        if (this.registeredHandler.has(route)) {\n            throw new Error(`Already registered type ${route}`);\n        }\n        this.registeredHandler.set(route, handler);\n    }\n    addGuard(guard) {\n        this.guards.push(guard);\n    }\n    listen(port, initFn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port = port;\n            this.attachHandler();\n            if (initFn) {\n                let initWaiter;\n                this._initWaiter = new Promise((resolve) => {\n                    initWaiter = resolve;\n                });\n                yield initFn();\n                initWaiter();\n            }\n            this._isInitialized = true;\n            return;\n        });\n    }\n    unlisten() {\n        this.port = \"\";\n        this.detachHandler();\n    }\n    handleMessage(message, sender) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isInitialized) {\n                yield this._initWaiter;\n            }\n            const msg = this.msgRegistry.parseMessage(uint8_array_1.JSONUint8Array.unwrap(message));\n            const env = this.envProducer(sender, (_a = msg.routerMeta) !== null && _a !== void 0 ? _a : {});\n            for (const guard of this.guards) {\n                yield guard(env, msg, sender);\n            }\n            // Can happen throw\n            msg.validateBasic();\n            const route = msg.route();\n            if (!route) {\n                throw new Error(\"Null router\");\n            }\n            const handler = this.registeredHandler.get(route);\n            if (!handler) {\n                throw new Error(\"Can't get handler\");\n            }\n            return uint8_array_1.JSONUint8Array.wrap(yield handler(env, msg));\n        });\n    }\n}\nexports.Router = Router;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendSimpleMessage = exports.SimpleMessage = void 0;\nconst message_1 = require(\"./message\");\nconst symbolRoute = Symbol();\nconst symbolType = Symbol();\nclass SimpleMessage extends message_1.Message {\n    constructor(route, type, data) {\n        super();\n        this[symbolRoute] = route;\n        this[symbolType] = type;\n        for (const key of Object.keys(data)) {\n            this[key] = data[key];\n        }\n    }\n    route() {\n        return this[symbolRoute];\n    }\n    type() {\n        return this[symbolType];\n    }\n    // validateBasic should be handled in background.\n    validateBasic() {\n        // noop\n    }\n    // approveExternal should be handled in background.\n    approveExternal() {\n        return true;\n    }\n}\nexports.SimpleMessage = SimpleMessage;\n/**\n * Send message without typing and message instance.\n * Usage of this function is not recommended.\n * However, if you know about this function well,\n * and you want to avoid the usage of troublesome typing and class definition,\n * You can try using this function.\n * @param requester\n * @param port\n * @param route\n * @param type\n * @param data\n */\nfunction sendSimpleMessage(requester, port, route, type, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield requester.sendMessage(port, new SimpleMessage(route, type, data));\n    });\n}\nexports.sendSimpleMessage = sendSimpleMessage;\n//# sourceMappingURL=simple.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONUint8Array = void 0;\n// The JSON encoder that supports the `Uint8Array`.\nconst hex_1 = require(\"./hex\");\nclass JSONUint8Array {\n    static parse(text) {\n        return JSON.parse(text, (key, value) => {\n            // Prevent potential prototype poisoning.\n            if (key === \"__proto__\") {\n                throw new Error(\"__proto__ is disallowed\");\n            }\n            if (value &&\n                typeof value === \"string\" &&\n                value.startsWith(\"__uint8array__\")) {\n                return (0, hex_1.fromHex)(value.replace(\"__uint8array__\", \"\"));\n            }\n            return value;\n        });\n    }\n    static stringify(obj) {\n        return JSON.stringify(obj, (key, value) => {\n            // Prevent potential prototype poisoning.\n            if (key === \"__proto__\") {\n                throw new Error(\"__proto__ is disallowed\");\n            }\n            if (value &&\n                (value instanceof Uint8Array ||\n                    (typeof value === \"object\" &&\n                        \"type\" in value &&\n                        \"data\" in value &&\n                        value.type === \"Buffer\" &&\n                        Array.isArray(value.data)))) {\n                const array = value instanceof Uint8Array ? value : new Uint8Array(value.data);\n                return `__uint8array__${(0, hex_1.toHex)(array)}`;\n            }\n            return value;\n        });\n    }\n    static wrap(obj) {\n        if (obj === undefined)\n            return undefined;\n        return JSON.parse(JSONUint8Array.stringify(obj));\n    }\n    static unwrap(obj) {\n        if (obj === undefined)\n            return undefined;\n        return JSONUint8Array.parse(JSON.stringify(obj));\n    }\n}\nexports.JSONUint8Array = JSONUint8Array;\n//# sourceMappingURL=uint8-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=bech32.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=bip44.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=chain-info.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=cosmjs-alt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=cosmjs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=currency.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthTxStatus = exports.EthSignType = void 0;\nvar EthSignType;\n(function (EthSignType) {\n    EthSignType[\"MESSAGE\"] = \"message\";\n    EthSignType[\"TRANSACTION\"] = \"transaction\";\n    EthSignType[\"EIP712\"] = \"eip-712\";\n})(EthSignType = exports.EthSignType || (exports.EthSignType = {}));\nvar EthTxStatus;\n(function (EthTxStatus) {\n    EthTxStatus[\"Success\"] = \"0x1\";\n    EthTxStatus[\"Failure\"] = \"0x0\";\n})(EthTxStatus = exports.EthTxStatus || (exports.EthTxStatus = {}));\n//# sourceMappingURL=ethereum.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./currency\"), exports);\n__exportStar(require(\"./bech32\"), exports);\n__exportStar(require(\"./bip44\"), exports);\n__exportStar(require(\"./chain-info\"), exports);\n__exportStar(require(\"./wallet\"), exports);\n__exportStar(require(\"./window\"), exports);\n__exportStar(require(\"./ethereum\"), exports);\n__exportStar(require(\"./cosmjs\"), exports);\n__exportStar(require(\"./cosmjs-alt\"), exports);\n__exportStar(require(\"./secretjs\"), exports);\n__exportStar(require(\"./settled\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=secretjs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=settled.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP6963EventNames = void 0;\nvar EIP6963EventNames;\n(function (EIP6963EventNames) {\n    EIP6963EventNames[\"Announce\"] = \"eip6963:announceProvider\";\n    EIP6963EventNames[\"Request\"] = \"eip6963:requestProvider\";\n})(EIP6963EventNames = exports.EIP6963EventNames || (exports.EIP6963EventNames = {}));\n//# sourceMappingURL=eip6963.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./keplr\"), exports);\n__exportStar(require(\"./eip6963\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keplr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=window.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n"," import { Keplr } from '@keplr-wallet/provider';\r\n// console.log('Keplr', Keplr);\r\nasync function walletConnect() {\r\n  console.log(\"Keplr connect called! window being:\", window, \"window.keplr being\", window.keplr);\r\n\r\n window.onload = function () \r\n {\r\n  // Initialize Keplr\r\n   if (window.keplr) \r\n   {\r\n    console.log(\"Keplr found\");\r\n    window.keplr.enable(\"stargaze-1\");\r\n\r\n    const offlineSigner = window.getOfflineSigner(\"stargaze-1\");\r\n    const accounts = offlineSigner.getAccounts();\r\n\r\n    console.log(\"Connected wallet address:\", accounts[0].address);\r\n    // console.log(\"trying to fetch nft on users adress\");\r\n  //   fetchNFTByAddress(\"stars18d7ver7mmjdt06mz6x0pz09862060kupju75kpka5j0r7huearcsq0gyg0\")\r\n  // .catch(console.error);\r\n    //await fetchCollection('accounts[0].address');\r\n  } else {\r\n    console.log(\"Keplr extension not found!\");\r\n  }\r\n\r\n\r\n\r\n};\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  var connectButton = document.querySelector(\"#connectWalletButton\");\r\n  \r\n  // Add a click event listener to the button\r\n  connectButton.addEventListener('click', function() {\r\n    walletConnect();\r\n  });\r\n});\r\n","let chessArray;\nlet chessBoard;\nlet handlePieceSelection;\nlet game;\n\nlet pieceElement;\nlet destinationElement;\n\n const validPieceTypes = [\"king\", \"queen\", \"rook\", \"bishop\", \"knight\", \"pawn\"];\n\n  \n//   const { default: ChessPiece } = await import('../savedFiles/classPiece.js');\n const { default: ChessPiece } = await import('./classPiece.js');\n  class ExtendedPiece extends ChessPiece {\n    constructor(type, color, row, col, imagePath, elementId, game) {\n      super(type, color, row, col, imagePath, elementId, game);\n    }\n    \n  }\n\n  async function defineExtendedPiece() {\n\n  window.chessPiece  = ExtendedPiece;\n  \n  }\n  \n\nasync function initialize(game, pieces) \n{\n  \n  \n  const { default: ChessGame } = await import('./classGame.js').default;\n  const { default: ChessBoard } = await import('./classBoard.js').default;\n  const { default: ChessArray } = await import('./classArray.js').default;\n\n  console.log(\"Classes imported successfully\");\n\n  // window.ChessBoard = ChessBoard;\n  // window.ChessGame = ChessGame;\n  // window.ChessArray = ChessArray;\n  \n      // Initialize the game objects using the imported classes\n  const chessArray = new ChessArray();\n  const chessGame = new ChessGame(chessArray, null, handlePieceSelection);\n  console.log(\"Initialized chessGame in classBoard:\", chessGame);\n\n  const chessBoard = new ChessBoard(chessGame, ChessPiece, pieces, game);\n   await chessBoard.initialize();\n\n//Call initializeBoard after the assignments\ntry {\n    await chessBoard.initializeBoard();\n  } catch (error) {\n    console.error(\"Failed to initialize boaaard:\", error);\n    throw error;\n  }\n\n      // Attach event listeners\n   chessBoard.squareElements.forEach((square) => {\n    square.addEventListener(\"click\", ExtendedPiece.handleClick);\n  });\n   console.log(\"Square event listeners attached.\"); // Add this line\n   console.log(\"Initialization in classBoard completed.\");\n  return { chessArray, chessBoard, chessGame };\n}\n\n  \n\nexport default class ChessBoard\n{\n  constructor(chessGame, ChessPiece, pieces, game) \n  {\n    this.chessPieces = [];\n    this.squareElements = Array.from(document.querySelectorAll(\".chess-square\"));\n    this.moveHistory = [];\n    this.currentPlayer = \"white\";\n    this.gameStatus = \"active\";\n     this.game = game;\n    console.log('this.Game', this.game);\n    // this.game.board = [];\n\n    this.boardElement = document.getElementById('chessboard'); // Set boardElement here\n    this.pieces = pieces;\n    this.currentlySelectedPiece = null;\n   defineExtendedPiece = defineExtendedPiece; // Binding this\n    this.initializeBoard = this.initializeBoard.bind(this);\n     this.board = Array(8).fill(null).map(() => Array(8).fill(null));\n  // this.board = this.initializeBoard();\n    this.board.length = 8;\n    this.ChessPiece = ChessPiece;\n    this.initialize();\n    this.blackPieces = [];\n    this.whitePieces = [];\n     this.selectedPieceElement = null;\n     this.movePiece = this.movePiece.bind(this);\n\n    // this.populateBoardWithPieces = this.populateBoardWithPieces.bind(this);\n    // this.chaosWarp();\n    //this.setupInitialPosition(pieces);\n    //this.createBoard();\n    //this.handleSquareClick = this.handleSquareClick.bind(this);\n   //  this.initializeBoard()\n   //    .then(this.defineExtendedPiece)\n   //    .then(this.runChessGame)\n   //    .catch((error) => {\n   //      console.error(\"Failed to initialize the chess board:\", error);\n   //    });\n    }\n\n \n\n\n  async initialize() \n  {\n    try \n    {\n      await this.initializeBoard();\n     // await this.defineExtendedPiece(); // Assuming defineExtendedPiece is async, else you can omit await\n      await this.runChessGame(); // Assuming runChessGame is async, else you can omit await\n    } \n    catch (error) \n    {\n      console.error(\"Failed to initialize the chess board:\", error);\n    }\n  }\n\n  // Initialize the board with pieces in their starting position\n\n   async initializeBoard() {\n    try {\n      console.log(\"Current context (this.game):\", this.game);\n\n      console.log(\"Current context (this.game):\", this.game);\n      if (!this.game) {\n        throw new Error(\"Game not initialized\");\n      }\n      console.log(\"this.game:\", this.game);\n      console.log(\"this.chessGame:\", this.chessGame);\n      this.initializeEmptyBoard();\n      await this.populateBoardWithPieces();\n       defineExtendedPiece();\n      // renderBoard(this.game.board);\n      console.log(\"ExtendedPiece\", ExtendedPiece);\n      // this.registerPieceClickHandlers();\n    } catch (error) \n    {\n      console.error(\"Failed to initialize board:\", error);\n      throw error;\n    }\n  }\n  async populateBoardWithPieces() {\n    // ... existing code to create pieces ...\n    // Loop through each piece and place it on the board\n    this.pieces.forEach(piece => {\n      const chessPiece = new ChessPiece(piece.type, piece.color, piece.row, piece.col, piece.imagePath, piece.elementId, this.game);\n      this.board[piece.row][piece.col] = chessPiece;\n      this.chessPieces.push(chessPiece);\n\n      // Update the DOM for the chess piece\n      const squareElement = document.getElementById(`square-${piece.row}-${piece.col}`);\n      squareElement.innerHTML = `<div class=\"chess-piece ${piece.color}-${piece.type}\" style=\"background-image: url('${piece.imagePath}')\"></div>`;\n    });\n\n    console.log(\"Board populated with pieces:\", this.board);\n  }\n\n// async populateBoardWithPieces(chessPiece) {\n//   this.game.board = [];\n//   console.log(\"this.game.board:\", this.game.board);\n    \n//     // create a 2D array to represent the board\n//     for (let row = 0; row < 8; row++) {\n//       this.game.board[row] = [];\n//       for (let col = 0; col < 8; col++) {\n//         this.game.board[row][col] = null;\n//       }\n\n//      }\n//       //this.defineExtendedPiece();\n\n//     // Add black pieces\n//   this.game.board[7][0] = new ExtendedPiece(\"rook\", \"black\", 7, 0, \"img/blackROOK.png\", \"square-7-0\", this);\n//   console.log('this.game.board[7][0]]', this.game.board[7][0]);\n//   this.game.board[7][1] = new ExtendedPiece(\"knight\", \"black\", 7, 1, \"img/blackKNIGHT.png\", \"square-7-1\", this);\n//   this.game.board[7][2] = new ExtendedPiece(\"bishop\", \"black\", 7, 2, \"img/blackBISHOP.png\", \"square-7-2\", this);\n//   this.game.board[7][3] = new ExtendedPiece(\"queen\", \"black\", 7, 3, \"img/BlackQUEEN.png\", \"square-7-3\", this);\n//   this.game.board[7][4] = new ExtendedPiece(\"king\", \"black\", 7, 4, \"img/BlackKING.png\", \"square-7-4\", this);\n//   this.game.board[7][5] = new ExtendedPiece(\"bishop\", \"black\", 7, 5, \"img/BlackBISHOP.png\", \"square-7-5\", this);\n//   this.game.board[7][6] = new ExtendedPiece(\"knight\", \"black\", 7, 6, \"img/BlackKNIGHT.png\", \"square-7-6\", this);\n//   this.game.board[7][7] = new ExtendedPiece(\"rook\", \"black\", 7, 7, \"img/BlackROOK.png\", \"square-7-7\", this);\n  \n//     //Add Black PAWNS\n\n//   this.game.board[6][0] = new ExtendedPiece(\"pawn\", \"black\", 6, 0, \"images/blackPAWN.png\", \"square-6-0\", this);\n//   this.game.board[6][1] = new ExtendedPiece(\"pawn\", \"black\", 6, 1, \"images/blackPAWN.png\", \"square-6-1\", this);\n//   this.game.board[6][2] = new ExtendedPiece(\"pawn\", \"black\", 6, 2, \"images/blackPAWN.png\", \"square-6-2\", this);\n//   this.game.board[6][3] = new ExtendedPiece(\"pawn\", \"black\", 6, 3, \"images/blackPAWN.png\", \"square-6-3\", this);\n//   this.game.board[6][4] = new ExtendedPiece(\"pawn\", \"black\", 6, 4, \"images/blackPAWN.png\", \"square-6-4\", this);\n//   this.game.board[6][5] = new ExtendedPiece(\"pawn\", \"black\", 6, 5, \"images/blackPAWN.png\", \"square-6-5\", this);\n//   this.game.board[6][6] = new ExtendedPiece(\"pawn\", \"black\", 6, 6, \"images/blackPAWN.png\", \"square-6-6\", this);\n//   this.game.board[6][7] = new ExtendedPiece(\"pawn\", \"black\", 6, 7, \"images/blackPAWN.png\", \"square-6-7\", this);\n  \n//     // Add WHITE pieces\n//   this.game.board[0][0] = new ExtendedPiece(\"rook\", \"white\", 0, 0, \"images/whiteROOK.png\", \"square-0-0\", this);\n//   this.game.board[0][1] = new ExtendedPiece(\"knight\", \"white\", 0, 1, \"img/whiteKNIGHT.png\", \"square-0-1\", this);\n//   this.game.board[0][2] = new ExtendedPiece(\"bishop\", \"white\", 0, 2, \"img/whiteBISHOP.png\", \"square-0-2\", this);\n//   this.game.board[0][3] = new ExtendedPiece(\"queen\", \"white\", 0, 3, \"images/whiteQUEEN.png\", \"square-0-3\", this);\n//   this.game.board[0][4] = new ExtendedPiece(\"king\", \"white\", 0, 4, \"images/whiteKING.png\", \"square-0-4\", this);\n//   this.game.board[0][5] = new ExtendedPiece(\"bishop\", \"white\", 0, 5, \"img/whiteBISHOP.png\", \"square-0-5\", this);\n//   this.game.board[0][6] = new ExtendedPiece(\"knight\", \"white\", 0, 6, \"img/whiteKNIGHT.png\", \"square-0-6\", this);\n//   this.game.board[0][7] = new ExtendedPiece(\"rook\", \"white\", 0, 7, \"images/whiteROOK.png\", \"square-0-7\", this);\n  \n//       //Add white pawns\n//   this.game.board[1][0] = new ExtendedPiece(\"pawn\", \"white\", 1, 0, \"images/whitePAWN.png\", \"square-1-0\", this);\n//   this.game.board[1][1] = new ExtendedPiece(\"pawn\", \"white\", 1, 1, \"images/whitePAWN.png\", \"square-1-1\", this);\n//   this.game.board[1][2] = new ExtendedPiece(\"pawn\", \"white\", 1, 2, \"images/whitePAWN.png\", \"square-1-2\", this);\n//   this.game.board[1][3] = new ExtendedPiece(\"pawn\", \"white\", 1, 3, \"images/whitePAWN.png\", \"square-1-3\", this);\n//   this.game.board[1][4] = new ExtendedPiece(\"pawn\", \"white\", 1, 4, \"images/whitePAWN.png\", \"square-1-4\", this);\n//   this.game.board[1][5] = new ExtendedPiece(\"pawn\", \"white\", 1, 5, \"images/whitePAWN.png\", \"square-1-5\", this);\n//   this.game.board[1][6] = new ExtendedPiece(\"pawn\", \"white\", 1, 6, \"images/whitePAWN.png\", \"square-1-6\", this);\n//   this.game.board[1][7] = new ExtendedPiece(\"pawn\", \"white\", 1, 7, \"images/whitePAWN.png\", \"square-1-7\", this);\n  \n//   console.log(\"Initializing the board...\");\n//   console.log(\"Initial board state:\", this.game.board);\n//  // this.renderBoard(this.game.board);\n//   this.squareElements = document.querySelectorAll(\".chess-square\");\n//   console.log(\"chesspiece in populateBoardWithPieces\", ExtendedPiece);\n//   // this.registerPieceClickHandlers();\n\n//   // await this.defineExtendedPiece();\n//   console.log(\"Board initialization completed.\");\n//   return Promise.resolve();\n// }\n\ninitializeEmptyBoard() {\n  this.game.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n}\n\n\nasync runChessGame() {\n  try {\n    this.defineExtendedPiece();\n    const { chessArray, chessBoard, chessGame } = await this.initialize(game, this.pieces);\n    \n    this.chessArray = chessArray;\n    this.chessBoard = chessBoard;\n    this.chessGame = chessGame;\n    this.game = game;\n\n    console.log(\"Chess game is running...\");\n    console.log(\"chessArray:\", this.chessArray);\n    console.log(\"chessBoard:\", this.chessBoard);\n    console.log(\"chessGame:\", this.chessGame);\n\n    this.game.runChessGame();\n  } catch (error) {\n    console.error(\"Failed to run the chess game:\", error);\n  }\n}\nregisterPieceClickHandlers() {\n    this.chessPieces.forEach((piece) => {\n        const pieceElement = piece.getDOMElement(); // Assuming getDOMElement() returns the DOM element of the piece\n        pieceElement.addEventListener(\"click\", (event) => {\n            piece.handleClick(event);\n            \n        }, { once: true });\n    });\n}\n\n\nsetupInitialPosition(pieces, chessBoard, game, chessArray) {\n  pieces.forEach((piece) => {\n    const { type, color, row, col, imagePath, elementId } = piece;\n\n    if (!validPieceTypes.includes(type)) {\n      throw new Error(`Invalid piece type: ${type}`);\n    }\n\n    const newChessPiece = new ChessPiece(type, color, row, col, imagePath, elementId, game);\n    chessBoard.addPiece(newChessPiece);\n    this.board.push(newChessPiece);\n    chessArray.addPiece(newChessPiece);\n\n    const squareElement = document.getElementById(elementId); // Use the provided elementId directly\n    squareElement.innerHTML = `<div class=\"chess-piece ${color}-${type}\"></div>`;\n    squareElement.classList.add('has-piece');\n    squareElement.querySelector('.chess-piece').style.backgroundImage = `url(${imagePath})`;\n    squareElement.style.gridRow = row + 1; // Adjust the grid row and column values\n    squareElement.style.gridColumn = col + 1;\n  });\n}\n\n  createPieceFromBoard()\n  {\n    this.chessBoard.forEach((row, i) => {\n      row.forEach((square, j) => {\n        if (square) {\n          const chessPiece = this.createPiece(this.type, this.color, this.row, this.col, this.imagePath, this.elementId, this.game);\n          this.addPiece(chessPiece);\n        }\n      });\n    }); \n  }\ncreatePiece(type, color, row, col, imagePath, elementId, game) {\n    const chessPiece = new ChessPiece(type, color, row, col, imagePath, elementId, this.game);\n    // add chessPiece to chessPieces array\n    this.chessPieces.push(chessPiece); \n    this.placePieces(chessPiece);\n    return chessPiece;\n  }\n\n\nplacePieces() {\n    this.chessPieces.forEach((piece) => {\n      const square = this.squareElements[piece.position];\n      square.innerHTML = piece.html;\n    });\n  }\n\naddPiece(chessPiece) {\n  // Add the piece to the pieces array\n  this.chessPieces.push(chessPiece);\n  console.log(\"adding piece to the array :\", chessPiece)\n\n  // Update the board array with the new piece\n  this.board[chessPiece.row][chessPiece.col] = chessPiece;\nconsole.log(\"updating board array :\",  this.board[chessPiece.row][chessPiece.col])\n  // Create an <img> element for the piece\n  const img = document.createElement(\"img\");\n  img.src = chessPiece.imagePath;\n\n  // Append the <img> element to the element for the square\n  const squareElement = document.getElementById(chessPiece.elementId);\n  squareElement.appendChild(img);\n}\n\nverifyPiecePlacement() {\n  const squares = document.querySelectorAll(\".chess-square\");\n  squares.forEach((square) => {\n    const piece = square.firstElementChild;\n    if (piece) {\n      console.log(`chessPieces: ${piece.dataset.chessPieces} placed in square with class/id: ${square.className}`);\n    } else {\n      console.log(`No piece placed in square with class/id: ${square.className}`);\n    }\n  });\n}\n\nsetGame(game) {\n  this.game = game;\n}\n\n// clearValidMoves() {\n//   const highlightedSquares = document.querySelectorAll(\".chess-square.valid-move\");\n//   highlightedSquares.forEach(square => {\n//     square.classList.remove(\"valid-move\");\n//         square.classList.remove(\"pattern\");\n\n//   });\n// }\n\n\n// async handleSquareClick(event) {\n//   let targetSquare;\n//   targetSquare = event.target;\n//   console.log(\"handleSquareClick called\");\n//   const clickedSquare = event.target.closest(\".chess-square\");\n//   const clickedSquareRow = parseInt(clickedSquare.dataset.row) - 1;\n//   const clickedSquareCol = parseInt(clickedSquare.dataset.col) - 1;\n//   console.log(\"Parsed clickedSquareRow:\", clickedSquareRow);\n//   console.log(\"Parsed clickedSquareCol:\", clickedSquareCol);\n//   const clickedPiece = this.board[clickedSquareRow][clickedSquareCol];\n\n//   console.log('clickedSquare:', clickedSquare);\n//   console.log('clickedSquareRow:', clickedSquareRow);\n//   console.log('clickedSquareCol:', clickedSquareCol);\n//   console.log(\"Square data attributes:\", clickedSquare.dataset);\n//   console.log(\"Entire board:\", this.board);\n//   console.log(\"Specific row:\", this.board[clickedSquareRow]);\n//   console.log(\"Specific cell:\", this.board[clickedSquareRow][clickedSquareCol]);\n//   console.log('clickedPiece:', clickedPiece);\n//   console.log(\"Target square ID before movePiece:\", clickedSquare.id);\n//   console.log(\"Game board before movePiece:\", this.board);\n\n//   console.log(\"Handling square click event. Target:\", event.target);\n\n//   if (this.currentlySelectedPiece === null) {\n//     if (clickedPiece !== null && clickedPiece.color === this.currentPlayer) {\n//       this.currentlySelectedPiece = clickedPiece;\n//       if (this.currentPlayer === clickedPiece.color) {\n//         this.currentlySelectedPiece.element.classList.add(\"selected-piece\");\n//         this.currentlySelectedPiece.showValidMoves(this.currentlySelectedPiece);\n//         console.log(\"validmoves called\");\n//       }\n//     }\n//   } else {\n//     if (this.currentlySelectedPiece.row === clickedSquareRow && this.currentlySelectedPiece.col === clickedSquareCol) {\n//       this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//       this.clearValidMoves();\n//       this.currentlySelectedPiece = null;\n//     } else {\n//       const pieceElement = this.currentlySelectedPiece.element;\n//       const destinationElement = clickedSquare;\n//       const moveResult = this.movePiece(targetSquare, this.game, pieceElement, destinationElement);\n\n//       if (moveResult) {\n//         this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//         this.currentlySelectedPiece = null;\n//         console.log(\"Game board after movePiece:\", this.board);\n//       } else {\n//         this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//         this.clearValidMoves();\n//         this.currentlySelectedPiece = null;\n//       }\n//     }\n//   }\n// }\n\n// async handleSquareClick(event) {\n//   let targetSquare;\n//   targetSquare = event.target;\n//   console.log(\"handleSquareClick called\");\n//   const clickedSquare = event.target.closest(\".chess-square\");\n//   const clickedSquareRow = parseInt(clickedSquare.dataset.row) - 1;\n//   const clickedSquareCol = parseInt(clickedSquare.dataset.col) - 1;\n//   console.log(\"Parsed clickedSquareRow:\", clickedSquareRow);\n//   console.log(\"Parsed clickedSquareCol:\", clickedSquareCol);\n//   const clickedPiece = this.board[clickedSquareRow][clickedSquareCol];\n\n//   console.log('clickedSquare:', clickedSquare);\n//   console.log('clickedSquareRow:', clickedSquareRow);\n//   console.log('clickedSquareCol:', clickedSquareCol);\n//   console.log(\"Square data attributes:\", clickedSquare.dataset);\n//   console.log(\"Entire board:\", this.board);\n//   console.log(\"Specific row:\", this.board[clickedSquareRow]);\n//   console.log(\"Specific cell:\", this.board[clickedSquareRow][clickedSquareCol]);\n//   console.log('clickedPiece:', clickedPiece);\n//   console.log(\"Target square ID before movePiece:\", clickedSquare.id);\n//   console.log(\"Game board before movePiece:\", this.board);\n\n//   console.log(\"Handling square click event. Target:\", event.target);\n\n//  if (this.currentlySelectedPiece === null) {\n//     if (clickedPiece !== null && clickedPiece.color === this.currentPlayer) {\n//       this.currentlySelectedPiece = clickedPiece;\n//       if (this.currentPlayer === clickedPiece.color) {\n//         this.currentlySelectedPiece.element.classList.add(\"selected-piece\");\n//         this.currentlySelectedPiece.showValidMoves(this.currentlySelectedPiece);\n//         console.log(\"validmoves called\");\n//       }\n//     }\n//   } else {\n//     const isValidMove = this.currentlySelectedPiece.validMoves.some(move => move.row === clickedSquareRow && move.col === clickedSquareCol);\n    \n//     if (isValidMove) {\n//       // Code block to handle the actual move\n//       const pieceElement = this.currentlySelectedPiece.element;\n//       const destinationElement = clickedSquare;\n//       const moveResult = await this.movePiece(targetSquare, this.game, pieceElement, destinationElement);\n\n//       if (moveResult) {\n//         this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//         this.clearValidMoves();\n//         this.currentlySelectedPiece = null;\n//         console.log(\"Game board after movePiece:\", this.board);\n//       } \n//     } else if (this.currentlySelectedPiece.row === clickedSquareRow && this.currentlySelectedPiece.col === clickedSquareCol) {\n//       // Deselecting the currently selected piece\n//       this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//       this.clearValidMoves();\n//       this.currentlySelectedPiece = null;\n//     } else {\n//       // Clicked on an invalid square or another piece\n//       this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//       this.clearValidMoves();\n//       this.currentlySelectedPiece = null;\n//     }\n//   }\n// }\n\n\nresetBoardColors() {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const square = document.getElementById(`square-${col}-${row}`);\n      if (square) {  // Make sure the square exists\n        square.classList.remove(\"light\", \"dark\");\n        if ((row + col) % 2 === 0) {\n          square.classList.add(\"dark\");\n        } else {\n          square.classList.add(\"light\");\n        }\n      } else {\n        console.error(`Square at ${col}-${row} not found.`);\n      }\n    }\n  }\n}\n\n  \n  removePiece(row, col) {\n  // Get the piece at the specified position on the board\n  const chessPieces = this.board[row][col];\n\n  // If there is a piece at the specified position...\n  if (chessPieces) {\n    // Remove the piece from the pieces array\n    const index = this.chessPieces.indexOf(chessPieces);\n    this.chessPieces.splice(index, 1);\n\n    // Remove the piece's element from the square element\n    const squareElement = this.squareElements[row * 8 + col];\n    squareElement.innerHTML = '';\n\n    // Update the board array to remove the piece\n    this.chessBoard[row][col] = null;\n  }\n}\n\n\ngetPiece(row, col) {\n  console.log('getPiece function called');\n    if (row < 0 || row > 7 || col < 0 || col > 7) {\n        return null;\n    }\n    return this.game.board[row][col];\n}\n\n\n    movePiece(targetSquare, game, pieceElement, destinationElement) {\n      console.log('Target Square:', targetSquare);\n      console.log('Game:', game);\n      console.log('Destination Element:', destinationElement)\n      pieceElement = document.querySelector(\".selected-piece\");\n      console.log('Piece Element in movePiece:', pieceElement);\n      console.log(\"Current context of this in movePiece:\", this);\n      console.log(\"game in in movePiece\", game);\n      console.log(\"game.game.board in movePiece\", game.game.board);\n\n\n        if (!this.validateMoveInputs(targetSquare, game, pieceElement, destinationElement)) {\n            return false;\n        }\n         this.selectPiece(pieceElement);\n\n        const targetCoords = this.getSquareCoords(targetSquare);\n        console.log(\"targetCoords in movePiece :\", targetCoords);\n        if (!this.validateCoords(targetCoords, game)) {\n            return false;\n        }\n\n       const selectedElement = this.getSelectedPieceElement();\n       const parentElement = this.selectedPieceParent; // Use the stored parent\n        console.log(\"Parent element in movePiece :\", parentElement);\n\n        console.log('selectedElement', selectedElement);\n        if (!selectedElement) {\n            console.log(\"Selected piece not found.\");\n            return false;\n        }\n\n\n\n        if (!parentElement) {\n            console.log(\"Parent element not found.\");\n            return false;\n        }\n\n        const originalCoords = this.getSquareCoords(parentElement);\n        if (!this.validateCoords(originalCoords)) {\n          console.log('false corords');\n            return false;\n        }\n\n\n        if (targetSquare.classList.contains('valid-move')) {\n          console.log('validmove entered trying to call executemove');\n          this.executeMove(originalCoords, targetCoords, selectedElement, parentElement, game);\n          \n          console.log('selectedElement.row', selectedElement.row);\n          const chessPiece = this.getPiece(selectedElement.row, selectedElement.col);\n          console.log('chessPiece right after executeMovecalled in movepiece.');\n          // Check and handle the rift after executing the move\n            if (chessPiece) {\n              console.log(\"trying to call postMoveActions\");\n               // Call postMoveActions on the ChessPiece instance\n            chessPiece.postMoveActions(targetCoords);\n        } else {\n            console.error(\"ChessPiece instance not found for the selected element.\");\n        }\n\n\n            console.log('this context in removePiece before calling updateGameStateInMovePiece', this);\n            this.updateGameStateInMovePiece(targetSquare, destinationElement, game);\n            return true;\n        }\n        \n        console.log(\"Invalid move attempted.\");\n        return false;\n    }\n    isPieceInRift(targetCoords, game) {\n      console.log('isPieceInRift function called');\n    const riftArea = game.getRiftArea();\n    console.log(\"Rift Area:\", riftArea);\n    console.log(\"Target Coordinates:\", targetCoords);\n\n    return riftArea.some(([riftRow, riftCol]) => {\n        console.log(`Checking rift position: (${riftRow}, ${riftCol}) against target position: (${targetCoords.row}, ${targetCoords.col})`);\n        return riftRow === targetCoords.row && riftCol === targetCoords.col;\n    });\n}\n\n    // Helper Functions\n    validateMoveInputs(targetSquare, game, pieceElement, destinationElement) {\n    if (!targetSquare || !game || !pieceElement || !destinationElement) {\n        console.error('Invalid arguments.', \"targetSquare\", targetSquare, \"game\", game, \"pieceElement\", pieceElement, \"destinationElement\", destinationElement);\n        return false;\n    }\n    return true;\n}\n\n\n    getSquareCoords(square) {\n    return {\n        row: parseInt(square.dataset.row, 10),\n        col: parseInt(square.dataset.col, 10)\n    };\n}\nvalidateCoords({ row, col }) {\n    const isRowValid = row >= 0 && row < 8; // Board size is hardcoded to 8x8\n    const isColValid = col >= 0 && col < 8;\n\n    if (!isRowValid || !isColValid) {\n        console.error('Invalid target row or column.');\n        return false;\n    }\n    return true;\n}\n\n//     validateCoords({ row, col }, game) {\n//     console.log(\"Current context of this in validateCoords:\", this);\n//     // console.log(\"game.game in validateCoords\", this.game.game);\n    \n//     // console.log(\"this.game in validateCoords\", this.game);\n//     console.log(\"game.game.board in validateCoords\", game.game.board);\n//     console.log(\"game.game.board in validateCoords.length\", game.game.board.length);\n//     const lengthRow = game.game.board.length;\n//     const lengthCol = game.game.board[0].length;\n//     console.log(\"lengthRow\", lengthRow);\n//     console.log(\"lengthCol\", lengthCol);\n//     const isRowValid = row >= 0 && row < lengthRow;\n//     console.log(\"isRowValid in validateCoords\", isRowValid);\n\n//     const isColValid = col >= 0 && col < lengthCol;\n//     console.log(\"isColValid in validateCoords\", isColValid);\n\n//     if (!isRowValid || !isColValid) {\n//         console.error('Invalid target row or column.');\n//         return false;\n//     }\n//     console.log('end of validateCoords funtion');\n//     return true;\n// }\n\n    selectPiece(pieceElement) {\n      console.log(\"pieceElement in selecPiece function :\", pieceElement);\n        if (pieceElement && pieceElement instanceof Element) {\n            this.selectedPieceElement = pieceElement;\n            this.selectedPieceParent = pieceElement.parentNode;\n            console.log(\"this.selectedPieceParent in selectPiece :\", this.selectedPieceParent);\n\n\n            pieceElement.classList.add('selected-piece');\n        } else {\n            console.error('Invalid piece element selected:', pieceElement);\n        }\n    }\n\n    deselectPiece() {\n        if (this.selectedPieceElement) {\n            this.selectedPieceElement.classList.remove('selected-piece');\n            this.selectedPieceElement = null;\n        }\n    }\n\n    getSelectedPieceElement() {\n        return this.selectedPieceElement;\n    }\n\n    executeMove(originalCoords, targetCoords, selectedElement, oldSquare, game) {\n      console.log(\"this context in executeMove in classBoard\", this);\n      console.log(\"game context in executeMove in classBoard\", game);\n      console.log(\"game.board in executeMove in classBoard\", game.game.board);\n      console.log(\"oldSquare in executeMove in classBoard\", oldSquare);\n\n\n      const { row: originalRow, col: originalCol } = originalCoords;\n      const { row: targetRow, col: targetCol } = targetCoords;\n\n      // Update the board data\n      game.game.board[originalRow][originalCol] = null;\n      game.game.board[targetRow][targetCol] = this.currentlySelectedPiece;\n\n      // Move the piece element on the UI\n      const newSquare = document.querySelector(`#square-${targetRow}-${targetCol}`);\n      console.log(\"newSquare in executeMove in classBoard\", newSquare);\n      console.log(\"selectedElement in executeMove in classBoard\", selectedElement);\n      oldSquare.removeChild(selectedElement);\n      newSquare.appendChild(selectedElement);\n\n      // Update UI and piece position\n      selectedElement.style.gridRow = targetRow + 1;\n      selectedElement.style.gridColumn = targetCol + 1;\n      selectedElement.classList.remove(\"selected-piece\");\n\n      this.currentlySelectedPiece = null;\n      this.resetBoardColors();\n      // Post-move actions specific to the chess piece\n    // const chessPiece = this.getPiece(targetCoords.row, targetCoords.col);\n    // console.log('testest chessPiece', chessPiece);\n    // if (chessPiece) {\n    //     chessPiece.postMoveActions(targetCoords);\n    // } else {\n    //     console.error(\"ChessPiece instance not found after move.\");\n    // }\n\n    // // Update the game state, including handling active spells and turn changes\n    // this.updateGameStateInMovePiece();\n\n    // console.log(\"Ending executeMove\");\n  }\n   \n\n\n//   movePiece(targetSquare, game, pieceElement, destinationElement) {\n//     console.log(\"movePiece function in classBoard.js called\"); \n//     console.log(\"game in movePiece:\", game);\n//     console.log(\"this.game in movePiece:\", this.game);\n//     console.log('this.game.board at the beginning of movePiece function', this.game.board);\n\n//     console.log(\"targetSquare in movePiece:\", targetSquare);\n//     console.log(\"pieceElement in movePiece:\", pieceElement);\n//     console.log(\"destinationElement in movePiece:\", destinationElement);\n//         console.log(\"this.selectedPiece in movePiece:\", this.selectedPiece);\n\n\n//     if (!targetSquare || !game || !pieceElement || !destinationElement) \n//     {\n//       console.error('Invalid arguments.');\n//       return false;\n//     }\n\n//     const targetRow = parseInt(targetSquare.dataset.row, 10);\n//     const targetCol = parseInt(targetSquare.dataset.col, 10);\n//     this.setGame(game);\n//     console.log(\"game set\", this.setGame(game));\n\n//     if (isNaN(targetRow) || isNaN(targetCol)) \n//     {\n//       console.error('Invalid target row or column.');\n//       return false;\n//     }\n\n//     // Check if a piece is selected and find it on the board\n//     const selectedElement = document.querySelector('.selected-piece');\n//     if (selectedElement) \n//     {\n//       const parentElement = selectedElement.closest('.chess-square');\n//        if (parentElement) {\n//       console.log('pieceFound, aka selectedElement', selectedElement);\n//       console.log('squareFound', parentElement);\n//       console.log('Dataset row:', parentElement.dataset.row);\n//       console.log('Dataset col:', parentElement.dataset.col);\n//       const row = parseInt(parentElement.dataset.row, 10);\n//       const col = parseInt(parentElement.dataset.col, 10);\n\n//       console.log('row from parseInt:', row);\n//       console.log('col from parseInt:', col);\n      \n//       console.log(\"Is row >= 0?\", row >= 0);\n//       console.log(\"Is col >= 0?\", col >= 0);\n//       console.log(\"Board length:\", this.board.length);\n//       console.log(\"this.game.board :\", this.game.board);\n//       console.log(\"this.boardElement :\", this.boardElement);\n\n\n//       console.log(\"Is row < this.board.length?\", row < this.board.length);\n//       console.log(\"Is col < this.board[0].length?\", col < this.game.board[0].length);\n//       console.log(\"Board dimensions:\", this.game.board.length, this.game.board[0].length);\n      \n//       if (row >= 0 && col >= 0 && row < this.game.board.length && col < this.game.board[0].length) \n//       {\n//         console.log(`Board piece at [${row}][${col}]:`, this.game.board[row][col]);\n//         // console.log(\"this.game.board:\", JSON.parse(JSON.stringify(this.game.board)));\n//         this.currentlySelectedPiece = this.game.board[row][col];\n//                  console.log(\"this.currentlySelectedPiece right after its initialization :\", this.currentlySelectedPiece);\n\n//         } else {\n//           console.log(\"Row and/or Col are out of bounds.\");\n//         }\n//       } else {\n//         console.log(\"Parent element not found.\");\n//       }\n//     } else {\n//       console.log(\"Selected piece not found.\");\n//     }\n\n//        // console.log(validMoves);\n//       console.log(\"Target Row:before invalidmove statement:\", targetRow);\n//       console.log(\"Target Col:before invalidmove statement:\", targetCol);\n//      // console.log(\"Board before move:\", JSON.stringify(this.game.board));\n\n//       if (targetSquare.classList.contains('valid-move')) {\n      \n// const parentElement = selectedElement.closest('.chess-square');\n// console.log(\"parentElement\", parentElement);\n//       // Perform the actual move\n//       const originalRow = parseInt(parentElement.dataset.row, 10);\n//       const originalCol = parseInt(parentElement.dataset.col, 10);\n//       console.log(\"originalCol\", originalCol);\n//             console.log(\"originalRow\", originalRow);\n\n//       this.game.board[originalRow][originalCol] = null;\n//       this.game.board[targetRow][targetCol] = this.currentlySelectedPiece;\n      \n      \n\n//       // Get the parent (square) of the piece that needs to be moved\n//       const oldSquare = parentElement.closest('.chess-square');\n//        console.log(\"this.currentlySelectedPiece.element :\", this.currentlySelectedPiece.element);\n//       console.log(\"this.currentlySelectedPiece :\", this.currentlySelectedPiece);\n//       console.log(\"oldSquare before attempting to remove child:\", oldSquare);\n\n//       // Get the new square where the piece should go\n//       const newSquare = document.querySelector(`#square-${targetRow}-${targetCol}`);\n      \n//       console.log(\"targetRow :\", targetRow);\n//       console.log(\"targetCol :\", targetCol);\n//       const actualPieceElement = oldSquare.querySelector('.chess-piece');\n//       console.log('actualPieceElement', actualPieceElement);\n\n//     // Remove the original piece from oldSquare\n//      if (oldSquare && actualPieceElement) \n//      {\n//       console.log('Properties before removal:', actualPieceElement.classList, actualPieceElement.style);\n//       console.log('actualPieceElement', actualPieceElement);\n//       console.log(\"newSquare :\", newSquare);\n      \n//       window.requestAnimationFrame(() => {\n//         oldSquare.removeChild(actualPieceElement);\n//         newSquare.appendChild(actualPieceElement);\n\n//         if (!oldSquare.querySelector('.chess-piece')) {\n//         oldSquare.removeAttribute(\"data-color\");\n//         oldSquare.removeAttribute(\"data-type\");\n//         oldSquare.classList.remove(\"has-piece\");\n//             oldSquare.style.backgroundImage = '';\n      \n//       // Assuming the piece type and color are stored in the class of actualPieceElement\n//     const pieceType = actualPieceElement.className.split(' ')[1]; // e.g., \"white-pawn\"\n//     const [pieceColor, pieceName] = pieceType.split('-'); // Split into \"white\" and \"pawn\"\n\n       \n//         newSquare.setAttribute(\"data-type\", pieceType);\n//         newSquare.setAttribute(\"data-color\", pieceColor);\n//         newSquare.classList.add(\"has-piece\");\n\n// }\n//       });\n//           // Update the piece's DOM properties\n//       actualPieceElement.style.gridRow = targetRow + 1;\n//       actualPieceElement.style.gridColumn = targetCol + 1;\n//       actualPieceElement.classList.remove(\"selected-piece\");\n      \n//       // Deselect the piece after moving\n      \n//       console.log('Properties after removal:', actualPieceElement.classList, actualPieceElement.style);\n     \n//       this.currentlySelectedPiece = null;\n     \n//       newSquare.offsetHeight; // no need to store this anywhere, just access it\n//       const gridRow = targetRow + 1; // CSS grid lines start at 1, not 0\n//       const gridColumn = targetCol + 1;\n//         // Set the grid-area style on the new square to place it correctly\n//       newSquare.style.gridArea = `${gridRow} / ${gridColumn}`;\n\n//       // Append the actual piece to the wrapper\n//       console.log('Actual Piece Element before appendChild method:', actualPieceElement);\n      \n           \n//       console.log('Actual Piece Element after appendChild method:', actualPieceElement);\n       \n//       console.log(\"newSquare.outerHTML\", newSquare.outerHTML);\n//       console.log(\"newSquare.innerHTML\", newSquare.innerHTML);\n    \n//     }\n      \n//     //this.currentlySelectedPiece.element = actualPieceElement;\n\n\n//       console.log(\"destinationElement: \", destinationElement);\n//       console.log(\"destinationElement children: \", destinationElement.children);\n\n\n// //       Array.from(oldSquare.children).forEach(child => {\n// //     console.log(\"Iterating child: \", child);\n// //     if (child && child.classList && child.classList.contains(\"pattern\")) {\n// //         console.log(\"Removing child: \", child);\n// //         destinationElement.removeChild(child);\n// //     }\n// // });\n\n\n//       this.resetBoardColors();\n//           console.log(\"destinationElement right before Updategamestatecall in movePiece:\", destinationElement);\n\n     \n//       // this.currentlySelectedPiece.element.style.gridRow = targetRow + 1;\n//       // this.currentlySelectedPiece.element.style.gridColumn = targetCol + 1;\n\n//       this.currentPlayer = this.currentPlayer === \"white\" ? \"black\" : \"white\";\n//       this.game.currentPlayer = this.currentPlayer;\n//       this.game.checkGameStatus();\n//       this.clearValidMoves();\n//       // oldSquare.clearValidMoves();\n\n//       this.moveHistory.push\n//       ({\n//         piece: this.currentlySelectedPiece,\n//         from: { row: originalRow, col: originalCol },\n//         to: {row: targetRow, col: targetCol }\n//       });\n//       actualPieceElement.classList.remove(\"selected-piece\");\n//         this.currentlySelectedPiece = null;\n//       //this.currentlySelectedPiece.element.classList.remove(\"selected-piece\");\n//       // oldSquare.removeChild(this.currentlySelectedPiece.element);\n      \n//       // this.currentlySelectedPiece = null;\n//       console.log('this.game.board at the end of movePiece function', this.game.board);\n//       // console.log(\"Board after move:\", JSON.stringify(this.game.board));\n//        this.updateGameState(event, actualPieceElement, destinationElement, game);\n//       console.log(\"piecemoved\");\n//       console.log(\"newSquare\", newSquare);\n//       console.log(\"actualPieceElement\", actualPieceElement);\n     \n//       return true;\n// }\n    // }\n//   movePiece(targetSquare, game, pieceElement, destinationElement) {\n//   if (!this.isValidMove(targetSquare, game, pieceElement, destinationElement)) {\n//     return false;\n//   }\n  \n//   const targetRow = parseInt(targetSquare.dataset.row, 10);\n//   const targetCol = parseInt(targetSquare.dataset.col, 10);\n//   this.setGame(game);\n//   const selectedPieceElement = this.getSelectedPieceElement();\n//   const oldSquare = this.findSquareOfSelectedPiece(selectedPieceElement);\n//   const originalPosition = this.getPiecePosition(oldSquare);\n  \n//   this.updateBoardState(originalPosition, targetRow, targetCol);\n//   this.movePieceOnBoard(selectedPieceElement, oldSquare, destinationElement, targetCol, targetRow);\n//   this.updatePieceDOMProperties(selectedPieceElement, targetRow, targetCol);\n//   this.deselectPiece(selectedPieceElement);\n  \n//   this.currentPlayer = this.togglePlayerTurn();\n//   this.game.checkGameStatus();\n//   this.clearValidMoves();\n  \n//   this.addToMoveHistory(selectedPieceElement, originalPosition, targetRow, targetCol);\n//   this.updateGameState(event, selectedPieceElement, destinationElement, game);\n  \n//   return true;\n// }\n\n// isValidMove(targetSquare, game, pieceElement, destinationElement) {\n//   if (!targetSquare || !game || !pieceElement || !destinationElement) {\n//     console.error('Invalid arguments.');\n//     return false;\n//   }\n\n//   const targetRow = parseInt(targetSquare.dataset.row, 10);\n//   const targetCol = parseInt(targetSquare.dataset.col, 10);\n//   this.setGame(game);\n\n//   if (isNaN(targetRow) || isNaN(targetCol)) {\n//     console.error('Invalid target row or column.');\n//     return false;\n//   }\n\n//   const selectedPieceElement = this.getSelectedPieceElement();\n//   if (!selectedPieceElement) {\n//     console.log(\"Selected piece not found.\");\n//     return false;\n//   }\n\n//   const oldSquare = this.findSquareOfSelectedPiece(selectedPieceElement);\n//   if (!oldSquare) {\n//     console.log(\"Parent element not found.\");\n//     return false;\n//   }\n\n//   return true;\n// }\n\n// getSelectedPieceElement() {\n//   return document.querySelector('.selected-piece');\n// }\n\n// findSquareOfSelectedPiece(selectedPieceElement) {\n//   return selectedPieceElement.closest('.chess-square');\n// }\n\n// getPiecePosition(square) {\n//   return {\n//     row: parseInt(square.dataset.row, 10),\n//     col: parseInt(square.dataset.col, 10)\n//   };\n// }\n\n// updateBoardState(originalPosition, targetRow, targetCol) {\n//   this.game.board[originalPosition.row][originalPosition.col] = null;\n//   this.game.board[targetRow][targetCol] = this.currentlySelectedPiece;\n// }\n\n// movePieceOnBoard(selectedPieceElement, oldSquare, destinationElement, targetCol, targetRow) {\n//   const actualPieceElement = this.getActualPieceElement(selectedPieceElement, oldSquare);\n//   const newSquare = this.getNewSquare(targetRow, targetCol);\n\n//   if (actualPieceElement && newSquare) {\n//     oldSquare.removeChild(actualPieceElement);\n//     const clonedPieceElement = actualPieceElement.cloneNode(true); // Clone the actual piece element\n//     newSquare.appendChild(clonedPieceElement); // Append the cloned piece element to the new square\n\n//     if (!oldSquare.querySelector('.chess-piece')) {\n//       this.clearSquareData(oldSquare);\n//     }\n//   }\n// }\n// getActualPieceElement(selectedPieceElement, oldSquare) {\n//   const actualPieceElement = oldSquare.querySelector('.chess-piece');\n//   return actualPieceElement;\n// }\n\n// getNewSquare(targetRow, targetCol) {\n//   console.log(\"targetCol\", targetCol);\n//   console.log(\"targetRow\", targetRow);\n\n//   return document.getElementById(`square-${targetRow}-${targetCol}`);\n// }\n\n// clearSquareData(square) {\n//   square.removeAttribute(\"data-color\");\n//   square.removeAttribute(\"data-type\");\n//   square.classList.remove(\"has-piece\");\n//   square.style.backgroundImage = '';\n// }\n\n// updatePieceDOMProperties(selectedPieceElement, targetRow, targetCol) {\n//   selectedPieceElement.style.gridRow = targetRow + 1;\n//   selectedPieceElement.style.gridColumn = targetCol + 1;\n// }\n\n// deselectPiece(selectedPieceElement) {\n//   selectedPieceElement.classList.remove(\"selected-piece\");\n//   this.currentlySelectedPiece = null;\n// }\n\n// togglePlayerTurn() {\n//   return this.currentPlayer === \"white\" ? \"black\" : \"white\";\n// }\n\n// addToMoveHistory(selectedPieceElement, originalPosition, targetRow, targetCol) {\n//   this.moveHistory.push({\n//     piece: this.currentlySelectedPiece,\n//     from: { row: originalPosition.row, col: originalPosition.col },\n//     to: { row: targetRow, col: targetCol }\n//   });\n// }\n// clearValidMoves() {\n//     const validMoveSquares = document.querySelectorAll('.valid-move');\n//     validMoveSquares.forEach(square => {\n//         square.classList.remove('valid-move');\n//         square.innerHTML = '';\n//     });\n// }\n    \n   \n\n  createBoardElements() \n  {\n    this.squareElements = [];\n    for (let i = 0; i < 8; i++) \n    {\n      this.squareElements[i] = [];\n      for (let j = 0; j < 8; j++) \n      {\n        this.squareElements[i][j] = document.getElementById(`${i}-${j}`);\n      }\n    }\n    this.displayBoard();\n     //console.log(\"Initial board state:\", this.chessBoard);\n  }\n\nisCheck(color) {\n  const [opponentPieces, king] = color === \"white\" ? [this.blackPieces, this.whiteKing] : [this.whitePieces, this.blackKing];\n\n  return opponentPieces.some(piece => \n    piece.calculateValidMoves(piece.row, piece.col, this.chessBoard)\n      .some(move => move.row === king.row && move.col === king.col)\n  );\n}\n\n isCheckmate(color) {\n  if (!this.isCheck(color)) {\n    return false;\n  }\n\n  // Check if there is any move that can get the player out of check\n  for (const piece of this.getValidPieces(color)) {\n    const validMoves = piece.calculateValidMoves(piece.row, piece.col, this.chessBoard);\n    for (const move of validMoves) {\n      const [targetRow, targetCol] = move;\n      if (!this.isBlocked(piece.row, piece.col, targetRow, targetCol)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n  isDraw() {\n  // Check if there are only kings left on the board\n  if (this.getNumWhitePieces() === 1 && this.getNumBlackPieces() === 1) {\n    return true;\n  }\n\n  // Check if there are only kings and bishops left on the board\n  if (this.getNumWhitePieces() === 2 && this.getNumBlackPieces() === 2) {\n    // Check that each player has one bishop\n    if (this.getNumWhiteBishops() === 1 && this.getNumBlackBishops() === 1) {\n      return true;\n    }\n  }\n\n  // If none of the above conditions are met, the game is not a draw\n  return false;\n}\n\ngetNumBishops(color) {\n  return (color === \"white\" ? this.whitePieces : this.blackPieces)\n          .filter(piece => piece instanceof Bishop).length;\n}\n\ngetNumPieces(color) {\n  return (color === \"white\" ? this.whitePieces : this.blackPieces).length;\n}\n  generateBoardHTML() {\n  let boardHTML = '';\n  for (let row = 0; row < this.numRows; row++) {\n    for (let col = 0; col < this.numCols; col++) {\n      const square = this.chessBoard[row][col];\n      const piece = this.getPieceAtPosition({row, col});\n      if (piece) {\n        console.log(`Generating piece HTML at (${row}, ${col}):`, piece); // Add this console log\n      }\n      const pieceHTML = piece ? piece.generateHTML() : '';\n      const squareClass = (row + col) % 2 === 0 ? 'light' : 'dark';\n      const squareId = `square-${row}-${col}`; // Add square ID\n      const squareHTML = `<div id=\"${squareId}\" class=\"square ${squareClass}\">${pieceHTML}</div>`; // Generate square HTML\n      boardHTML += squareHTML;\n    }\n  }\n  return boardHTML;\n}\n\n \n\ngetPieceAtPosition(row, col) {\n  return this.chessPieces.find(piece => piece.row === row && piece.col === col);\n}\n\n  displayBoard() {\n  const boardHTML = this.generateBoardHTML();\n  if (!this.boardElement) {\n    console.error(\"Board element not found!\", this.boardElement);\n    return;\n  }\n  console.log(\"Initial board state:\", this.chessBoard);\n\n  this.boardElement.innerHTML = boardHTML;\n}\n\n\n\n\nendTurn() {\n  this.isPlayerTurn = !this.isPlayerTurn;\n    this.selectedPiece = null;\n}\n\n  highlightLegalMoves(fromRow, fromCol) {\n    const legalMoves = this.chessGame.getLegalMoves(fromRow, fromCol);\n    legalMoves.forEach(move => {\n      const squareElement = document.getElementById(`chess-square-${move[0]}-${move[1]}`);\n      squareElement.classList.add('highlight');\n    });\n  }\n\nremoveHighlightFromAllSquares() {\n  const squares = document.querySelectorAll('.chess-square');\n  for (const square of squares) {\n    square.classList.remove('highlight');\n  }\n}\n\n  updateSquareElements(fromIndex, toIndex, element) {\n  this.squareElements.splice(fromIndex, 1);\n  this.squareElements.splice(toIndex, 0, element);\n}\n\n\n\n \nupdateGameState(event, pieceElement, destinationElement, game) {\n  console.log(\"updateGameState called\");\n  console.log(\"Event:\", event);\n  console.log(\"Piece Element:\", pieceElement);\n  console.log(\"Destination Element:\", destinationElement);\n  console.log(\"Game:\", game);\n\n  // The actual target square should be the destinationElement\n  // If event.target is not reliable, use destinationElement directly\n  const targetSquare = destinationElement; \n\n  // Update the history of moves\n  this.moveHistory.push({\n    piece: pieceElement ? pieceElement.dataset.piece : null,\n    from: {\n      row: pieceElement ? parseInt(pieceElement.dataset.row, 10) : null,\n      col: pieceElement ? parseInt(pieceElement.dataset.col, 10) : null\n    },\n    to: {\n      row: parseInt(destinationElement.dataset.row, 10),\n      col: parseInt(destinationElement.dataset.col, 10)\n    },\n    captured: destinationElement.querySelector('.chess-piece')\n      ? destinationElement.querySelector('.chess-piece').dataset.piece\n      : null,\n  });\n\n  // Additional game state updates can go here\n}\n\n  //console.log(\"Move History:\", JSON.stringify(this.moveHistory));\n\n  // // Check if the game is over (e.g., checkmate, stalemate, etc.)\n  // if (this.isCheckmate()) {\n  //   this.gameStatus = \"checkmate\";\n  //   this.announceWinner();\n  //   console.log(\"updateGameState Exited due to checkmate\");\n  //   return;\n  // }\n\n  // if (this.isStalemate()) {\n  //   this.gameStatus = \"stalemate\";\n  //   this.announceDraw();\n  //   console.log(\"updateGameState Exited due to Stalemate\");\n\n  //   return;\n  // }\n\nannounceWinner() {\n  const message = `Checkmate! ${this.currentPlayer} wins!`;\n  alert(message);\n}\n\nannounceDraw() {\n  const message = `Stalemate. The game is a draw.`;\n  alert(message);\n}\n\n// isStalemate() {\n//   const currentPlayer = this.currentPlayer;\n//   console.log(`Checking stalemate for ${currentPlayer}`);\n\n//   if (this.isCheck(currentPlayer)) {\n//     console.log(`${currentPlayer} is in check, so it cannot be stalemate.`);\n//     return false;\n//   }\n\n//   const allPossibleMoves = [];\n//   for (let row = 0; row < 8; row++) {\n//     for (let col = 0; col < 8; col++) {\n//       const piece = this.board[row][col];\n//       if (piece && piece.color === currentPlayer) {\n//         const validMoves = piece.calculateValidMoves(row, col, this.board);\n//         validMoves.forEach(move => allPossibleMoves.push({ piece, move }));\n//       }\n//     }\n//   }\n\n//   console.log(\"All possible moves:\", allPossibleMoves);\n\n//   for (let i = 0; i < allPossibleMoves.length; i++) {\n//     const { piece, move } = allPossibleMoves[i];\n//     const { row, col } = move;\n//     const capturedPiece = this.board[row][col];\n    \n//     this.board[piece.row][piece.col] = null;\n//     this.board[row][col] = piece;\n//     piece.row = row;\n//     piece.col = col;\n\n//     const isCheck = this.isCheck(currentPlayer);\n\n//     this.board[row][col] = capturedPiece;\n//     this.board[piece.row][piece.col] = piece;\n//     piece.row = piece.row;\n//     piece.col = piece.col;\n\n//     if (!isCheck) {\n//       console.log(`A valid move was found for ${currentPlayer}, so it's not a stalemate.`);\n//       return false;\n//     }\n//   }\n\n//   console.log(`No valid moves were found for ${currentPlayer}, declaring stalemate.`);\n//   return true;\n// }\n\n// FUnction commented due to errs in the move action.\n// isStalemate() {\n//   const currentPlayer = this.currentPlayer;\n//   console.log(\"currentPlayer\", currentPlayer);\n\n//   // Check if the player is already in check\n//   if (this.isCheck(currentPlayer)) {\n//     console.log(\"current player is already checked so function returned \");\n//     return false;\n//   }\n\n//   // Generate all possible moves for the current player\n//   for (let row = 0; row < 8; row++) {\n//     for (let col = 0; col < 8; col++) {\n//       const squareElement = document.querySelector(`#square-${row}-${col}`);\n//       const pieceElement = squareElement ? squareElement.querySelector('.chess-piece') : null;\n      \n//       if (pieceElement) {\n//         const color = pieceElement.classList.contains('white') ? 'white' : 'black';\n        \n//         if (color === currentPlayer) {\n//           const piece = this.board[row][col]; // Now retrieve the piece object from your board array.\n//           console.log(\"Piece\", piece);\n//           console.log(\"Piece.color\", color);\n\n//           const validMoves = piece.calculateValidMoves(row, col, this.board);\n//           console.log(\"validMoves in isStalemate\", validMoves);\n\n//           for (const {row: newRow, col: newCol} of validMoves) {\n//             // Simulate the move\n//             const originalSpot = this.board[newRow][newCol];\n//             this.board[newRow][newCol] = piece;\n//             this.board[row][col] = null;\n            \n//             // Check if this move puts the player in check\n//             const isCheckAfterMove = this.isCheck(currentPlayer);\n            \n//             // Undo the move\n//             this.board[newRow][newCol] = originalSpot;\n//             this.board[row][col] = piece;\n\n//             // If we find a move that doesn't result in a check, it's not stalemate\n//             if (!isCheckAfterMove) {\n//               return false;\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n\n//   // If we get here, it means no valid moves are possible without being in check, thus it's a stalemate\n//   return true;\n// }\n\nisBlocked(currentRow, currentCol, targetRow, targetCol) {\n      // determine direction of movement\n    const rowDir = targetRow > currentRow ? 1 : targetRow < currentRow ? -1 : 0;\n    const colDir = targetCol > currentCol ? 1 : targetCol < currentCol ? -1 : 0;\n\n      // loop through squares between current and target squares in the given direction\n    for (let row = currentRow + rowDir, col = currentCol + colDir; row != targetRow || col != targetCol; row += rowDir, col += colDir) {\n      if (this.board[row][col]) {\n        // square is occupied\n        return true;\n      }\n    }\n\n      // no squares were found to be occupied\n    return false;\n  }\n}\n\n","let chessArray;\nlet handlePieceSelection;\nconst initialize = async () => {\n  \n  // const { default: ChessPiece } = await import('../savedFiles/classPiece.js');\n  const { default: ChessPiece } = await import('./classPiece.js');\n    console.log(ChessPiece);\n    console.log(typeof ChessPiece);\n  const { default: ChessBoard } = await import('./classBoard.js');\n    console.log(ChessBoard);\n    console.log(typeof ChessBoard);\n  const { default: ChessArray } = await import('./classArray.js');\n    console.log(ChessArray);\n    console.log(typeof ChessArray);\n    //chessArray = new ChessArray();\n  \n  \n  console.log(\"Classes imported successfully\");\n  chessArray = new ChessArray(ChessGame);\n  const chessBoard = new ChessBoard(ChessGame);\n  const game = new ChessGame(chessArray, chessBoard, handlePieceSelection);\n  \n  window.chessPiece = class extends ChessPiece {\n    constructor(type, color, row, col, imagePath, elementId, game) {\n      super(type, color, row, col, imagePath, elementId, game);\n      // this.checkAndUpdateSpellEffects = this.checkAndUpdateSpellEffects.bind(this);\n      this.forceMove = this.forceMove.bind(this);\n    }\n  };\n  window.chessGame = class extends ChessGame {\n    constructor(chessArray, chessBoard, handlePieceSelection, game) {\n      super(chessArray, chessBoard, handlePieceSelection, game);\n      // this.updateTurnDisplay = this.updateTurnDisplay.bind(this);\n      \n    }\n  };\n   \n   \n  const type = ChessPiece.type;\n  const color = ChessPiece.color;\n  const row = ChessPiece.row;\n  const col = ChessPiece.col;\n  const imagePath = ChessPiece.imagePath;\n  //const game = new ChessGame(chessArray, chessBoard, handlePieceSelection);\n  window.ChessPiece = ChessPiece;\n  const piece = new window.ChessPiece(type, color, row, col, imagePath, `'square-${row}-${col}'`, game);\n  const elementId = `'square-${piece.row}-${piece.col}'`;\n  piece.elementId = elementId;\n\n\n  \n \n  const squareElement = document.getElementById(piece.elementId);\n  squareElement.innerHTML = `<div class=\"chess-piece ${piece.color}-${piece.type}\"></div>`;\n  squareElement.classList.add('has-piece');\n  //squareElement.querySelector('.chess-piece').style.backgroundImage = `url(${chessPiece.imagePath})`;\n  squareElement.style.gridRow = piece.row + 1;\n  squareElement.style.gridColumn = piece.col + 1;\n\n  window.ChessBoard = ChessBoard;\n window.ChessGame = ChessGame;\n  window.ChessArray = ChessArray;\n\n\n  }\n\ninitialize().then(() => {\n \n  console.log('Chess game initialized!');\n});\n \n\nexport default class ChessGame \n{\n  constructor(chessArray, chessBoard, handlePieceSelection, game) \n\n  {\n    // if (ChessGame.instance) {\n    //         return ChessGame.instance;\n    //     }\n    // this.castDigitzKingSpell = this.castDigitzKingSpell.bind(this);\n    this.chessArray = chessArray;\n    this.chessBoard = chessBoard;\n    this.board = Array(8).fill(null).map(() => Array(8).fill(null));\n    this.pieces = this.chessArray?.board?.pieces || {};\n    this.selectedPiece = null;\n    this.whitePieces = [];\n    this.blackPieces = [];\n    this.whiteCaptured = [];\n    this.blackCaptured = [];\n    this.currentPlayer = 'white';\n    this.squares = document.querySelectorAll('.chess-square');\n    this.checkGameStatus = 'ongoing';\n    this.validMoves = [];\n    this.game = {  \n      board: this.board,\n      pieces: this.chessArray?.board?.pieces|| {},  // the ?. operator is used to ensure that this.chessArray.pieces is only accessed if this.chessArray is defined.\n      id : this.id,\n      status : 'ongoing',\n      turn: this.player1Id\n    };\n     //this.checkAndUpdateSpellEffects = this.checkAndUpdateSpellEffects.bind(this);\n\n    this.turnCount = 0;\n    this.turnDuration = 60; // Duration of a turn in seconds\n    this.currentTurnTimeLeft = this.turnDuration;\n    this.turnTimer = null;\n     this.updateTurnDisplay = this.updateTurnDisplay.bind(this);\n    this.extraTimeLimit = 5 * 60; // 5 minutes in seconds\n    this.extraTimer = null;\n    this.extraWhiteTimeLeft = this.extraTimeLimit;\n    this.extraBlackTimeLeft = this.extraTimeLimit;\n    this.extraWhiteTimer = null;\n    this.extraBlackTimer = null;\n    \n        // Bind the context of this to the event listener function\n    this.handlePieceSelection = this.handlePieceSelection.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n    this.startTurnTimer();\n    //this.initializeBoard();\n    ChessGame.instance = this;\n  }\n\n  startTurn() {\n        console.log('startTurn function entered in classGame');\n\n        this.currentTurnTimeLeft = this.turnDuration;\n        this.updateTurnDisplay();\n        this.startTurnTimer();\n    }\n    static startTurnServ(instance) {\n      // debugger;\n        console.log('startTurnServ function entered in classGame, instance being :', instance);\n        ChessGame.instance = new ChessGame();\n        console.log('ChessGame', ChessGame);\n     instance.chessGame.endTurnMoveServ(instance);\n     // ChessGame.instance.changeTurn();\n        // this.currentTurnTimeLeft = this.turnDuration;\n        // instance.chessGame.updateTurnDisplayServ(instance);\n        // instance.chessGame.startTurnTimerServ(instance);\n    }\n\n\nstatic startTurnTimerServ(instance) {\n  console.log('startTurnTimerServ function entered, instance being : ', instance);\n  instance.chessGame.endTurnMoveServ(instance);\n        // if (instance.turnTimer) {\n        //     clearInterval(instance.turnTimer);\n        // }\n        // instance.turnTimer = setInterval(() => {\n        //     if (instance.currentTurnTimeLeft > 0) {\n        //         instance.currentTurnTimeLeft--;\n        //          instance.updateTurnDisplayServ(instance);\n        //     } else {\n        //         clearInterval(instance.turnTimer);\n        //         instance.chessGame.endTurnMoveServ(instance);\n        //     }\n        // }, 1000);\n    }\n\n    startTurnTimer() {\n        if (this.turnTimer) {\n            clearInterval(this.turnTimer);\n        }\n        this.turnTimer = setInterval(() => {\n            if (this.currentTurnTimeLeft > 0) {\n                this.currentTurnTimeLeft--;\n                this.updateTurnDisplay();\n                this.updateTurnDisplay();\n            } else {\n                this.endTurnMove();\n            }\n        }, 1000);\n    }\n    static checkAndUpdateSpellEffectsServ(instance) {\n    console.log('checkAndUpdateSpellEffects function entered in classPiece');\n    const allPawnElements = document.querySelectorAll('.chess-piece.pawn-random-move');\n    allPawnElements.forEach(pawnElement => {\n        const spellExpirationTurn = parseInt(pawnElement.dataset.spellExpirationTurn, 10);\n        if (spellExpirationTurn > 0) {\n            pawnElement.dataset.spellExpirationTurn = spellExpirationTurn - 1; // Decrement the value\n        } else {\n            // If the expiration turn has passed, remove the spell effect\n            ['forward', 'left', 'right', 'diagonalLeft', 'diagonalRight', 'pawn-random-move'].forEach(dir => pawnElement.classList.remove(dir));\n            // Clean up data attribute\n            delete pawnElement.dataset.spellExpirationTurn; // Corrected to delete the dataset attribute\n        }\n    });\n}\ncheckAndUpdateSpellEffects() {\n    console.log('checkAndUpdateSpellEffects function entered in classPiece');\n    const allPawnElements = document.querySelectorAll('.chess-piece.pawn-random-move');\n    allPawnElements.forEach(pawnElement => {\n        const spellExpirationTurn = parseInt(pawnElement.dataset.spellExpirationTurn, 10);\n        if (spellExpirationTurn > 0) {\n            pawnElement.dataset.spellExpirationTurn = spellExpirationTurn - 1; // Decrement the value\n        } else {\n            // If the expiration turn has passed, remove the spell effect\n            ['forward', 'left', 'right', 'diagonalLeft', 'diagonalRight', 'pawn-random-move'].forEach(dir => pawnElement.classList.remove(dir));\n            // Clean up data attribute\n            delete pawnElement.dataset.spellExpirationTurn; // Corrected to delete the dataset attribute\n        }\n    });\n}\n//     static endTurnMoveServ(instance) {\n//     console.log('endTurn function entered in classGame, instance being : ', instance);\n//     // clearInterval(instance.turnTimer);\n\n//     // Determine which player's extra timer to handle\n//     const player = this.currentPlayer;\n//     if (this.currentTurnTimeLeft === 0) {\n//         // If the current turn time runs out, start or continue the extra timer for the current player\n//         if (!this.extraTimer) {\n//             this.startExtraTimer(player);\n//         }\n//     } else {\n//         // If the turn ended normally, switch players and start the next turn\n//         // this.currentPlayer = player === 'white' ? 'black' : 'white';\n//       console.log('instance before trying to call startTurnServ', instance);\n\n//         instance.chessGame.startTurnServ(instance);\n//         instance.turnCount++;\n//         instance.chessGame.updateTurnCountDisplayServ(instance);\n//         // console.log('this context in endturnMove', this);\n//         console.log('window.chessPiece', window.chessPiece);\n//          // instance.chessGame.checkAndUpdateSpellEffects(instance);\n//     }\n// }\n static endTurnMoveServ(instance) {\n        console.log('endTurnMoveServ function entered in classGame, instance being:', instance);\n\n        // Prevent action if the instance is not in the expected state\n        if (!instance) {\n            console.error(\"Instance is undefined.\");\n            return;\n        }\n\n        // Use instance to access and modify its properties\n        if (instance.currentTurnTimeLeft === 0) {\n            if (!instance.extraTimer) {\n                // Assuming startExtraTimer is properly defined on the instance\n                instance.startExtraTimer(instance.currentPlayer);\n            }\n        } else {\n            // Assuming startTurnServ and updateTurnCountDisplayServ are static methods that accept instance as an argument\n            console.log('instance before trying to call startTurnServ', instance);\n\n            // Ensure that startTurnServ changes the state to prevent re-entry\n            // ChessGame.startTurnServ(instance);\n            \n            // Incrementing turn count to reflect a change in game state\n            instance.turnCount++;\n            \n            \n            // Assuming updateTurnCountDisplayServ is a static method that accepts instance as an argument\n            ChessGame.updateTurnCountDisplayServ(instance);\n\n            // console.log('this context in endTurnMove', this);\n            console.log('window.chessPiece', window.chessPiece);\n            \n            console.log('instance before the updateTurnDIsplay call', instance);\n            // console.log('this before the updateTurnDIsplay call', this);\n\n            let myChessGame = new window.chessGame(chessArray, null, null, null);\n            console.log('myChessGame', myChessGame);\n            console.log('myTurn', myTurn, 'turnCount', myChessGame.turnCount);\n            const instanceTurnCount = myChessGame.turnCount;\n            const turnPlayer = myChessGame.currentPlayer;\n            console.log('instanceTurnCount', instanceTurnCount, 'turnPlayer', turnPlayer);\n            myChessGame.changeTurn();\n            myChessGame.updateTurnDisplay(myTurn, instanceTurnCount); // This should work if the method is defined and bound correctly.\n  \n            console.log('turn player after changing turn', instance.chessGame.instance.currentPlayer);\n            // If checkAndUpdateSpellEffects needs to be called, ensure it can handle the instance appropriately\n            // ChessGame.checkAndUpdateSpellEffects(instance);\n        }\n    }\n    updateTurnDisplay(myTurn, turnCount) {\n      console.log('updateTurnDisplay function entered with ', myTurn, 'turnCount', turnCount);\n    const turnText = turn ? \"Your Turn\" : \"Opponent's Turn\";\n    document.getElementById(\"turn-count-display\").textContent = `${turnText} - Turn: ${turnCount}`;\n    \n}\n endTurnMove() {\n    // console.log('endTurn function entered in classGame, instance being : ', instance);\n    clearInterval(this.turnTimer);\n\n    // Determine which player's extra timer to handle\n    const player = this.currentPlayer;\n    if (this.currentTurnTimeLeft === 0) {\n        // If the current turn time runs out, start or continue the extra timer for the current player\n        if (!this.extraTimer) {\n            this.startExtraTimer(player);\n        }\n    } else {\n        // If the turn ended normally, switch players and start the next turn\n        // this.currentPlayer = player === 'white' ? 'black' : 'white';\n      console.log('instance before trying to call startTurnServ', instance);\n\n        this.startTurn();\n        this.turnCount++;\n        this.updateTurnCountDisplay();\n        console.log('this context in endturnMove', this);\n        console.log('window.chessPiece', window.chessPiece);\n         this.checkAndUpdateSpellEffects();\n    }\n}\n    startExtraTimer(player) {\n    if (player === 'white') {\n        if (this.extraWhiteTimer) clearInterval(this.extraWhiteTimer);\n        this.extraWhiteTimer = setInterval(() => {\n            if (this.extraWhiteTimeLeft > 0) {\n                this.extraWhiteTimeLeft--;\n                this.updateExtraTimerDisplay('white');\n            } else {\n                clearInterval(this.extraWhiteTimer);\n                this.endGame(\"White's time is up!\");\n            }\n        }, 1000);\n    } else {\n        if (this.extraBlackTimer) clearInterval(this.extraBlackTimer);\n        this.extraBlackTimer = setInterval(() => {\n            if (this.extraBlackTimeLeft > 0) {\n                this.extraBlackTimeLeft--;\n                this.updateExtraTimerDisplay('black');\n            } else {\n                clearInterval(this.extraBlackTimer);\n                this.endGame(\"Black's time is up!\");\n            }\n        }, 1000);\n    }\n}\nstatic updateTurnCountDisplayServ(instance) {\n    const turnCountDisplay = document.getElementById('turn-count-display');\n    if (turnCountDisplay) {\n        turnCountDisplay.textContent = `Turn: ${instance.turnCount}`;\n    }\n}\n\n  static updateTurnDisplayServ(instance) {\n    const turnDisplay = document.getElementById('turn-timer');\n    if (turnDisplay) {\n        turnDisplay.textContent = `Time Left: ${instance.currentTurnTimeLeft} seconds`;\n        if (instance.currentTurnTimeLeft === 0) {\n            turnDisplay.classList.add('blinking');\n        } else {\n            turnDisplay.classList.remove('blinking');\n        }\n    }\n}\n\n    // Update the display based on current player\nstatic updateExtraTimerDisplayServ(instance, player) {\n  console.log('nstane  before trying to change player turn', instance);\n    const extraTimerDisplay = player === 'white' \n        ? document.getElementById('extra-white-timer-display') \n        : document.getElementById('extra-black-timer-display');\n    \n\n    if (extraTimerDisplay) {\n        const timeLeft = player === 'white' ? instance.extraWhiteTimeLeft : instance.extraBlackTimeLeft;\n        extraTimerDisplay.textContent = `Extra Time for ${player === 'white' ? 'White' : 'Black'} Player: ${timeLeft} seconds`;\n    }\n}\n\n updateTurnCountDisplay() {\n    const turnCountDisplay = document.getElementById('turn-count-display');\n    if (turnCountDisplay) {\n        turnCountDisplay.textContent = `Turn: ${this.turnCount}`;\n    }\n}\n\n   updateTurnDisplay() {\n\n    const turnDisplay = document.getElementById('turn-timer');\n    if (turnDisplay) {\n        turnDisplay.textContent = `Time Left: ${this.currentTurnTimeLeft} seconds`;\n        if (this.currentTurnTimeLeft === 0) {\n            turnDisplay.classList.add('blinking');\n        } else {\n            turnDisplay.classList.remove('blinking');\n        }\n    }\n}\n    // Update the display based on current player\n updateExtraTimerDisplay(player) {\n    const extraTimerDisplay = player === 'white' \n        ? document.getElementById('extra-white-timer-display') \n        : document.getElementById('extra-black-timer-display');\n    if (extraTimerDisplay) {\n        const timeLeft = player === 'white' ? this.extraWhiteTimeLeft : this.extraBlackTimeLeft;\n        extraTimerDisplay.textContent = `Extra Time for ${player === 'white' ? 'White' : 'Black'} Player: ${timeLeft} seconds`;\n    }\n}\n\n\n// syncBoardState = () => {\n//     console.log(\"Synchronizing board state...\");\n\n//     // Initialize the game board as a 2D array\n//     this.game.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n\n//     // Find all chess squares on the board\n//     const squares = document.querySelectorAll('.chess-square');\n\n//     squares.forEach(square => {\n//         const row = parseInt(square.getAttribute('data-row'), 10);\n//         const col = parseInt(square.getAttribute('data-col'), 10);\n\n//         // Find the chess piece within the square\n//         const pieceElement = square.querySelector('.chess-piece');\n\n//         if (pieceElement) {\n//             // If a piece is found, extract its type and color\n//             const type = pieceElement.getAttribute('data-type');\n//             const color = pieceElement.getAttribute('data-color');\n\n//             this.game.board[row][col] = {\n//                 occupied: true,\n//                 type: type ? type : null,\n//                 color: color ? color : null,\n//             };\n//         } else {\n//             // If no piece is found, mark the square as unoccupied\n//             this.game.board[row][col] = { occupied: false };\n//         }\n//     });\n\n//     console.log(\"Board state synchronized:\", this.game.board);\n// };\nsyncBoardState = () => {\n    console.log(\"Synchronizing board state...\");\n\n    const squares = document.querySelectorAll('.chess-square');\n    squares.forEach(square => {\n        const row = parseInt(square.dataset.row, 10);\n        const col = parseInt(square.dataset.col, 10);\n        const pieceElement = square.querySelector('.chess-piece');\n\n        if (pieceElement) {\n            const parent = pieceElement.parentNode;\n            const type = parent.getAttribute('data-type');\n             // col = parent.getAttribute('data-col');\n             // row = parent.getAttribute('data-row');\n            const color = parent.getAttribute('data-color');\n            // Assuming you have a constructor or factory method for ChessPiece\n            this.game.board[row][col] = new ChessPiece(type, color, row, col, this.imagePath, this.elementId, this.game, this.game.board);\n            // or if you have existing instances, find and reference them\n        } else {\n            this.game.board[row][col] = null;\n        }\n    });\n\n    console.log(\"this.game.board state synchronized:\", this.game.board);\n};\n\n// syncBoardState = () => {\n//     console.log(\"Synchronizing board state...\");\n   \n//     console.log('this.game.board in syncBoardState', this.game.board);\n\n//     // this.game.game.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n\n//     const squares = document.querySelectorAll('.chess-square');\n//     squares.forEach(square => {\n//         const row = parseInt(square.dataset.row, 10);\n//         const col = parseInt(square.dataset.col, 10);\n//         const pieceElement = square.querySelector('.chess-piece > div');\n\n//         if (pieceElement) {\n//             const [color, type] = pieceElement.className.split('-');\n//             this.game.board[row][col] = { type, color };\n//         }\n//     });\n\n//     console.log(\"this.game.board state synchronized:\", this.board);\n//     console.log('this.game.game.board state synchronized', this.game.board);\n\n// };\n\n  startTimer(player) \n  {\n  const timeLimit = this.timeLimit;\n  let timeRemaining = timeLimit * 60; // convert minutes to seconds\n  let timerId;\n\n  // update the clock every second\n  timerId = setInterval(() => {\n    timeRemaining--;\n\n    // update the clock display\n    this.updateClock(player, timeRemaining);\n\n    if (timeRemaining <= 0) {\n      // player has run out of time, end the game\n      clearInterval(timerId);\n      this.endGame(player.opponent);\n    }\n  }, 1000);\n}\n\n  updateGameState(move) {\n    const sourcePiece = move.sourcePiece;\n    const targetPiece = move.targetPiece;\n\n    // Check if a piece was captured\n    if (targetPiece) {\n      if (targetPiece.color === 'white') {\n        this.whiteCaptured.push(targetPiece);\n      } else {\n        this.blackCaptured.push(targetPiece);\n      }\n    }\n\n  \n  }\n  changeTurn(){\nconsole.log('changeTurn function entered with this.currentPlayer  being :', this.currentPlayer);\n    if (this.currentPlayer === 'white') {\n      console.log('thiscurrent player being white checking:', this.currentPlayer);\n      this.currentPlayer = 'black';\n      console.log('thiscurrent player value after the change, normally black checking:', this.currentPlayer);\n\n    } else {\n      console.log('tryig to change to white')\n      this.currentPlayer = 'white';\n    }\n  }\n\n//  handleMove(selectedPiece, row, col) {\n//   const currentRow = selectedPiece.row;\n//   const currentCol = selectedPiece.col;\n\n//   const newRow = row;\n//   const newCol = col;\n\n//   if (this.chessArray.board.isValidMove(currentRow, currentCol, newRow, newCol)) {\n//     const sourcePiece = this.chessArray.board[currentRow][currentCol];\n//     const targetPiece = this.chessArray.board[newRow][newCol];\n\n//     if (targetPiece) {\n//       if (targetPiece.color === 'white') {\n//         this.whiteCaptured.push(targetPiece);\n//       } else {\n//         this.blackCaptured.push(targetPiece);\n//       }\n//     }\n\n//     this.chessArray.board[newRow][newCol] = sourcePiece;\n//     this.chessArray.board[currentRow][currentCol] = null;\n\n//     const targetSquare = document.getElementById(`square-${newRow}-${newCol}`);\n//     targetSquare.appendChild(selectedPiece.element);\n\n//     const sourceSquare = document.getElementById(`square-${currentRow}-${currentCol}`);\n//     sourceSquare.innerHTML = \"\";\n\n//     this.timer += 60;\n//     this.currentPlayer = this.currentPlayer === 'white' ? 'black' : 'white';\n\n//     const isWhiteTurn = this.currentPlayer === 'white';\n//     if (this.chessArray.board.isCheck(isWhiteTurn)) {\n//       console.log(`${this.currentPlayer} is in check`);\n//     }\n\n//     const isBlackTurn = this.currentPlayer === 'black';\n//     if (this.chessArray.board.isCheckmate(isBlackTurn)) {\n//       console.log(`${this.currentPlayer} wins by checkmate!`);\n//     }\n//   }\n\n//   selectedPiece.element.classList.remove(\"selected\");\n// }\nhandleMove(selectedPiece, row, col) {\n  if (!this.chessArray || !this.chessArray.board || !selectedPiece) return;\n\n  const currentRow = selectedPiece.row;\n  const currentCol = selectedPiece.col;\n\n  if (this.chessArray.board.isValidMove(currentRow, currentCol, row, col)) {\n    const sourcePiece = this.chessArray.board[currentRow][currentCol];\n    const targetPiece = this.chessArray.board[row][col];\n\n    if (targetPiece) {\n      if (targetPiece.color === 'white') {\n        this.whiteCaptured.push(targetPiece);\n      } else {\n        this.blackCaptured.push(targetPiece);\n      }\n    }\n\n    this.chessArray.board[row][col] = sourcePiece;\n    this.chessArray.board[currentRow][currentCol] = null;\n\n    const targetSquare = document.getElementById(`square-${row}-${col}`);\n    targetSquare.appendChild(selectedPiece.element);\n\n    const sourceSquare = document.getElementById(`square-${currentRow}-${currentCol}`);\n    sourceSquare.innerHTML = \"\";\n\n    this.timer += 60;\n    this.currentPlayer = this.currentPlayer === 'white' ? 'black' : 'white';\n    this.selectedPiece = null;  // Reset selected piece\n\n    const isTurn = this.currentPlayer === 'white' ? true : false;\n    if (this.chessArray.board.isCheck(isTurn)) {\n      console.log(`${this.currentPlayer} is in check`);\n    }\n    if (this.chessArray.board.isCheckmate(isTurn)) {\n      console.log(`${this.currentPlayer} wins by checkmate!`);\n      // Implement the reset game logic here or trigger the 'startNewGame'\n    }\n  }\n\n  if (selectedPiece && selectedPiece.element) {\n    selectedPiece.element.classList.remove(\"selected\");\n  }\n}\n\n\n// handlePieceSelection(row, col) {\n//   const selectedPiece = this.board[row][col];\n\n//   // If no piece is selected, or if the selected piece belongs to the opponent, do nothing\n//   if (!selectedPiece || selectedPiece.color !== this.currentPlayer) {\n//     return;\n//   }\n\n//   // If the selected piece is already the currently selected piece, deselect it\n//   if (this.currentlySelectedPiece === selectedPiece) {\n//     this.currentlySelectedPiece = null;\n//     this.unhighlightSquares();\n//   } else {\n//     // If a new piece is selected, update the currentlySelectedPiece and highlight the valid moves\n//     this.currentlySelectedPiece = selectedPiece;\n\n//     // Replace this block with the following line\n//     const validMoves = this.currentlySelectedPiece.calculateValidMoves(row, col, this.board);\n\n//     this.highlightSquares(validMoves);\n//   }\n// }\n handlePieceSelection(row, col) {\n  if (!this.board) return;\n\n  const selectedPiece = this.board[row][col];\n\n  if (!selectedPiece || selectedPiece.color !== this.currentPlayer) {\n    return;\n  }\n\n  if (this.currentlySelectedPiece === selectedPiece) {\n    this.currentlySelectedPiece = null;\n    this.unhighlightSquares();\n  } else {\n    this.currentlySelectedPiece = selectedPiece;\n    const validMoves = this.currentlySelectedPiece.calculateValidMoves(row, col, this.board);\n    this.highlightSquares(validMoves);\n  }\n}\n  \nstartNewGame() {\n  if (this.checkGameOver()) {\n    alert(\"The game is already over. Please start a new game.\");\n    return;\n  }\n\n  this.pieceArray.createPieces();\n  this.pieceArray.addPiecesToBoard();\n  this.chessBoard = new ChessBoard();\n  this.chessBoard.placePieces();\n  this.whiteTurn = true;\n  this.selectedPiece = null;\n  this.legalMoves = [];  // Reset legal moves\n  this.currentPlayer = 'white';  // Reset current player\n\n}\n\n  \n   handleSquareClick(square) {\n    // Check if a piece is already selected\n    console.log(\"handleSquareClick called\");\n    if (this.selectedPiece) {\n      // Check if the clicked square is a legal move for the selected piece\n      if (this.legalMoves.includes(square)) {\n        // Move the selected piece to the clicked square\n        square.appendChild(this.selectedPiece);\n        // Clear the selected piece and legal moves\n        this.selectedPiece = null;\n        this.legalMoves = [];\n        // End the player's turn\n        this.endTurn();\n      }\n    } else {\n      // Check if the square contains a piece\n      if (square.firstElementChild) {\n        // Highlight the clicked square\n        square.classList.add('selected');\n        // Store the selected piece\n        this.selectedPiece = square.firstElementChild;\n        // Calculate the legal moves for the selected piece\n        this.legalMoves = this.getLegalMoves(this.selectedPiece);\n        // Highlight the legal moves\n        this.legalMoves.forEach(move => {\n          move.classList.add('legal-move');\n        });\n      }\n    }\n  }\n\n getLegalMoves(piece) {\n  let legalMoves = [];\n  const pieceRow = piece.row;\n  const pieceCol = piece.col;\n\n  for (let row = 0; row < this.board.length; row++) {\n    for (let col = 0; col < this.board[0].length; col++) {\n      const newSquare = document.getElementById(`square-${row}-${col}`); // Assuming you use this ID pattern for squares\n      if (this.isLegalMove(piece, newSquare) && this.isClearPath(pieceRow, pieceCol, row, col)) {\n        legalMoves.push([row, col]);\n      }\n    }\n  }\n  return legalMoves;\n}\n  \n\n  \n\n\n\n\n  highlightSquare(squareElement) \n  {\n    // Check if the clicked square is occupied by a piece\n    if (squareElement.children.length > 0) \n    {\n      // Get the piece element\n      const pieceElement = squareElement.children[0];\n\n      // Check if the piece is the correct color (based on the current player turn)\n      if (this.isWhiteTurn && pieceElement.classList.contains('white') || !this.isWhiteTurn && pieceElement.classList.contains('black')) \n      {\n        // Deselect the previously selected piece (if there was one)\n        if (this.selectedPiece) \n        {\n          this.selectedPiece.classList.remove('highlight');\n        }\n\n        // Add the 'highlight' class to the square element\n        squareElement.classList.add('highlight');\n\n        // Update the selected piece\n        this.selectedPiece = squareElement;\n        console.log(chessPiece);\n      }\n    }\n  }\n\nclearSelectedSquares() \n{\n    const selectedSquares = document.querySelectorAll('.selected-piece');\n    selectedSquares.forEach(square => square.classList.remove('selected-piece'));\n}\n\n  isLegalMove(chessPiece, newSquare) \n    {\n      console.log(\"isLegalMove entered\")\n      // Get the piece's type (e.g. pawn, knight, etc.) and color\n      const pieceType = piece.type;\n      const pieceColor = piece.color;\n\n      console.log (\"pieceType in isLegalMove\", pieceType);\n      console.log (\"pieceColor in isLegalMove\", pieceColor);\n      // Get the current and new square coordinates\n      const currentRow = parseInt(chessPiece.row);\n      const currentCol = parseInt(chessPiece.col);\n      const newRow = parseInt(newSquare.getAttribute('data-row'));\n      const newCol = parseInt(newSquare.getAttribute('data-col'));\n\n      switch (pieceType) \n      {\n        case \"queen\":\n          // Queens can move diagonally, horizontally, or vertically any number of squares, as long as there are no other pieces blocking the way\n          // Check if the move is diagonal\n          if (Math.abs(newSquareCoords[0] - currentSquareCoords[0]) === Math.abs(newSquareCoords[1] - currentSquareCoords[1])) {\n            if (!isClearPath(chessBoard, currentSquareCoords[0], currentSquareCoords[1], newSquareCoords[0], newSquareCoords[1])) {\n              return false;\n            }\n          }\n          // Check if the move is horizontal or vertical\n          if (newSquareCoords[0] === currentSquareCoords[0] || newSquareCoords[1] === currentSquareCoords[1]) {\n            if (!isClearPath(chessBoard, currentSquareCoords[0], currentSquareCoords[1], newSquareCoords[0], newSquareCoords[1])) {\n              return false;\n            }\n          }\n          return true;\n        case \"rook\":\n          // Rooks can move horizontally or vertically any number of squares, as long as there are no other pieces blocking the way\n          // Check if the move is horizontal or vertical\n          if (newSquareCoords[0] === currentSquareCoords[0] || newSquareCoords[1] === currentSquareCoords[1]) {\n            if (!isClearPath(chessBoard, currentSquareCoords[0], currentSquareCoords[1], newSquareCoords[0], newSquareCoords[1])) {\n              return false;\n            }\n          }\n          break;\n        case \"bishop\":\n          // Check if the move is diagonal\n          if (Math.abs(newSquareCoords[0] - currentSquareCoords[0]) === Math.abs(newSquareCoords[1] - currentSquareCoords[1])) {\n            // Check if there are no pieces blocking the way\n            if (isClearPath(chessBoard, currentSquareCoords[0], currentSquareCoords[1], newSquareCoords[0], newSquareCoords[1])) {\n              // The move is legal\n              return true;\n            }\n          }\n\n          // The move is not legal\n          return false;\n\n        case \"knight\":\n          // Knights can move in an L-shaped pattern (two squares in one direction, and one square in the other)\n          return Math.abs(newSquareCoords[0] - currentSquareCoords[0]) === 2 && Math.abs(newSquareCoords[1] - currentSquareCoords[1]) === 1 || Math.abs(newSquareCoords[0] - currentSquareCoords[0]) === 1 && Math.abs(newSquareCoords[1] - currentSquareCoords[1]) === 2;\n        case \"pawn\":\n          // Pawns can only move forward one square, unless it is their first move and they are allowed to move two squares\n          // They can also capture pieces diagonally\n          if (pieceColor === \"white\") {\n            // White pawns can only move forward\n            if (newSquareCoords[0] === currentSquareCoords[0] - 1) {\n              // Check if the pawn is moving straight ahead\n              if (newSquareCoords[1] === currentSquareCoords[1]) {\n                // Check if the square is unoccupied\n                if (!getPieceOnSquare(newSquare)) {\n                  return true;\n                }\n              }\n              // Check if the pawn is capturing a piece\n              if (Math.abs(newSquareCoords[1] - currentSquareCoords[1]) === 1) {\n                // Check if the square is occupied by an enemy piece\n                const enemyPiece = getPieceOnSquare(newSquare);\n                if (enemyPiece && enemyPiece.classList[1] !== pieceColor) {\n                  return true;\n                }\n              }\n            }\n            // Check if the pawn is making a double move (on their first move only)\n            // Black pawns can only move backwards\n            if (newSquareCoords[0] === currentSquareCoords[0] + 1) {\n              // Check if the pawn is moving straight ahead\n              if (newSquareCoords[1] === currentSquareCoords[1]) {\n                // Check if the square is unoccupied\n                if (!getPieceOnSquare(newSquare)) {\n                  return true;\n                }\n              }\n              // Check if the pawn is capturing a piece\n              if (Math.abs(newSquareCoords[1] - currentSquareCoords[1]) === 1) {\n                // Check if the square is occupied by an enemy piece\n                const enemyPiece = getPieceOnSquare(newSquare);\n                if (enemyPiece && enemyPiece.classList[1] !== pieceColor) {\n                  return true;\n                }\n              }\n            }\n            // Check if the pawn is making a double move (on their first move only)\n            if (newSquareCoords[0] === currentSquareCoords[0] + 2 && newSquareCoords[1] === currentSquareCoords[1] && !piece.hasMoved) {\n              // Check that there are no pieces blocking the move\n              const squareInBetween = document.getElementById(`square-${currentSquareCoords[0] + 1}-${currentSquareCoords[1]}`);\n              if (!getPieceOnSquare(squareInBetween)) {\n                return true;\n              }\n            }\n            break;\n          }\n        default:\n        case \"king\":\n          // Kings can move one square in any direction\n          if (Math.abs(newSquareCoords[0] - currentSquareCoords[0]) <= 1 && Math.abs(newSquareCoords[1] - currentSquareCoords[1]) <= 1) {\n            return true;\n          }\n          // Kings can also castle (move two squares towards the rook) if certain conditions are met\n          if (newSquareCoords[1] === currentSquareCoords[1] + 2 && !piece.hasMoved) {\n            // Check that there are no pieces between the king and the rook\n            const rightSquare = document.getElementById(`square-${currentSquareCoords[0]}-${currentSquareCoords[1] + 1}`);\n            const rookSquare = document.getElementById(`square-${currentSquareCoords[0]}-${currentSquareCoords[1] + 3}`);\n            if (getPieceOnSquare(rightSquare) || getPieceOnSquare(rookSquare)) {\n              return false;\n            }\n            // Check that the rook has not moved\n            const rook = getPieceOnSquare(rookSquare);\n            if (rook && rook.hasMoved) {\n              return false;\n            }\n            // Check that the king is not in check\n            if (isSquareInCheck(chessBoard, currentSquare)) {\n              return false;\n            }\n            // Check that the king does not move through a square that is in check\n            if (isSquareInCheck(chessBoard, rightSquare) || isSquareInCheck(chessBoard, newSquare)) {\n              return false;\n            }\n            return true;\n          }\n          if (newSquareCoords[1] === currentSquareCoords[1] - 2 && !piece.hasMoved) {\n            // Check that there are no pieces between the king and the rook\n            const leftSquare = document.getElementById(`square-${currentSquareCoords[0]}-${currentSquareCoords[1] - 1}`);\n            const rookSquare = document.getElementById(`square-${currentSquareCoords[0]}-${currentSquareCoords[1] - 4}`);\n            if (getPieceOnSquare(leftSquare) || getPieceOnSquare(rookSquare)) {\n              return false;\n            }\n            // Check that the rook has not moved\n            const rook = getPieceOnSquare(rookSquare);\n            if (rook && rook.hasMoved) {\n              return false;\n            }\n            // Check that the king is not in check\n            if (isSquareInCheck(chessBoard, currentSquare)) {\n              return false;\n            }\n            // Check that the king does not move through a square that is in check\n            if (isSquareInCheck(chessBoard, leftSquare) || isSquareInCheck(chessBoard, newSquare)) {\n              return false;\n            }\n            return true;\n          }\n        //break;\n      }\n    }\n\nisPlayerTurn(currentPlayer)\n{\nlet isPlayerTurn = true; // to keep track of whose turn it is to play\nconst squares = document.querySelectorAll('.chess-square');\n\nsquares.forEach(square => \n{\n  square.addEventListener('click', event => \n  {\n    // Check if it's the player's turn\n    if (!isPlayerTurn) \n    {\n      return;\n    }\n\n    // Check if the square contains a piece\n    if (event.target.firstElementChild) \n    {\n      // Highlight the clicked square\n      square.classList.add('highlighted');\n\n      // Get the legal moves for the piece\n      const legalMoves = isLegalMoves(square);\n\n      // Highlight the legal moves\n      legalMoves.forEach(move => {\n        move.classList.add('legal-move');\n      });\n    } else {\n      // Check if the square is a legal move\n      if (!square.classList.contains('legal-move')) {\n        return;\n      }\n\n      // Move the piece to the square\n      square.appendChild(/* ... */);\n\n      // Unhighlight all squares\n      squares.forEach(sq => {\n        sq.classList.remove('highlighted', 'legal-move');\n      });\n\n      // End the player's turn\n      endTurn();\n    }\n  });\n});\n}\n\n// endTurn() {\n//   this.isPlayerTurn = !this.isPlayerTurn;\n// }\n\nisClearPath(chessBoard, currentRow, currentCol, newRow, newCol) \n    {\n      // Check if the move is horizontal or vertical\n      if (currentRow === newRow || currentCol === newCol) \n      {\n        // Check if the path is clear along the row or column\n        const start = Math.min(currentRow, newRow);\n        const end = Math.max(currentRow, newRow);\n        for (let i = start + 1; i < end; i++) \n        {\n          if (chessBoard[i][currentCol]) \n          {\n            return false;\n          }\n        }\n      } else {\n        // The move is diagonal\n        // Check if the path is clear along the diagona\n        const rowDiff = Math.abs(newRow - currentRow);\n        const colDiff = Math.abs(newCol - currentCol);\n        if (rowDiff !== colDiff) \n        {\n          // The move is not diagonal\n          return false;\n        }\n        const rowStep = (newRow - currentRow) / rowDiff;\n        const colStep = (newCol - currentCol) / colDiff;\n        let row = currentRow + rowStep;\n        let col = currentCol + colStep;\n        while (row !== newRow && col !== newCol) \n        {\n          if (chessBoard[row][col]) \n          {\n            return false;\n          }\n          row += rowStep;\n          col += colStep;\n        }\n      }\n      return true;\n    } \n\n    getKing(color) {\n        // iterate over all of the squares on the board\n      for (let i = 0; i < 8; i++) {\n        for (let j = 0; j < 8; j++) {\n            // get the piece at the current square\n          let piece = chessBoard.getBoard()[i][j];\n\n            // if the piece is a king of the right color, return it\n          if (piece && piece.type == 'king' && piece.color == color) {\n            return piece;\n          }\n        }\n      }\n    }\n\ncheckGameOver() \n    {\n        // check if either player has no pieces left\n      if (getNumWhitePieces() == 0 || getNumBlackPieces() == 0) \n      {\n        return true;\n      }\n\n        // check if either player is in checkmate\n      if (isCheckmate('white') || isCheckmate('black')) {\n        return true;\n      }\n\n        // check if the game is a draw (e.g., insufficient material to checkmate)\n      if (isDraw()) {\n        return true;\n      }\n\n      // Check if the extra time has run out\n      if (this.extraTimeLeft === 0) {\n        return true;\n      }\n\n      // if none of the above conditions are met, the game is not over\n      return false;\n    }\n\ncheckGameStatus() {\n  if (this.chessBoard.isCheckmate()) {\n    this.gameStatus = \"checkmate\";\n    this.chessBoard.announceWinner();\n    return;\n  }\n\n  // if (this.chessBoard.isStalemate()) {\n  //   this.gameStatus = \"stalemate\";\n  //   this.chessBoard.announceDraw();\n  //   return;\n  // }\n\n  // If none of the end-of-game conditions are met, the game continues\n  this.gameStatus = \"ongoing\";\n}\n\n}\n","import { SeededRNG } from './jsFiles/seedRng.js';\r\nimport { generateSeed } from './jsFiles/utility.js';\r\n\r\nexport const gameSessions = new Map();\r\n\r\n\r\n console.log('seededRNG', SeededRNG);\r\n let rng;\r\n // const rng = new SeededRNG(gameSeed);\r\n \r\nexport function generateUniqueId() {\r\n    // Implementation to generate a unique ID for each game session\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n}\r\n\r\nexport function getGameSession(gameId) {\r\n    console.log('Attempting to retrieve game session with ID:', gameId);\r\n    const session = gameSessions.get(gameId);\r\n    console.log('session being in the gameSession file :', session);\r\n    if (session) {\r\n        console.log('Game session retrieved:', session);\r\n    } else {\r\n        console.log('No game session found for ID:', gameId);\r\n    }\r\n    return session;\r\n}\r\n\r\n\r\nexport function createGameSession(playerIds, gameId) {\r\n    // console.log('createGameSession function entered, with playerId being :', playerIds, '!  rng being:', rng, '!  gameId being :', gameId,'!');\r\n    const gameSeed = generateSeed(playerIds);\r\n    const rng = new SeededRNG(gameSeed);\r\n     \r\n\r\n    console.log(\"Initialized RNG with seed:\", rng);\r\n    const session = {\r\n        gameId,\r\n        players: playerIds,\r\n        rng,\r\n        board: initsServBoard()\r\n        // additional session-related data\r\n    };\r\n    console.log('session value un createGameSession function', session);\r\n    gameSessions.set(gameId, session);\r\n    console.log('gameSessions value in createGameSession function', gameSessions);\r\n    return session;\r\n}\r\n\r\nfunction initializeBoardData(boardElement) {\r\n    const boardData = [];\r\n    const pieces = boardElement.querySelectorAll('.chess-piece');\r\n    pieces.forEach(pieceElement => {\r\n        const [color, type] = pieceElement.className.split(' ').filter(cls => cls.includes('-')).map(cls => cls.split('-')[0]);\r\n        const row = parseInt(pieceElement.style.gridRowStart, 10) - 1;\r\n        const col = parseInt(pieceElement.style.gridColumnStart, 10) - 1;\r\n        boardData.push({ type, color, row, col });\r\n    });\r\n    return boardData;\r\n}\r\n//FUNCTIONS NEEDED FOR UPDATING THE BOARDSTATE\r\n            //   !!                 //\r\n              //   !!          //\r\n// gameSession.js\r\n// export function initializeBoardData(boardElement) {\r\n//     const boardData = [];\r\n//     const pieces = boardElement.querySelectorAll('.chess-piece');\r\n//     pieces.forEach(pieceElement => {\r\n//         const [color, type] = pieceElement.className.split(' ').filter(cls => cls.includes('-')).map(cls => cls.split('-')[0]);\r\n//         const row = parseInt(pieceElement.style.gridRowStart, 10) - 1;\r\n//         const col = parseInt(pieceElement.style.gridColumnStart, 10) - 1;\r\n//         boardData.push({ type, color, row, col });\r\n//     });\r\n//     return boardData;\r\n// }\r\n\r\n// export function getPieceByRowCol(board, row, col) {\r\n//     return board.find(piece => piece.row === row && piece.col === col) || null;\r\n// }\r\n\r\n// export function movePiece(board, fromRow, fromCol, toRow, toCol) {\r\n//     const piece = getPieceByRowCol(board, fromRow, fromCol);\r\n//     if (piece) {\r\n//         // Remove piece from old position\r\n//         board = board.filter(p => p.row !== fromRow || p.col !== fromCol);\r\n\r\n//         // Update piece's position\r\n//         const updatedPiece = { ...piece, row: toRow, col: toCol };\r\n\r\n//         // Add piece to new position\r\n//         board.push(updatedPiece);\r\n\r\n//         console.log('Moved piece:', updatedPiece, 'to new position:', toRow, toCol);\r\n//     } else {\r\n//         console.error('Piece not found at position:', fromRow, fromCol);\r\n//     }\r\n//     return board;\r\n// }\r\n\r\n// export function updateBoardDOM(board, boardElement) {\r\n//     boardElement.innerHTML = ''; // Clear the board\r\n\r\n//     board.forEach(piece => {\r\n//         const pieceElement = document.createElement('div');\r\n//         pieceElement.className = `chess-piece ${piece.color}-${piece.type}`;\r\n//         pieceElement.style.backgroundImage = `url('img/${piece.color}-${piece.type}.png')`;\r\n//         pieceElement.style.gridRowStart = piece.row + 1;\r\n//         pieceElement.style.gridColumnStart = piece.col + 1;\r\n//         boardElement.appendChild(pieceElement);\r\n//     });\r\n// }\r\n\r\n\r\n\r\n//END OF SAID FUNCTIONS.// gameSession.js\r\n\r\n\r\n\r\nexport function movePiece(board, fromRow, fromCol, toRow, toCol) {\r\n    const piece = getPieceByRowCol(board, fromRow, fromCol);\r\n    if (piece) {\r\n        // Remove piece from old position\r\n        board = board.filter(p => p.row !== fromRow || p.col !== fromCol);\r\n\r\n        // Update piece's position\r\n        const updatedPiece = { ...piece, row: toRow, col: toCol };\r\n\r\n        // Add piece to new position\r\n        board.push(updatedPiece);\r\n\r\n        console.log('Moved piece:', updatedPiece, 'to new position:', toRow, toCol);\r\n    } else {\r\n        console.error('Piece not found at position:', fromRow, fromCol);\r\n    }\r\n    return board;\r\n}\r\n\r\nexport function updateBoardDOM(board, boardElement) {\r\n    boardElement.innerHTML = ''; // Clear the board\r\n\r\n    board.forEach(piece => {\r\n        const pieceElement = document.createElement('div');\r\n        pieceElement.className = `chess-piece ${piece.color}-${piece.type}`;\r\n        pieceElement.style.backgroundImage = `url('img/${piece.color}-${piece.type}.png')`;\r\n        pieceElement.style.gridRowStart = piece.row + 1;\r\n        pieceElement.style.gridColumnStart = piece.col + 1;\r\n        boardElement.appendChild(pieceElement);\r\n    });\r\n}\r\n\r\nfunction initsServBoard() {\r\n    return [\r\n        { type: 'rook', color: 'black', row: 7, col: 0 },\r\n        { type: 'knight', color: 'black', row: 7, col: 1 },\r\n        { type: 'bishop', color: 'black', row: 7, col: 2 },\r\n        { type: 'queen', color: 'black', row: 7, col: 3 },\r\n        { type: 'king', color: 'black', row: 7, col: 4 },\r\n        { type: 'bishop', color: 'black', row: 7, col: 5 },\r\n        { type: 'knight', color: 'black', row: 7, col: 6 },\r\n        { type: 'rook', color: 'black', row: 7, col: 7 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 0 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 1 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 2 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 3 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 4 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 5 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 6 },\r\n        { type: 'pawn', color: 'black', row: 6, col: 7 },\r\n        { type: 'rook', color: 'white', row: 0, col: 0 },\r\n        { type: 'knight', color: 'white', row: 0, col: 1 },\r\n        { type: 'bishop', color: 'white', row: 0, col: 2 },\r\n        { type: 'queen', color: 'white', row: 0, col: 3 },\r\n        { type: 'king', color: 'white', row: 0, col: 4 },\r\n        { type: 'bishop', color: 'white', row: 0, col: 5 },\r\n        { type: 'knight', color: 'white', row: 0, col: 6 },\r\n        { type: 'rook', color: 'white', row: 0, col: 7 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 0 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 1 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 2 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 3 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 4 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 5 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 6 },\r\n        { type: 'pawn', color: 'white', row: 1, col: 7 },\r\n    ];\r\n}","import { getGameSession } from '../gameSessions.js'\n\nlet clickedPiece;\nlet pieces;\nlet handleClick;\nlet isPawnPlacementActive = false;\nlet isSpecialMoveActive = false;\nlet internalBoard = Array(8).fill().map(() => Array(8).fill(null));\nlet isSpellActive = false;\n\nasync function initializeChessPieces(pieces, game, chessBoard) {\n    // Assuming `pieces` is an array of piece configurations\n  console.log(\"chessBoard in initializeChessPieces\", chessBoard);\n    pieces.forEach(config => {\n        const chessPiece = new ChessPiece(config.type, config.color, config.row, config.col, config.imagePath, config.elementId, game, chessBoard);\n        const squareElement = document.getElementById(chessPiece.elementId);\n\n        \n\n        // Attach event listener for piece interaction\n        //chessPiece.element.addEventListener('click', () => chessPiece.handleClick(chessPiece, game));\n    });\n}\n\n\n\nasync function initialize() \n{\n\n  const { default: ChessPiece } = await import('./classPiece.js');\n  const { default: ChessBoard } = await import('./classBoard.js');\n  const { default: ChessGame } = await import('./classGame.js');\n  const { default: ChessArray } = await import('./classArray.js');\n//   const { getGameSession } = await import('../gameSessions.js');\n\n// ChessPiece.gameSession = getGameSession;\n\n\n const seededRNG = import('./seedRng.js');\n \n console.log('seededRNG', seededRNG);\n let rng;\n \n  const chessArray = new ChessArray();\n  const chessBoard = new ChessBoard();\n  console.log(\"chessBoard\", chessBoard);\n  chessBoard.initializeBoard();\n\n  chessBoard.populateBoardWithPieces();\n  const game = new ChessGame(chessArray, chessBoard, this);\n  console.log(\"game\");\n  // try {\n  //   await\n  // } catch (error) {\n  //   console.error(\"Failed to initialize boaaard:\", error);\n  //   throw error;\n  // }\n  // this.boundHandleClick = this.handleClick.bind(this);\n\n const pieces = [\n\n{ type: 'rook', color: 'black', row: 7, col: 0, imagePath: 'img/blackROOK.png', elementId: 'square-7-0', game: game },\n{ type: 'knight', color: 'black', row: 7, col: 1, imagePath: 'img/blackKNIGHT.png', elementId: 'square-7-1', game: game },\n{ type: 'bishop', color: 'black', row: 7, col: 2, imagePath: 'img/BlackBISHOP.png', elementId: 'square-7-2', game: game },\n{ type: 'queen', color: 'black', row: 7, col: 3, imagePath: 'testNewImages/BlackQueen.png', elementId: 'square-7-3', game: game },\n{ type: 'king', color: 'black', row: 7, col: 4, imagePath: 'images/blackKING.png', elementId: 'square-7-4', game: game },\n{ type: 'bishop', color: 'black', row: 7, col: 5, imagePath: 'img/BlackBISHOP.png', elementId: 'square-7-5', game: game },\n{ type: 'knight', color: 'black', row: 7, col: 6, imagePath: 'img/blackKNIGHT.png', elementId: 'square-7-6', game: game },\n{ type: 'rook', color: 'black', row: 7, col: 7, imagePath: 'img/blackROOK.png', elementId: 'square-7-7', game: game },\n \n{ type: 'pawn', color: 'black', row: 6, col: 0, imagePath: 'images/blackPAWN.png', elementId: 'square-6-0', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 1, imagePath: 'images/blackPAWN.png', elementId: 'square-6-1', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 2, imagePath: 'images/blackPAWN.png', elementId: 'square-6-2', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 3, imagePath: 'images/blackPAWN.png', elementId: 'square-6-3', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 4, imagePath: 'images/blackPAWN.png', elementId: 'square-6-4', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 5, imagePath: 'images/blackPAWN.png', elementId: 'square-6-5', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 6, imagePath: 'images/blackPAWN.png', elementId: 'square-6-6', game: game },\n{ type: 'pawn', color: 'black', row: 6, col: 7, imagePath: 'images/blackPAWN.png', elementId: 'square-6-7', game: game },\n\n{ type: 'rook', color: 'white', row: 0, col: 0, imagePath: 'img/whiteROOK.png', elementId: 'square-0-0', game: game },\n{ type: 'knight', color: 'white', row: 0, col: 1, imagePath: 'img/whiteKNIGHT.png', elementId: 'square-0-1', game: game },\n{ type: 'bishop', color: 'white', row: 0, col: 2, imagePath: 'img/whiteBISHOP.png', elementId: 'square-0-2', game: game },\n{ type: 'queen', color: 'white', row: 0, col: 3, imagePath: 'images/whiteQUEEN.png', elementId: 'square-0-3', game: game },\n{ type: 'king', color: 'white', row: 0, col: 4, imagePath: 'images/whiteKING.png', elementId: 'square-0-4', game: game },\n{ type: 'bishop', color: 'white', row: 0, col: 5, imagePath: 'img/whiteBISHOP.png', elementId: 'square-0-5', game: game },\n{ type: 'knight', color: 'white', row: 0, col: 6, imagePath: 'img/whiteKNIGHT.png', elementId: 'square-0-6', game: game },\n{ type: 'rook', color: 'white', row: 0, col: 7, imagePath: 'img/whiteROOK.png', elementId: 'square-0-7', game: game },\n\n{ type: 'pawn', color: 'white', row: 1, col: 0, imagePath: 'images/whitePAWN.png', elementId: 'square-1-0', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 1, imagePath: 'images/whitePAWN.png', elementId: 'square-1-1', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 2, imagePath: 'images/whitePAWN.png', elementId: 'square-1-2', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 3, imagePath: 'images/whitePAWN.png', elementId: 'square-1-3', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 4, imagePath: 'images/whitePAWN.png', elementId: 'square-1-4', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 5, imagePath: 'images/whitePAWN.png', elementId: 'square-1-5', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 6, imagePath: 'images/whitePAWN.png', elementId: 'square-1-6', game: game },\n{ type: 'pawn', color: 'white', row: 1, col: 7, imagePath: 'images/whitePAWN.png', elementId: 'square-1-7', game: game },\n \n]\n\n     initializeChessPieces(pieces, game, chessBoard);\n    // hideModalOnInit();\n \nfor (const piece of pieces) \n{\n    const chessPiece = new ChessPiece(piece.type, piece.color, piece.row, piece.col, piece.imagePath, piece.elementId, piece.game, chessBoard);\n    const squareElement = document.getElementById(chessPiece.elementId);\n    squareElement.innerHTML = `<div class=\"chess-piece ${chessPiece.color}-${chessPiece.type}\"></div>`;\n    squareElement.classList.add('has-piece');\n    squareElement.querySelector('.chess-piece').style.backgroundImage = `url(${chessPiece.imagePath})`;\n    squareElement.style.gridRow = chessPiece.row + 1;\n    squareElement.style.gridColumn = chessPiece.col + 1;\n      game.board[piece.row][piece.col] = chessPiece;\n    if (!squareElement.classList.contains('event-listener-attached')) {\n        chessPiece.element.addEventListener('click', chessPiece.boundHandleClick);\n        squareElement.classList.add('event-listener-attached');\n        // piece.dataset.listenerAttached = 'true';\n        console.log(`Event listener attached to: ${chessPiece.elementId}`);\n    }\n\n\n  }\n\n\n// console.log(typeof ChessPiece);\n  // console.log(ChessPiece);\n  console.log(typeof ChessBoard);\n  console.log(\"ChessBoard in classPiiece\", ChessBoard);\n  console.log(typeof ChessGame);\n  console.log(ChessGame);\n  console.log(typeof ChessArray);\n  console.log(ChessArray);\nconsole.log(\"Classes imported successfully\");\n    \n  \n}\ninitialize().then(() => {\n  // Get all chess squares\n \n    console.log(\"Pieces have been initialized and instances have been created.\");\n});\n\n// const game = {\n//   board: []\n// };\nexport default class ChessPiece {\n  constructor(type, color, row, col, imagePath, elementId, game, chessBoard) {\n    // debugger\n    \n   \n   this.type = type;\n    switch (type) {\n  case \"pawn\":\n    console.log(\"Pawn created\");\n    break;\n  case \"rook\":\n    console.log(\"Rook created\");\n    break;\n  case \"knight\":\n    console.log(\"Knight created\");\n    break;\n  case \"bishop\":\n    console.log(\"Bishop created\");\n    break;\n  case \"queen\":\n    console.log(\"Queen created\");\n    break;\n  case \"king\":\n    console.log(\"King created\");\n    break;\n      //SPECIAL PAWN ACTIVATION//\n  case \"FirePawn\":\n    console.log(\"FirePawn created\");\n    break;\n  case \"WaterPawn\":\n    console.log(\"WaterPawn created\");\n    break;\n  case \"AirPawn\":\n    console.log(\"AirPawn created\");\n    break;\n  case \"LightPawn\":\n    console.log(\"LightPawn created\");\n    break;\n  \n  default:\n    throw new Error(\"Invalid piece type\");\n}\nthis.initObserver();\nthis.validPiecesToResolveCheck = [];\nthis.threateningPath = [];\n    this.board = chessBoard;\n    console.log(\"this.board in chessPiece constructor\", this.board);\n    //this.chessBoard = new ChessBoard();\n    this.color = color;\n    this.gameSession = ChessPiece.gameSession;\n    console.log('Constructor color:', this.color);\n    this.row = row;  \n    this.col = col;\n    this.imagePath = imagePath;\n    const id = `square-${this.row}-${this.col}`;\n    this.elementId = elementId || id;\n    this.isChaosTheoryActive = false;\n    this.hasMovedDueToRift = false;\n    this.isPawnPlacementActive = false;\n    this.isSpecialMoveActive = false;\n    this.isSpellActive = false;\n    this.pieceSwapped = true;\n    this.riftSpellDuration = 0;\n   \n    // this.checkAndUpdateSpellEffects = this.checkAndUpdateSpellEffects.bind(this);\n     this.setupMoveListener();\n     // this.forceMove = this.forceMove.bind(this);\n   \n    this.activeSpells = [];\n    this.game = game;\n    // this.game.endTurn = this.game.endTurn.bind(this.game);\n    this.selectedSquare = null;\n    this.prevTarget = null;\n    this.validMoves = [];\n    this.selectedPiece = null;\n    this.currentPlayer = game.currentPlayer;\n    this.currentPlayerColor = this.currentPlayerColor;\n    this.highlightedSquares = [];                               //FROST HIGHLIGHT\n    this.boundHandleClick = this.handleClick.bind(this);\n    this.handleHover = this.handleHover.bind(this);             //FROST SPELL HOVER\n    this.boundHandleSelection = this.handleSelection.bind(this); //FROST SPELL CLIK\n    this.castAdeptWandSpell = this.castAdeptWandSpell.bind(this);\n    this.activeClickListeners = {};\n    this.element = document.getElementById(this.elementId);\n    this.capturedPieces = [];\n    this.element.setAttribute('data-type', type);\n    this.element.setAttribute('data-color', color);this.element.style.backgroundImage = `url('${imagePath}')`; // Set image\n    this.executeMove = this.executeMove.bind(this);\n    this.updateGameStateInMovePiece = this.updateGameStateInMovePiece.bind(this);\n    this.castDigitzKingSpell = this.castDigitzKingSpell.bind(this);\n    this.miniBoards = {\n            topLeft: this.createEmptyMiniBoard(),\n            topRight: this.createEmptyMiniBoard(),\n            bottomLeft: this.createEmptyMiniBoard(),\n            bottomRight: this.createEmptyMiniBoard()\n        };\n\n    //FINALSTAND SPELL BEGINNING\n    this.isFinalStandActive = false;\n    this.miniBoardArea = { x1: 4, y1: 4, x2: 7, y2: 7 }; // Example coordinates for a 4x4 area\n       \n    this.finalStandTurnCount = 0;\n    this.finalStandScore = { white: 0, black: 0 };\n    this.pointThreshold = 5;\n    // FINALSTANDSPELL END\n        \n    //RANDOMSPELL\n    this.isRealityShattered = false;\n    this.spellDeck = ['staff-of-fire', 'staff-of-water', 'staff-of-air', 'staff-of-light', 'staff-of-earth', 'ice', 'novice-staff', 'iced-out', 'apprentice-wand', 'apprentice-staff', 'lightsaber', 'hourglass', 'staff-of-chaos', 'staff-of-the-necromancer', 'orbs-of-illusion', 'adept-wand', 'novice-staff', 'arcane-hands', 'spoon', 'excalibur', 'magician-wand', 'trident', 'reaper-scythe', 'rebel-sword', 'wooden-staff', 'broomstick', 'celestial-staff', 'cybermancer-staff', 'stick-of-the-forest', 'grand-master-staff', 'samba'];\n    //RANDOMSPELL\n    //RANDOM PAWN MOVE AKA WINDSPELL\n    this.isWindOfChangeActive = false;\n    this.movesLeftWithSpell = 0;\n    this.directions = ['forward', 'left', 'right', 'diagonalLeft', 'diagonalRight'];\n    this.currentDirection = 'forward'; // Default direction\n    //END OF RANDOMPAWNMOVE AKA WINDSPEL\n    this.isMiniGameActive = false;\n    this.miniGameScore = 0;\n    this.pointThreshold = 5;\n    this.miniGameMoveCount = 0;\n\n    this.towers = [];\n    this.towerOfPowerActivated = false;\n\n    this.chaosTheoryStartEvent = new Event('chaosTheoryStart');\n    this.chaosTheoryEndEvent = new Event('chaosTheoryEnd');\n    document.addEventListener('chaosTheoryStart', () => {\n      this.isChaosTheoryActive = true;\n    });\n\n    document.addEventListener('chaosTheoryEnd', () => {\n        this.isChaosTheoryActive = false;\n    });\n\n\n     if (!this.element.classList.contains('event-listener-attached')) {\n        this.element.addEventListener('click', this.boundHandleClick, { once: true });\n        this.element.dataset.listenerAttached = 'true';\n        \n        console.log('Adding event listener to:', this.element);\n    } else {\n        console.error(`Event listener already attached to: ${this.element}`);\n    }\n\n      \n   if (elementId) {\n  console.log(\"Type:\", type, \"color:\", color, \"! row,col: \", row, col, \"imagePath: \", imagePath, \"elementId :\", elementId, \"game\", game);\n}\nwindow.addEventListener('updateValidPiecesToResolveCheck', (event) => {\n    console.log('Received valid pieces to resolve check:', event.detail);\n    this.validPiecesToResolveCheck = event.detail.validPiecesToResolveCheck; // Assign only the array\n    this.threateningPath = event.detail.threateningPath; // Assign the threatening path separately\n});\n\nwindow.addEventListener('resetValidPiecesToResolveCheck', () => {\n    console.log('Resetting validPiecesToResolveCheck array.');\n    this.validPiecesToResolveCheck = [];\n    this.threateningPath = [];\n});\n\n}\n// funtion to listen to moves made to reproduce them.\n\nsetupMoveListener() {\n  console.log('setupMoveListener function entered');\n        document.addEventListener('moveReceived', (e) => {\n          console.log('move received trying to call applymove function');\n            const { piece, from, to } = e.detail; // Destructure the move details\n            this.applyMove(from, to);\n        });\n    }\n    applyMove(from, to) {\n      console.log('applyMove function entered in classPiece from being :', from, \"to being:\", to)\n        // Assuming you have a way to map 'from' and 'to' to pieces and their new positions\n        // and that ClassPiece instances are managed or accessible here\n        const piece = this.getPosition(from);\n        if (piece) {\n            this.forceMove(to);\n            // this.forceMove(piece, fromRow, fromCol, toRow, toCol, isRiftMove = false) {\n            // Additional logic to update the UI based on the move\n        }\n    }\n// showNotification(spellName, spellDuration, description, callback) {\n//   console.log('spellDuration in showNotification function', spellDuration);\n//     const gameUI = document.getElementById('game-ui');\n//     if (!gameUI) {\n//         console.error('Game UI container not found');\n//         return;\n//     }\n\n//     const spellNameId = spellName.toLowerCase().replace(/\\s+/g, '-'); // Ensure ID is valid HTML ID\n//     const notificationBox = document.createElement('div');\n//     notificationBox.className = 'notification-box';\n//     notificationBox.id = `${spellNameId}-notification`;\n//     notificationBox.innerHTML = `<p><strong>${spellName}</strong>: ${description} (<span id=\"${spellNameId}-turns-left\">${spellDuration}</span> turns left)</p>`;\n//     gameUI.appendChild(notificationBox);\n//     console.log(`Notification added for ${spellName} with ID ${notificationBox.id}`);\n// if (callback) {\n//         callback(); // Call updateNotification only after the notification has been added\n//     }\n// }\n// updateNotification(spellName, turnsLeft, description) {\n//     const spellNameId = spellName.toLowerCase().replace(/\\s+/g, '-'); // Match the ID formatting used in showNotification\n//     const notificationElement = document.getElementById(`${spellNameId}-notification`);\n//     if (!notificationElement) {\n//         console.error('Notification for this spell not found:', spellNameId);\n//         return;\n//     }\n\n//     const turnsLeftElement = document.getElementById(`${spellNameId}-turns-left`);\n//     if (turnsLeftElement) {\n//         turnsLeftElement.textContent = `${turnsLeft} turns left`;\n//         console.log(`Updated ${spellName} to ${turnsLeft} turns left.`);\n//         if (turnsLeft <= 0) {\n//             notificationElement.remove();\n//             console.log(`${spellName} notification removed as the spell has ended.`);\n//         }\n//     } else {\n//         console.error('Turns left element not found for', spellNameId);\n//     }\n// }\n\n  showNotification(spellName, spellResult, rng, data) {\n    // Fetch spell details using the globally defined function\n    const spellDetails = window.spellDetail(spellName, spellResult, rng, data);\n\n    if (!spellDetails) {\n        console.error(\"Failed to retrieve spell details for:\", spellName);\n        return;  // Exit if no spell details are found\n    }\n\n    const gameUI = document.getElementById('game-ui');\n    if (!gameUI) {\n        console.error(\"Game UI not found\");\n        return;\n    }\n\n    const spellNameId = spellName.toLowerCase().replace(/\\s+/g, '-');\n    const notificationBox = document.createElement('div');\n    notificationBox.className = 'notification-box';\n    notificationBox.id = `${spellNameId}-notification`;\n    notificationBox.innerHTML = `<p><strong>${spellName}</strong>: ${spellDetails.description} (${spellDetails.duration} turns left)</p>`;\n    gameUI.appendChild(notificationBox);\n}\n updateNotification(spellName, turnsLeft) {\n    const spellNameId = spellName.toLowerCase().replace(/\\s+/g, '-');\n    const notificationElement = document.getElementById(`${spellNameId}-notification`);\n    const turnsLeftElement = document.getElementById(`${spellNameId}-turns-left`);\n    if (turnsLeftElement && notificationElement) {\n        turnsLeftElement.textContent = `${turnsLeft} turns left`;\n        if (turnsLeft <= 0) {\n            notificationElement.remove();\n        }\n    }\n}\n\n removeNotification(spellName) {\n    const spellNameId = spellName.toLowerCase().replace(/\\s+/g, '-');\n    const notificationElement = document.getElementById(`${spellNameId}-notification`);\n    if (notificationElement) {\n        notificationElement.remove();\n    }\n}\n    createChessPieces() {\n    const elements = {\n        pawnElement: document.createElement('div'),\n        rookElement: document.createElement('div'),\n        knightElement: document.createElement('div'),\n        bishopElement: document.createElement('div'),\n        queenElement: document.createElement('div'),\n        kingElement: document.createElement('div'),\n    };\n\n    const chessPieces = {\n        whitePawns: [],\n        blackPawns: [],\n        whiteRooks: [],\n        blackRooks: [],\n        whiteKnights: [],\n        blackKnights: [],\n        whiteBishops: [],\n        blackBishops: [],\n        whiteQueen: [],\n        blackQueen: [],\n        whiteKing: [],\n        blackKing: [],\n    };\n\n      // create white pawns\n    for (let col = 0; col < 8; col++) {\n        const pawn1 = new ChessPiece('pawn', 'white', 1, col, './images/whitePAWN.png', `pawn_1_${col}`, this);\n        chessPieces.whitePawns.push(pawn1);\n        this.addChessPiece('pawn', 'white', 1, col, './images/whitePAWN.png', `pawn_1_${col}`, this);\n   \n        console.log(\"White pawn added to board\");\n      }\n\n      // create black pawns\n    for (let col = 0; col < 8; col++) {\n        const pawn6 = new ChessPiece('pawn', 'black', 6, col, './images/blackPAWN.png', `pawn_6_${col}`, this);\n        chessPieces.blackPawns.push(pawn6);\n        this.addChessPiece(pawn6);\n    }\n\n      // create white rooks\n    const rook1 = new ChessPiece('rook', 'white', 0, 0, './images/whiteROOK.png', 'rook_0_0', this.game);\n    const rook2 = new ChessPiece('rook', 'white', 0, 7, './images/whiteROOK.png', 'rook_0_7', this);\n    chessPieces.whiteRooks.push(rook1, rook2);\n    this.addChessPiece(rook1, rook2);\n   \n\n      // create black rooks\n    const rook3 = new ChessPiece('rook', 'black', 7, 0, './images/blackROOK.png', 'rook_7_0', this);\n    const rook4 = new ChessPiece('rook', 'black', 7, 7, './images/blackROOK.png', 'rook_7_7', this);\n    chessPieces.blackRooks.push(rook3, rook4);\n    this.addChessPiece(rook3, rook4);\n   \n      // create white knights\n    const knight1 = new ChessPiece('knight', 'white', 0, 1, './images/whiteKNIGHT.png', 'knight_0_1', this);\n    const knight2 = new ChessPiece('knight', 'white', 0, 6, './images/whiteKNIGHT.png', 'knight_0_6', this);\n    chessPieces.whiteKnights.push(knight1, knight2);\n    this.addChessPiece(knight1, knight2);\n    \n\n      // create black knights\n    const knight3 = new ChessPiece('knight', 'black', 7, 1, './images/blackKNIGHT.png', 'knight_7_1', this);\n    const knight4 = new ChessPiece('knight', 'black', 7, 6, './images/blackKNIGHT.png', 'knight_7_6', this);\n    chessPieces.blackKnights.push(knight3, knight4);\n    this.addChessPiece(knight3, knight4);\n    \n\n      // create black bishops\n    const bishop2 = new ChessPiece('bishop', 'black', 7, 2, './images/blackBishop.png', 'bishop_7_2', this);\n    const bishop3 = new ChessPiece('bishop', 'black', 7, 5, './images/blackBishop.png', 'bishop_7_5', this);\n    chessPieces.blackBishops.push(bishop2, bishop3);\n    this.addChessPiece(bishop2, bishop3);\n    \n\n      // create white bishops\n    const bishop1 = new ChessPiece('bishop', 'white', 0, 2, './images/whiteBISHOP.png', 'bishop_0_2', this);\n    const bishop4 = new ChessPiece('bishop', 'white', 0, 5, './images/whiteBISHOP.png', 'bishop_0_5', this);\n    chessPieces.whiteBishops.push(bishop1, bishop4);\n    this.addChessPiece(bishop1, bishop4);\n    \n\n      // create black queen\n    const queen2 = new ChessPiece('queen', 'black', 7, 3, './testNewImages/BlackQUeenRevisited.png', 'queen_7_3', this);\n    chessPieces.blackQueen.push(queen2);\n    this.addChessPiece(queen2);\n\n      // create black king\n    const king2 = new ChessPiece('king', 'black', 7, 4, './images/blackKING.png', 'king_7_4', this);\n    chessPieces.blackKing.push(king2);\n    this.addChessPiece(king2);\n\n      // create white queen\n    const queen1 = new ChessPiece('queen', 'white', 0, 3, './images/whiteQUEEN.png', 'queen_0_3', this);\n    chessPieces.whiteQueen.push(queen1);\n    this.addChessPiece(queen1);\n\n      // create white king\n    const king1 = new ChessPiece('king', 'white', 0, 4, './images/whiteKING.png', 'king_0_4', this);\n    chessPieces.whiteKing.push(king1);\n    this.addChessPiece(king1);\n\n}\n\ninitSquares(board, game) {\n  // Debug Log\n  console.log(\"Initial board argument:\", JSON.stringify(board, null, 2));\n  console.log(\"Initial game argument:\", JSON.stringify(game, null, 2));\n\n//   // Initialize an empty squares array\n//   this.squares = [];\n\n  // Loop through the board argument\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const square = board[row][col];\n      // Debug Log\n      console.log(`Processing square at row: ${row}, col: ${col}, value: ${square}`);\n\n      if (square) {\n        this.squares.push(square);\n        game.board[row][col] = square.querySelector('.chess-piece');\n      } else {\n        game.board[row][col] = null;\n      }\n    }\n  }\n\n//   // Debug Log\n  console.log(\"Final state of this.squares:\", JSON.stringify(this.squares, null, 2));\n  console.log(\"Final state of game.board:\", JSON.stringify(game.board, null, 2));\n }\n isSpellActive() {\n  // Add your logic here to determine if a spell is active\n  return this.isSpellActive;\n}\n\nhandleBoardClick(event) {\n    const clickedElement = event.target;\n    const isPiece = clickedElement.classList.contains('chess-piece');\n    const square = isPiece ? clickedElement.closest('.chess-square') : clickedElement;\n\n    if (isPiece) {\n        // Logic for selecting a piece\n        selectPiece(clickedElement);\n    } else if (square.classList.contains('chess-square')) {\n        // Logic for moving a selected piece or capturing\n        moveToSquare(square);\n    }\n}\n\n selectPiece(piece) {\n    // Deselect any currently selected piece\n    const currentlySelected = document.querySelector('.selected');\n    if (currentlySelected) {\n        currentlySelected.classList.remove('selected');\n    }\n\n    // Select the new piece\n    piece.classList.add('selected');\n\n    // Possibly show valid moves here\n}\n\n moveToSquare(square) {\n    const selectedPiece = document.querySelector('.selected');\n\n    // Check if a piece is selected and the move is valid\n    if (selectedPiece && isValidMove(selectedPiece, square)) {\n        // Move the piece (assuming you have a function to move pieces)\n        movePiece(selectedPiece, square);\n        // Deselect the piece after moving\n        selectedPiece.classList.remove('selected');\n    }\n}\n showAlert(message) {\n  console.log('showAlrt function entered, message being :', message)\n    const alertBox = document.getElementById('game-message');\n    alertBox.textContent = message;\n    alertBox.classList.add('show');\n\n    // Hide the alert after 2 seconds\n    setTimeout(() => {\n        alertBox.classList.remove('show');\n    }, 2000);\n}\n\nstatic resetCheckArray() {\n    console.log('resetCheckArray function entered.');\n    const resetEvent = new CustomEvent('resetValidPiecesToResolveCheck');\n    window.dispatchEvent(resetEvent);\n}\nhandleClick = (event, chessBoard, game) => {\n  \n  \n  const previouslySelectedPieces = document.querySelectorAll('.chess-piece.selected-piece');\n  previouslySelectedPieces.forEach(piece => {\n    piece.removeEventListener('click', this.handleClick); // Prevent potential duplicates\n    piece.addEventListener('click', this.handleClick);\n});\n  // const chainId = 'stargaze-1';\n  // await window.keplr.enable(chainId);\n  // const offlineSigner = window.getOfflineSigner(chainId);\n  // const accounts = await offlineSigner.getAccounts();\n  // const currentUserAddress = accounts[0].address;\n  // if (!game.isPlayersTurn(currentUserAddress))\n  // {\n  //   console.log(\"It's not your turn!!!\");\n  //   return;\n  // }\n  const clickedSquareElement = event.target.closest('.chess-square');\n    if (!clickedSquareElement) return;\n    const clickedPieceElement = clickedSquareElement.querySelector('.chess-piece');\n    if (!clickedPieceElement) return;\n  console.log('myTurn', myTurn);\n  if (!myTurn) {\n    this.showAlert(\"Wrong Turn. Wait a bit for the opponent to finish.\");\n    setTimeout(() => {\n            clickedSquareElement.classList.add('shake-red');\n            \n        }, 500);\n        return;\n    \n        console.log(\"Not your turn!\");\n        return;\n    }\n    \n    // console.log('this.game.board in handleclick before syncBoardState', this.game.game.board);  \n    console.log('this.game.board in handleclick before syncBoardState', this.game.board); \n     this.game.syncBoardState();\n    // console.log('this.game.game.board in handleclick after syncBoardState', this.game.game.board);\n    // console.log('this.game.board in handleclick after syncBoardState', this.game.board);  \n      console.log(\"Active Spells in handleclick:\", this.activeSpells);\n    \n\n    // code for check situation\n    const pieceRow = parseInt(clickedSquareElement.getAttribute('data-row'), 10);\n    const pieceCol = parseInt(clickedSquareElement.getAttribute('data-col'), 10);\n\n    // Log the current state\n    console.log(\"this.validPiecesToResolveCheck\", this.validPiecesToResolveCheck);\n    console.log('pieceRow', pieceRow, 'pieceCol', pieceCol);\n\n    if (this.validPiecesToResolveCheck.length > 0) {\n        // Check each valid piece\n        const isValidPiece = this.validPiecesToResolveCheck.some(validPiece => {\n            const rowMatch = validPiece.row === pieceRow;\n            const colMatch = validPiece.col === pieceCol;\n            console.log(`Checking valid piece at row ${validPiece.row}, col ${validPiece.col}: Row match = ${rowMatch}, Col match = ${colMatch}`);\n            return rowMatch && colMatch;\n        });\n        console.log('isValidPiece for the check', isValidPiece);\n        if (!isValidPiece) {\n          this.showAlert(\"King is in check and this piece cannot resolve it.\");\n          clickedSquareElement.classList.add('shake-red');\n          \n            console.log(\"This piece cannot resolve the check, so it's not selectable.\");\n            return;\n        }\n    }\n\n    const playerColor = myTurn ? 'white' : 'black';\n    console.log('currentPlayerColor', playerColor);\n    if (this.isSpecialMoveActive || this.isSpellActive) return;\n\n\n    const clickedPiece = clickedPieceElement ? this.getPieceFromElement(clickedPieceElement) : null;\n    \n    console.log('trying to select piece : ', clickedPiece);\n      console.log('this.type', this.type);\n      const thistype = this.type;\n      const thiscolor = this.color;\n      console.log('check before selecting piece thistype being ', thistype, 'this.color being', thiscolor, 'playerColor', playerColor);\n      const isAlliedPiece = clickedPieceElement.classList.contains(`${thiscolor}-${thistype}`); // Extend this check as needed\n      const isSelected = clickedPieceElement.classList.contains('selected-piece');\n      const pieceType = clickedSquareElement.getAttribute('data-type');\n      console.log('isAlliedPiece', isAlliedPiece, 'isSelected', isSelected);\n      if (isAlliedPiece && !isSelected) \n      {\n        console.log('piece is allied, not selected and of the correct color, trying to selectit.')\n        // Clear any existing selections among allied pieces, irrespective of type\n        console.log('currentPlayerColor', thiscolor, 'thistype', thistype);\n    \n        // This selector aims to match any selected piece of the current player, regardless of its type\n        const alliedSelectedPieces = document.querySelectorAll(`.${thiscolor}-pawn.selected-piece, .${thiscolor}-knight.selected-piece, .${thiscolor}-bishop.selected-piece, .${thiscolor}-rook.selected-piece, .${thiscolor}-queen.selected-piece, .${thiscolor}-king.selected-piece`);\n        console.log(\"alliedSelectedPieces\", alliedSelectedPieces);\n    \n        alliedSelectedPieces.forEach(piece => piece.classList.remove('selected-piece'));\n        console.log('clickedPieceElement value before trying to addd selectedPiece to it.', clickedPieceElement);\n    // Then, select the clicked allied piece\n        clickedPieceElement.classList.add('selected-piece');\n      }\n\n    \n\n\n// Then proceed to select the new piece\nthis.selectedPiece = clickedPiece;\n    \n\n\n    //forbid frozen piece to move\n    if (clickedPieceElement.classList.contains('frozen-piece') || clickedSquareElement.classList.contains('frozen-square')) {\n        console.log('This piece is frozen and cannot move.');\n        return; // Exit the function, preventing selection/movement\n    }\n\n    // Allow capturing enemy pieces if a piece is already selected\n    // console.log('check for values before trying to capture, this.selectedPiece', this.currentlySelectedPiece, 'clickedPiece', clickedPiece, 'clickedPiece.color', clickedPiece.color);\n   \n    console.log('this.selectedPiece', this.selectedPiece, 'this.clickedPieceElement', this.clickedPieceElement);\n    if (this.selectedPiece && clickedPieceElement && clickedPieceElement.color === (thiscolor ? 'black' : 'white')){\n        if (clickedSquareElement.classList.contains('valid-move')) {\n            // It's a valid capture, proceed with the move\n          console.log('CHECK FOR MOVEMADE ')\n            this.executeMove(game.board, clickedSquareElement, chessBoard);\n            return;\n        } else {\n            // Invalid move, not a capture\n            alert(\"Invalid move!\");\n            this.deselectAndClear();\n           \n              // this.refreshPieceEventListeners(true);\n            return;\n        }\n    }\n\n   \n\n    // // Handle Deselection\n    // if (this.selectedPiece) {\n    //   console.log('trying to call shouldDeselect in handleClick function');\n    //     if (this.shouldDeselect(clickedPiece, clickedSquareElement, clickedPieceElement)) {\n    //         this.deselectAndClear();\n    //         return;\n    //     }\n    // }\n\n    // If a valid move is selected, execute the move\n    if (this.selectedPiece && clickedSquareElement.classList.contains('valid-move')) {\n      console.log(\"trying to executeMove fnution in handlelick:\");\n      console.log(\"clickedSquareElement passed :\", clickedSquareElement);\n\n        this.executeMove(game.board, clickedSquareElement, chessBoard);\n        \n        console.log('selectedElement.row', selectedElement.row);\n          const chessPiece = this.getPiece(selectedElement.row, selectedElement.col);\n          console.log('chessPiece right after executeMovecalled in movepiece.');\n          // Check and handle the rift after executing the move\n            if (chessPiece) {\n              console.log(\"trying to call postMoveActions\");\n               // Call postMoveActions on the ChessPiece instance\n            chessPiece.postMoveActions(targetCoords);\n        } else {\n            console.error(\"ChessPiece instance not found for the selected element.\");\n        }\n            \n            console.log('this context in removePiece before calling updateGameStateInMovePiece', this);\n            this.updateGameStateInMovePiece(targetSquare, destinationElement, game);\n            return;\n    }\n\n    // Handle New Selection\n    if (clickedPiece) {\n      console.log('handling new selection');\n        this.selectNewPiece(clickedPiece, clickedPieceElement, chessBoard, game);\n       \n         // this.refreshPieceEventListeners(true);\n    } else {\n        this.deselectAndClear();\n        // this.refreshPieceEventListeners(true);\n    }\n};\n// attachEventListenersToAllPieces() {\n//   document.querySelectorAll('.chess-piece').forEach(piece => {\n//     // Check if the event listener class is already attached\n//     const square = piece.parentNode;\n//     if (!square.classList.contains('event-listener-attached')) {\n//         piece.addEventListener('click', this.boundHandleClick);\n//         // Add the class to mark the listener as attached\n//         square.classList.add('event-listener-attached');\n//     }\n// });\n// }\n\n // Helper function to check if the piece should be deselected\n shouldDeselect(clickedPiece, clickedSquareElement, clickedPieceElement) \n {\n  console.log('shouldDeselect function entenred');\n  const isSamePiece = this.selectedPiece.element === clickedPieceElement;\n  const isSameColor = clickedPiece && clickedPiece.color === this.selectedPiece.color;\n  const isInvalidMove = !clickedSquareElement.classList.contains('valid-move');\n  return isSamePiece || isSameColor || isInvalidMove;\n}\nsyncBoardState = () => {\n    console.log(\"Synchronizing board state...\");\n\n    const squares = document.querySelectorAll('.chess-square');\n    squares.forEach(square => {\n        const row = parseInt(square.dataset.row, 10);\n        const col = parseInt(square.dataset.col, 10);\n        const pieceElement = square.querySelector('.chess-piece');\n\n        if (pieceElement) {\n            const parent = pieceElement.parentNode;\n            const type = parent.getAttribute('data-type');\n             // col = parent.getAttribute('data-col');\n             // row = parent.getAttribute('data-row');\n            const color = parent.getAttribute('data-color');\n            // Assuming you have a constructor or factory method for ChessPiece\n            this.game.game.board[row][col] = new ChessPiece(type, color, row, col, this.imagePath, this.elementId, this.game, this.game.board);\n            // or if you have existing instances, find and reference them\n        } else {\n            this.game.game.board[row][col] = null;\n        }\n    });\n\n    console.log(\"this.game.board state synchronized:\", this.game.board);\n};\n\n// Helper function to extract piece info based on your piece element structure\nextractPieceInfo(pieceElement) {\n    // Modify this logic based on how your piece's color and type are represented\n    // For example, if you use class names like 'white-king', 'black-pawn', etc.\n    const classNames = pieceElement.className.split(' ');\n    const pieceClass = classNames.find(cls => cls.includes('-'));\n    if (pieceClass) {\n        return pieceClass.split('-');\n    }\n    return [null, null];\n}\n\n\n// deselectAndClear() {\n//   console.log('deselectAndClear function entered selectedPiece elemnt being :', this.selectedPiece);\n//   if (this.selectedPiece) {\n//     console.log('trying to deselectAndClear :', this.selectedPiece);\n//     this.selectedPiece.classList.remove('selected-piece');\n//   }\n//   this.clearValidMoves();\n//   this.selectedPiece = null;\n// }\n\ndeselectAndClear() {\n    console.log('deselectAndClear function entered, selectedPiece being:', this.selectedPiece);\n    if (this.selectedPiece) {\n        // Check if this.selectedPiece is an object with an .element property\n        if (this.selectedPiece.element && this.selectedPiece.element.classList) {\n            console.log('Deselecting piece with element property:', this.selectedPiece);\n            this.selectedPiece.element.classList.remove('selected-piece');\n        } else if (this.selectedPiece.classList) {\n            // Assume this.selectedPiece is directly the DOM element\n            console.log('Deselecting piece directly:', this.selectedPiece);\n            this.selectedPiece.classList.remove('selected-piece');\n        } else {\n            console.log('selectedPiece does not have a classList to modify:', this.selectedPiece);\n        }\n        this.clearValidMoves();\n        this.selectedPiece = null;\n    }\n}\n\ninitChessBoard() {\n  console.log('initChessBoard function called');\n    const board = document.querySelector('.chess-board'); // Adjust this selector to match your board's container\n    board.addEventListener('click', this.handleBoardClick.bind(this));\n}\n\nexecuteMove(board, clickedSquareElement, chessBoard, activeSpells) {\n  const oldPiece = document.querySelector(\".selected-piece\");\n  const oldSquare = oldPiece.parentNode;\n  const oldType = oldSquare.getAttribute('data-type');\n  const oldColor = oldSquare.getAttribute('data-color');\n  \n  console.log(`oldPiece`, oldPiece);\n\n  console.log(`Chaos Theory activated for ${this.chaosTheoryTurnsLeft} turns.`);\n  if (this.hasMovedDueToRift) \n  {\n    console.log('Piece already moved by rift effect, skipping normal move logic.');\n    // Reset the flag\n    this.hasMovedDueToRift = false;\n\n    // Exit early as the piece has already been moved\n    return;\n  }\n\n\n  if (oldPiece.classList.contains('petrified')) {\n    \n        this.clearPetrification(oldPiece);\n\n        // 70% chance to transfer petrification\n       \n          console.log(\"attempt to propagate petrification for oldColor :\", oldColor);\n            this.attemptToTransferPetrification(oldColor);\n        \n    }\n\n    // Update petrification status for all pieces\n    this.updatePetrifiedPieces();\n\n  \n\n  // clickedSquareElement = document.querySelector(`.valid-move`);\n  const clickedRow = parseInt(clickedSquareElement.getAttribute('data-row'), 10);\n  const clickedCol = parseInt(clickedSquareElement.getAttribute('data-col'), 10);\n\n  const oldRow = parseInt(oldSquare.getAttribute('data-row'), 10);\n  const oldCol = parseInt(oldSquare.getAttribute('data-col'), 10);\n  console.log('OLD ROW IN EECUTEMOVE', oldRow, 'OLD COL N EECUTEMOVE', oldCol);\n\n  const newRow = parseInt(clickedSquareElement.getAttribute('data-row'), 10);\n  const newCol = parseInt(clickedSquareElement.getAttribute('data-col'), 10);\n  const destinationElement = document.getElementById(`square-${newRow}-${newCol}`);\n  const destinationSquare = this.game.game.board[newRow][newCol];\n  console.log('destinationElement', destinationElement);\n\n  //TRYING TO SEND MOVE TO THE SERVER//\n// Convert numeric row and column into chess board coordinates (e.g., 2, 4 -> \"e2\")\nfunction toChessNotation(row, col) {\n\n    // Assuming col is 0-based and corresponds to a-h, and row is 1-based\n    const letter = String.fromCharCode('a'.charCodeAt(0) + col); // Convert column to letter\n    return letter + row.toString(); // Combine with row\n}\n\nfunction isCapture(board, newRow, newCol, playerColor) {\n\n   \n  // console.log('isCapture function entered this.game.game.board being ::', this.game.game.board, 'newRow', newRow, 'newCol', newCol, '^playerColor', playerColor);\n    const targetPiece = board[newRow][newCol];\n    return targetPiece && targetPiece.color !== playerColor;\n}\nconst fromPosition = toChessNotation(oldRow, oldCol);\nconst toPosition = toChessNotation(newRow, newCol);\n\nconsole.log('game.board', this.game.game.board);\nconst thisGameGameBoard = this.game.game.board;\nconst captureOccurred = isCapture(thisGameGameBoard, newRow, newCol, oldColor);\nconsole.log('piece', oldPiece, 'fromPosition sending the to the serv', fromPosition, 'toPosition sending to the serv', toPosition);\n\nconst moveEvent = new CustomEvent('pieceMoved', {\n    detail: {\n        color: oldColor,\n        type: oldType,\n        capture: captureOccurred,\n        from:\n        {\n          row: oldRow,\n          col: oldCol\n        },\n        to:\n        {\n          row: newRow,\n          col: newCol\n        }\n      }\n    });\n// This should use the dynamically calculated positions\nconsole.log('trying to emit the move to the socket')\nlet gameSession = getGameSession;\nconsole.log(gameSession);\n socket.emit('move', {color: oldColor, type: oldType, capture: captureOccurred, from:\n        {\n          row: oldRow,\n          col: oldCol\n        },to:\n        {\n          row: newRow,\n          col: newCol\n        } });\n//socket.emit('move', { from: fromPosition, to: toPosition });\nmyTurn = !myTurn;\nconsole.log('trying to send move to the server :', moveEvent);\n\n//END OF SERVER MOVE SEND TESTING//\n\nif (destinationElement.classList.contains('hole-square')) {\n    // Logic for when destination is a hole\n    this.forceRandomMove(oldPiece, chessBoard, event, this.excludeMiniBoardArea = false);\n    this.game.endTurnMove();\n    this.game.startTurn();\n    this.game.currentPlayer = this.game.currentPlayer === \"white\" ? \"black\" : \"white\";\n    return;\n} else if (destinationElement.classList.contains('magma-square')) {\n    // Logic for when destination is a magma square\n  this.forceRemove(oldRow, oldCol);\n  this.game.endTurnMove();\n  this.game.currentPlayer = this.game.currentPlayer === \"white\" ? \"black\" : \"white\";\n  this.game.startTurn();\n  return;\n    // Implement specific logic for magma square\n} else if (destinationElement.classList.contains('rock-square')) {\n  return;\n    // Logic for when destination is a rock square\n    // Implement specific logic for rock square\n}\n\n  \n  \n  // const oldType = this.selectedPiece.piece.type;\n  // const oldColor = this.selectedPiece.piece.color;\n  \n   // Move logic\n  const movingPiece = this.game.game.board[this.selectedPiece.row][this.selectedPiece.col]; // Get the full piece object\n  this.game.board[newRow][newCol] = movingPiece; // Place the full piece object in the new position\n  this.game.board[this.selectedPiece.row][this.selectedPiece.col] = null;\n   console.log(\"Executing move:\", {\n      piece: this.selectedPiece,\n      from: { row: this.selectedPiece.row, col: this.selectedPiece.col },\n      to: { row: newRow, col: newCol },\n  });\n   \nconsole.log(\"Flag before requestAnimationFrame in executeMove:\", this.hasMovedDueToRift);\n  // Use requestAnimationFrame to ensure DOM updates occur in the correct order\n  requestAnimationFrame(() => \n  {\n    if (destinationElement.classList.contains('enchanted-ground')) {\n      // selectedPiece = this.selectedPiece;\n      const effect = this.handleMagicalCardEffect(oldPiece);\n      this.showSpellInteraction(effect.name, effect.description);\n              this.pieceSwapped = true;\n    }\n    console.log(\"Flag in requestAnimationFrame in executeMove:\", this.hasMovedDueToRift);\n    //  if (this.pieceSwapped) {\n    //     console.log('Piece already moved by rift effect, skipping normal move logic.');\n\n    //     // Reset the flag\n    //     this.pieceSwapped = false;\n\n    //     // Exit early as the piece has already been moved\n    //     return;\n    // }\n    console.log('this.towerOfPowerActivated', this.towerOfPowerActivated);\n    if(this.towerOfPowerActivated){\n      this.checkAndPlaceTowerEachTurn(turnCount);\n    this.checkTowerCountAndActivateBeam();\n    }\n\n    if (this.hasMovedDueToRift) {\n        console.log('Piece already moved by rift effect, skipping normal move logic.');\n\n        // Reset the flag\n        this.hasMovedDueToRift = false;\n\n        // Exit early as the piece has already been moved\n        return;\n    }\n      console.log(\"Flag in requestAnimationFrame in executeMove:\", this.hasMovedDueToRift);\n\n      // Move the piece in the DOM\n      oldSquare.removeChild(oldPiece);\n      destinationElement.appendChild(oldPiece);\n      // Update attributes and styles for the old and new squares\n      oldSquare.removeAttribute('data-type');\n      oldSquare.removeAttribute('data-color');\n      oldSquare.style.backgroundImage = '';\n      oldSquare.classList.remove('has-piece');\n  \n      const newImagePath = `images/${this.currentPlayer}_${oldType}.png`;\n      destinationElement.setAttribute('data-type', oldType);\n      destinationElement.setAttribute('data-color', oldColor);\n      destinationElement.style.backgroundImage = `url(${newImagePath})`;\n      destinationElement.classList.add('has-piece');\n      destinationElement.style.gridArea = `${newRow + 1} / ${newCol + 1}`;\n\n      // Update piece's position in UI\n      console.log(\"this.currentPlayer\", this.currentPlayer);\n      console.log(\"Piece element after append:\", oldPiece.outerHTML);\n      console.log(\"Destination element children:\", destinationElement.innerHTML);\n  });\n  // this.syncBoardState();\n  this.game.currentPlayer = this.game.currentPlayer === \"white\" ? \"black\" : \"white\";\n  console.log('this.game', this.game);\n\n  console.log('this.game before trying to endTurn', this.game);\n   // this.game.endTurn = this.game.endTurn.bind(this);\n        //  this.game.endTurnMove();\n          this.game.startTurn();\n  console.log('this.game after trying to endTurn', this.game);\n  // this.updateRiftDurationOnPlayerChange();\n  oldPiece.addEventListener('click', this.boundHandleClick, { once: true });\n\n    // console.log('selectedElement', selectedElement);\n          // const chessPiece = this.getPiece(newRow, newCol);\n          // console.log('chessPiece right after executeMovecalled in movepiece.');\n          // // Check and handle the rift after executing the move\n          //   if (chessPiece) {\n          //     console.log(\"trying to call postMoveActions\");\n          //     console.log(\"Flag in requestAnimationFrame in executeMove:\", this.hasMovedDueToRift);\n          //     // Call postMoveActions on the ChessPiece instance only if the flag is false\n          //     if (!this.hasMovedDueToRift) {\n          //       console.log('fucking still not working');\n          //       // this.postMoveActions(newRow, newCol); //FOR RIFT SPELL UNCOMMENT THIS \n          //       this.updateGameStateInMovePiece();\n          //     } else {\n          //       console.log(\"Skipping postMoveActions due to rift effect\");\n          //       // Reset the flag\n          //       this.hasMovedDueToRift = false;\n          //     }\n          //   } else {\n          //     console.error(\"ChessPiece instance not found for the selected element.\");\n          //   }\n            console.log('this context', this);\n            console.log(\"Board state after move and before syncBoardState:\", this.game.board);\n            this.game.syncBoardState();\n            console.log(\"Board state after move&&syncBoardState:\", this.game.board);\n\n\n          }\n          \n\ngetPiece(row, col) {\n  console.log('getPiece function called');\n    if (row < 0 || row > 7 || col < 0 || col > 7) {\n        return null;\n    }\n    return this.game.board[row][col];\n}\n\nretrieveOrCreatePiece(type, color, row, col, imagePath, elementId, game, chessBoard, parent) {\n  console.log(\"retrieveOrCreatePiece function called with:$type, $color\", type, color);\n  // Check if a piece already exists at the given location on the board\n  let existingPiece = document.querySelector(`.chess-square[data-row=\"${row}\"][data-col=\"${col}\"] .chess-piece`);\n  console.log(\"existingPiece :\", existingPiece);\n   existingPiece.parent = parent;\n\n\n  if (existingPiece) {\n    console.log(\"Retrieved existing piece from the board:\", existingPiece);\n    return existingPiece;\n  } else {\n    console.error(\"No piece found at the specified location:\", row, col);\n    return null;\n  }\nconsole.log(\"end of retrieveOrCreatePiece function\");\n}\n\n\n// Helper function to select a new piece\nselectNewPiece(clickedPiece, clickedPieceElement, chessBoard, game) {\n  console.log(\"chessBoard in selectNewPiece:\", chessBoard);\n   chessBoard = document.querySelector(`#chessboard`);\n  console.log(\"chessBoard in selectNewPiece after querySelector:\", chessBoard);\n\n  // if (this.selectedPiece) {\n  //  console.log('calling deselect&clear for ', this.selectedPiece);\n  //   // this.previousPiece = this.selectedPiece;\n  //    this.deselectAndClear();\n  // }\n  \n  // Calculate the valid moves once.\n  \n  console.log(\"clickedPiece in selectNewPiece:\", clickedPiece);  // Debug line\n  const clickedSquare = clickedPieceElement.parentElement;\n  console.log(\"clickedSquare in selectNewPiece:\", clickedSquare);  // Debug line\n  const fullPiece = this.retrieveOrCreatePiece(clickedPiece.type, clickedPiece.color, clickedPiece.row, clickedPiece.col);\n  \n \n   console.log(\"clickedSquare.row:\", clickedPiece.row);  // Debug line\n      console.log(\"clickedSquare.col:\", clickedPiece.col);  // Debug line\n\n  const validMoves = this.calculateValidMoves(clickedPiece.row, clickedPiece.col, chessBoard, clickedPiece.type, clickedPiece.color);\n  \n  clickedPieceElement.classList.add('selected-piece');\n  this.selectedPiece = {\n    row: clickedPiece.row,\n    col: clickedPiece.col,\n    element: clickedPieceElement,\n    piece: clickedPiece,\n    validMoves: validMoves,\n  };\n    console.log('newSelected piece in selectNewPiece:', this.selectedPiece);\n    console.log('this.game.board in selectedPiece', this.game.board);\n  this.showValidMoves(this.selectedPiece, chessBoard, validMoves);  // Pass the valid moves\n}\n addCapturedPiece(piece, color) {\n  console.log(\"addcapturedPieces function called\");\n  const capturedContainer = document.getElementById(color + '-captured');\n  const pieceElement = document.createElement('div');\n  pieceElement.classList.add('dead-piece');\n  pieceElement.style.fontSize = '35px'; // Adjust size as needed\n  pieceElement.style.width = '35px'; // Ensure the width is the same as font size for square aspect ratio\n  pieceElement.style.height = '35px'; // Ensure the height is the same as font size for square aspect ratio\n  pieceElement.style.display = 'inline-block'; // Ensure that the div behaves like an inline element for layout\n  pieceElement.style.textAlign = 'center';\n  pieceElement.innerHTML = piece; // Replace with the appropriate emoji or image\n  capturedContainer.appendChild(pieceElement);\n}\nmapPieceToEmoji(type, color) {\n    const whitePieceEmojiMap = {\n        'pawn': '♙',\n        'rook': '♖',\n        'knight': '♘',\n        'bishop': '♗',\n        'queen': '♕',\n        'king': '♔'\n    };\n\n    const blackPieceEmojiMap = {\n        'pawn': '♟',\n        'rook': '♜',\n        'knight': '♞',\n        'bishop': '♝',\n        'queen': '♛',\n        'king': '♚'\n    };\n\n    return color === 'white' ? whitePieceEmojiMap[type] : blackPieceEmojiMap[type];\n}\ndeselectPiece(selectedPiece) \n{\n  selectedPiece.classList.remove(\"selected-piece\");\n  console.log(\"selectedPiece deselected\", selectedPiece)\n  this.clearValidMoves(); // Assuming this clears valid moves for this.selectedPiece\n\n  const selectedSquare = document.querySelectorAll('.selected-piece');\n  selectedSquare.forEach(square => {\n        square.classList.remove('selected-piece');\n        square.innerHTML = '';\n    });\n  this.selectedPiece = null; // Important: Reset your state variable\n}\n\nshowValidMoves(selectedPiece, board, validMoves) {\n  const threateningPath = this.threateningPath;\n  console.log('threateningPath in showValidMoves', threateningPath);\n    console.log('this.towerOfPowerActivated ', this.towerOfPowerActivated);\n\n  console.log('this.isChaosTheoryActive', this.isChaosTheoryActive);\n\n  // Check if the piece has already been moved due to the rift\n  if (selectedPiece && this.hasMovedDueToRift) {\n      console.log('Piece already moved by rift effect, skipping normal move logic.');\n\n      // Reset the flag\n      selectedPiece.hasMovedDueToRift = false;\n\n      // Exit early as the piece has already been moved\n      return;\n  }\n  \nconsole.log(\"game.game.board in showValidMoves:\", this.game.game.board);\n  // Clear previous valid moves and remove listeners\n  const allSquares = document.querySelectorAll('.chess-square');\n  allSquares.forEach(square => {\n    square.classList.remove('valid-move');\n    const pattern = square.querySelector('.pattern');\n    if (pattern) {\n      square.removeChild(pattern);\n    }\n    \n    // Remove existing click event listeners\n    const squareId = `${square.dataset.row}-${square.dataset.col}`;\n    if (this.activeClickListeners[squareId]) {\n      square.removeEventListener('click', this.activeClickListeners[squareId]);\n      square.classList.remove('event-listener-attached');\n      delete square.dataset.listenerAttached;\n      delete this.activeClickListeners[squareId];  // Remove the stored function reference\n    }\n  });\nconsole.log()\n\nlet filteredValidMoves = validMoves;\n\n    // Only filter validMoves if there's a threatening path (i.e., during a check)\n    if (threateningPath && threateningPath.length > 0 && this.validPiecesToResolveCheck.length > 0) {\n        filteredValidMoves = validMoves.filter(move => {\n            return threateningPath.some(pathSquare => {\n                return (move.row === pathSquare.row && move.col === pathSquare.col);\n            });\n        });\n    }\n    \n\n  // Highlight new valid moves\n  for (const move of filteredValidMoves) {\n    const square = document.querySelector(`.chess-square[data-row=\"${move.row}\"][data-col=\"${move.col}\"]`);\n    square.classList.add('valid-move');\n\n    // Check if the current piece is a pawn on the mini-board\n    const currentSquare = document.querySelector(`.chess-square[data-row=\"${selectedPiece.row}\"][data-col=\"${selectedPiece.col}\"]`);\n    const isPawnOnMiniBoard = selectedPiece.type === 'Pawn' && currentSquare && currentSquare.classList.contains('mini-board');\n\n        // If the piece is a pawn and it's on the mini-board, add a special highlight\n        if (isPawnOnMiniBoard) {\n          console.log('pawn on miniboard');\n            square.classList.add('special-pawn-move'); // This class should be styled differently in your CSS\n        }\n\n    // Create a pattern on the valid move square\n    const pattern = document.createElement('div');\n    pattern.classList.add('pattern');\n    square.appendChild(pattern);\n\n    // Define the click event listener for this square\n    const clickListener = (event) => {\n      const clickedSquareElement = square;\n      // Assuming executeMove is a method on the same class/object\n      // First argument is the clicked square, and second argument is the chessBoard instance\n       console.log(\"trying to executeMove fnution in showValidMoves:\");\n      console.log(\"clickedSquareElement passed :\", clickedSquareElement);\n       console.log(\"Dice Flag before executeMove:\", this.isChaosTheoryActive);\n      if (this.isChaosTheoryActive) {\n            const diceRoll = this.rollDice();\n            if (diceRoll >= 5) {\n              console.log('dice roll number', diceRoll);\n                console.log(\"Normal turn allowed by Chaos Theory.\");\n                // Proceed with executing the selected move\n                this.executeMove(this.chessBoard, clickedSquareElement, square);\n\n            } else {\n                console.log(\"Random move enforced by Chaos Theory.\");\n                this.performRandomMove();\n                // Deselect any previously selected piece\n                this.deselectAndClear();\n                if (this.selectedPiece && this.selectedPiece.element) {\n                  this.selectedPiece.element.addEventListener('click', this.boundHandleClick, { once: true });\n                }\n                // Switch turn to the next player\n                this.game.endTurnMove();\n                this.game.startTurn();\n                this.switchTurn()\n                return; // Skip normal move logic after executing a random move\n            }\n        } else {\n      this.executeMove(this.chessBoard, clickedSquareElement, square);\n      this.checkMiniBoardAndEndFinalStand();\n    }\n    // After executing the move, you may also wish to clear selections and valid moves\n    this.deselectAndClear();\n  };\n\n    // Save this click event listener so we can remove it later\n    const squareId = `${move.row}-${move.col}`;\n    this.activeClickListeners[squareId] = clickListener;\n\n    // Attach the event listener\n    square.addEventListener('click', clickListener, { once: true });\n    if (square.hasChildNodes())\n    {\n    const piece = square.firstChild; // Assuming there's only one piece per square for simplicity\n    piece.dataset.listenerAttached = 'true'; // Set the data attribute on the piece\n  }\n}\n}\n\n\nstatic switchTurn() {\n  console.log('witchTurn entered with player :', this.currentPlayer);\n  console.log('this.game', this.game, 'chessGame', chessGame);\n    // Assuming 'white' and 'black' are your player identifiers\n    this.game.currentPlayer = this.game.currentPlayer === 'white' ? 'black' : 'white';\n    console.log(this.currentPlayer);\n\n    // Any other logic required to switch turns\n}\n    clearValidMoves() {\n      console.log('clearValidMoves function entered');\n    const validMoveSquares = document.querySelectorAll('.valid-move');\n    validMoveSquares.forEach(square => {\n        square.classList.remove('valid-move');\n        square.innerHTML = '';\n    });\n}\n    \n    \n\n    \n\ngetPieceFromElement(pieceElement) {\n  \n  if (!pieceElement) {\n    console.log(\"Piece element is null\");\n    return null;\n  }\n\n  // Get the parent chess-square element\n  const squareElement = pieceElement.closest('.chess-square');\n  if (!squareElement) {\n    console.log(\"Chess square element not found\");\n    return null;\n  }\n  console.log(\"squareElement\", squareElement);\n\n  // Extracting the row and col from the square element's data attributes\n  const pieceRow = squareElement.getAttribute('data-row');\n  const pieceCol = squareElement.getAttribute('data-col');\n\n  // Extracting piece type and color from the piece element itself\n  const pieceClasses = pieceElement.className.split(/\\s+/);\n\n  // Find the class that indicates the piece type and color\n  const pieceClass = pieceClasses.find(cls => \n    cls.includes('pawn') || cls.includes('king') || \n    cls.includes('queen') || cls.includes('bishop') || \n    cls.includes('knight') || cls.includes('rook')\n  );\n\n  // Split the class to extract type and color\n  const [pieceColor, pieceType] = pieceClass.split('-');\n\n  console.log(\"pieceType\", pieceType);\n  console.log(\"pieceColor\", pieceColor);\n\n  if (!pieceType || !pieceColor) {\n    console.log(\"Piece type or color data attribute is missing\");\n    return null;\n  }\n\n  // Create a representation of the piece based on the DOM element\n  const piece = {\n    type: pieceType,\n    color: pieceColor,\n    row: pieceRow,\n    col: pieceCol,\n    // Add other relevant properties here\n  };\n\n  console.log(\"Retrieved piece from DOM:\", piece);\n\n  return piece;\n}\n\naddChessPiece(type, color, row, col, imagePath, elementId, game, squares) {\n  // Check if the calculated index is valid\n  if (row < 0 || row > 7 || col < 0 || col > 7) {\n    console.error(`Invalid row ${row} or col ${col} for adding piece.`);\n    return;\n  }\n  squares = document.querySelectorAll('.chess-square');\n    console.log(\" ssquares: \", squares);\n\n  // Get square element from NodeList using the calculated index\n  const squareIndex = row * 8 + col;\n  const squareElement = squares.item(squareIndex);\n  \n  // Check if the square element exists\n  if (!squareElement) {\n    console.error(`Cannot add piece at row ${row}, col ${col}. Square does not exist.`);\n    return;\n  }\n\n  // Create the chess piece\n  const chessPiece = new ChessPiece(type, color, row, col, imagePath, elementId, game);\n  console.log(\"Adding piece: \", chessPiece);\n  console.log(`Added piece color: ${chessPiece.color}, row: ${row}, col: ${col}`);\n\n  // Get the piece element from the created chess piece\n  const pieceElement = chessPiece.element;\n\n  // Check if the piece element was successfully created\n  if (!pieceElement) {\n    console.error(`Failed to create piece element for ${color} ${type} at row ${row}, col ${col}.`);\n    return;\n  }\n\n  // Check if there's already a piece on the square\n  const existingPieceElement = squareElement.querySelector('.chess-piece');\n  if (existingPieceElement) {\n    squareElement.replaceChild(pieceElement, existingPieceElement);\n  } else {\n    squareElement.appendChild(pieceElement);\n  }\n\n  // Update the game board with the added chess piece\n this.game.board[row][col] = chessPiece;\n}\n\ntoggleSpellMode(spellType, isActive) {\n    console.log(`toggleSpellMode called: ${spellType} - ${isActive}`);\n    this.isSpellActive = isActive;\n\n    const chessPieces = document.querySelectorAll('.chess-piece');\n    if (isActive) {\n        // Disable regular piece movement listeners\n        chessPieces.forEach(piece => {\n            console.log('piece in toggleSpellMode', piece);\n            piece.removeEventListener('click', this.boundHandleClick);\n        });\n    } else {\n        // Re-enable regular piece movement listeners\n        chessPieces.forEach(piece => {\n            piece.addEventListener('click', this.boundHandleClick, { once: true });\n        });\n    }\n}\n\naddSpecialPawn(type, color, row, col, imagePath, elementId, game, squares) {\nconsole.log(\"Adding special pawn of type: \", type);\n  // Check if the calculated index is valid\n  if (row < 0 || row > 7 || col < 0 || col > 7) {\n    console.error(`Invalid row ${row} or col ${col} for adding special pawn.`);\n    return;\n  }\n   imagePath = `./img/${type}.png`;\n  console.log(\"imagePath\", imagePath);\n\n  // Get square element from NodeList using the calculated index\n  const squareIndex = row * 8 + col;\n  const squareElement = squares.item(squareIndex);\n\n  // Check if the square element exists\n  if (!squareElement) {\n    console.error(`Cannot add special pawn at row ${row}, col ${col}. Square does not exist.`);\n    return;\n  }\n\n  // Create the chess piece (special pawn)\n  const specialPawn = new ChessPiece(type, color, row, col, imagePath, elementId, game);\n  const pieceElement = document.createElement('div');\n    pieceElement.classList.add('chess-piece');\n    pieceElement.style.backgroundImage = `url('${imagePath}')`;\n    pieceElement.setAttribute('data-type', type);\n    pieceElement.setAttribute('data-color', color);\n  // Example: Set additional properties or behaviors based on pawnType\n    // if (type === 'FirePawn') {\n    //     specialPawn.fireProperty = /* specific property or behavior for FirePawn */;\n    // } else if (type === 'WaterPawn') {\n    //     specialPawn.waterProperty = /* specific property or behavior for WaterPawn */;\n    //     // ... and so on for other pawn types\n    // }\n  console.log(\"Adding special pawn: \", specialPawn);\n\n  // Get the piece element from the created chess piece\n  \n\n  // Check if the piece element was successfully created\n  if (!pieceElement) {\n    console.error(`Failed to create piece element for ${color} ${type} at row ${row}, col ${col}.`);\n    return;\n  }\n\n  // Check if there's already a piece on the square\n  const existingPieceElement = squareElement.querySelector('.chess-piece');\n  console.log(\"squareElement:\", squareElement, \"pieceElement:\", pieceElement);\n  if (existingPieceElement) {\n    squareElement.replaceChild(pieceElement, existingPieceElement);\n  } else {\n    squareElement.appendChild(pieceElement);\n  }\n\n  // Update the game board with the added special pawn\n  game.board[row][col] = specialPawn;\n  console.log(\"gameboard after pawn placement\", game.board[row][col]);\n  this.refreshPieceEventListeners();\n  this.toggleGameState(false); // Revert to normal gameplay\n  this.restoreNormalGameState();\n}\n\nconvertSquareIdToRowCol(squareElement) {\n  console.log(\"convertSquareIdToRowCol called , value of squareElement\", squareElement);\n // console.log(\"convertSquareIdToRowCol called, value of selectedSquareElement\", selectedSquareElement);\n  const row = parseInt(squareElement.getAttribute('data-row'));\n  const col = parseInt(squareElement.getAttribute('data-col'));\n  console.log(\"row\", row);\n  console.log(\"col\", col);\n  \n  if (isNaN(row) || isNaN(col)) {\n    console.error(\"Row or col is not a number\");\n    return null;\n  }\n\n  if (row < 0 || row >= this.game.board.length) {\n    console.error(\"Row is out of bounds\");\n    return null;\n  }\n\n  if (col < 0 || col >= this.game.board[row].length) {\n    console.error(\"Col is out of bounds\");\n    return null;\n  }\n\n  return [row, col];\n}\n\nremoveSquareSelectionListeners(squares) {\n             console.log(\"isPawnPlacementActive?\", isPawnPlacementActive);\n\n  if (isPawnPlacementActive) {\n    squares.forEach(square => {\n    square.removeEventListener('click', this.pawnPlacementListener); // Adjust this to match the actual event listener function\n    \n  });\nthis.isSpecialMoveActive = false;\n  }\n}\n\n//SPECIALPAWNCREATION//\npreparePawnCreation(pawnType, imagePath, elementId) {\n    console.log(\"preparePawnCreation successfully entered in classPiece\");\n    console.log(`preparePawnCreation called for ${pawnType}`);\n    this.showSelectSquarePrompt();\n     console.log('Before toggling game state:', this.isPawnPlacementActive);\n    console.log('After toggling game state:', this.isPawnPlacementActive);\n\n    const squares = document.querySelectorAll('.chess-square');\n    const chessPieceInstance = this; // Store the instance for use in the callback\n\n    // Define the event listener function for pawn placement\n    const pawnPlacementListener = (event) => {\n        const selectedSquareElement = event.currentTarget; // Get the clicked DOM square element\n        console.log(\"selectedSquareElement\", selectedSquareElement);\n\n        const [row, col] = chessPieceInstance.convertSquareIdToRowCol(selectedSquareElement);\n\n        chessPieceInstance.addSpecialPawn(pawnType, 'white', row, col, imagePath, elementId, chessPieceInstance.game, squares);\n                console.log(\"Special pawn placed, restoring normal game state\");\n\n        this.isPawnPlacementActive = false;\n        this.toggleGameState(false);\n        this.refreshPieceEventListeners();\n        chessPieceInstance.restoreNormalGameState(this.pawnPlacementListener);\n        // chessPieceInstance.removeSquareSelectionListeners(); // Call this if it does additional cleanup\n    };\n\n    // Attach the event listener to each square\n     squares.forEach(square => {\n        if (this.isSquareEmpty(square)) {\n            square.addEventListener('click', pawnPlacementListener, { once: true });\n        }\n    });\n\n    this.toggleGameState(true); // Enter special pawn mode\n}\nrestoreNormalGameState(spellListener) {\n    const squares = document.querySelectorAll('.chess-square');\n    squares.forEach(square => {\n        // Remove any specific spell or special action listeners\n        if (spellListener) {\n            square.removeEventListener('click', spellListener);\n        }\n    });\n\n    // Re-enable regular game event listeners and other common reset actions\n    this.refreshPieceEventListeners(true);\n    console.log(\"Normal game state restored\");\n}\nshowSelectSquarePrompt() {\n     console.log(\"Showing modal\");\n  const modal = document.getElementById('select-square-modal');\n  modal.style.display = 'block';\n\n  this.setupSquareListeners();\n\n  // Set a timeout to hide the modal after 5 seconds (5000 milliseconds)\n  setTimeout(() => {\n    this.hideSelectSquarePrompt();\n  }, 500);\n}\nhideSelectSquarePrompt() {\n  const modal = document.getElementById('select-square-modal');\n  modal.style.display = 'none';  \n}\nsetupSquareListeners() {\n    const squares = document.querySelectorAll('.chess-square');\n    squares.forEach(square => {\n        if (this.isSquareEmpty(square)) {\n            // Remove existing listener before adding a new one to avoid duplication\n            square.removeEventListener('click', this.boundHandleSquareClick);\n            square.addEventListener('click', this.boundHandleSquareClick, { once: true });\n        }\n    });\n}\naddPieceEventListener(pieceElement) {\n       pieceElement.addEventListener('click', this.boundHandleClick);\n    pieceElement.classList.add('event-listener-attached');\n}\n\n// Method to remove an event listener\nremovePieceEventListener(pieceElement) {\n    pieceElement.removeEventListener('click', this.boundHandleClick);\n    pieceElement.classList.remove('event-listener-attached');\n}\n\n// Assume each piece is contained within a square and they are separate entities\n// refreshPieceEventListeners(enableListeners) {\n//     console.log('refreshPieceEventListeners function called');\n//     const pieces = document.querySelectorAll('.chess-piece');\n\n//     pieces.forEach(piece => {\n//         const square = piece.parentNode; // Assuming the piece is directly inside the square\n\n//         // Check both the piece and its square for the event-listener-attached class\n//         const needsListener = !piece.classList.contains('event-listener-attached') ||\n//                               !square.classList.contains('event-listener-attached');\n\n//         if (enableListeners && needsListener) {\n//             console.log('Attaching event listener to piece:', piece);\n//             square.addEventListener('click', this.boundHandleClick);\n//             piece.classList.add('event-listener-attached');\n//             square.classList.add('event-listener-attached'); // Also mark the square\n//         } else if (!enableListeners && !needsListener) {\n//             console.log('Detaching event listener from piece:', piece);\n//             square.removeEventListener('click', this.boundHandleClick);\n//             piece.classList.remove('event-listener-attached');\n//             square.classList.remove('event-listener-attached'); // Also unmark the square\n//         }\n//     });\n// }\ninitObserver() {\n  console.log('initObserver function entered');\n        // Observer configuration: watch for data attribute changes\n        const config = { attributes: true, childList: false, subtree: true, attributeFilter: ['data-listenerAttached'] };\n        console.log('config', config);\n\n        // Callback function to execute when mutations are observed\n        const callback = (mutationsList, observer) => {\n            for (const mutation of mutationsList) {\n                if (mutation.type === 'attributes' && mutation.attributeName === 'data-listenerAttached') {\n                  console.log(`Mutation type: ${mutation.type}`);\n                    console.log(`The data-listenerAttached attribute was modified on:`, mutation.target);\n                    const enableListeners = mutation.target.dataset.listenerAttached !== 'true';\n                    this.refreshPieceEventListeners(enableListeners);\n                }\n            }\n        };\n\n        // Create an instance of the observer with the callback function\n        const observer = new MutationObserver(callback);\n\n        // Start observing the document for configured mutations\n        observer.observe(document.body, config);\n    }\n\n\nrefreshPieceEventListeners(enableListeners) {\n    console.log('refreshPieceEventListeners function called, enableListeners being :', enableListeners);\n    const pieces = document.querySelectorAll('.chess-piece');\n\n    pieces.forEach(piece => {\n        const square = piece.parentNode; // Assuming the piece is directly inside the square\n        // Use data attributes to check if the listener is attached\n        const needsListener = !square.dataset.listenerAttached;\n        console.log('square, needsListener', square, needsListener);\n\n\n        if (enableListeners && needsListener) {\n            console.log('Attaching event listener to piece:', piece);\n            square.addEventListener('click', this.boundHandleClick);\n            \n            square.dataset.listenerAttached = 'true';\n        } else if (!enableListeners && !needsListener) {\n            console.log('Detaching event listener from piece:', piece);\n            square.removeEventListener('click', this.boundHandleClick);\n            \n            delete square.dataset.listenerAttached;\n        }\n    });\n}\n\n\n setupCloseButtonListener() {\n    const closeButton = document.getElementsByClassName(\"close-button\")[0];\n    console.log(\"closeButton\", closeButton);\n    if (closeButton) {\n      console.log(\"Close button setup\");\n      const instance = this;\n      closeButton.addEventListener('click', function() {\n        instance.hideSelectSquarePrompt();\n      });\n    }\n  }\n\n\n  // setupSquareListeners() {\n  //   const squares = document.querySelectorAll('.chess-square'); // Use the correct class or selector for your chess squares\n  //   squares.forEach(square => {\n  //     if (this.isSquareEmpty(square)) { // Assuming you have a method to check if a square is empty\n  //         square.addEventListener('click', (event) => {\n  //        // Assuming 'this' refers to an instance of your game or related class\n  //         const selectedSquare = event.target; // or `square` directly\n\n  //         if (this.isSquareEmpty(selectedSquare)) \n  //         {\n  //         // Logic to place a special pawn on the selected square\n  //         // Example: this.placeSpecialPawn(selectedSquare);\n  //           this.placeSpecialPawn(selectedSquare);\n\n  //           // Hide the select square prompt\n  //           this.hideSelectSquarePrompt();\n\n  //           // Any additional game logic after placing the pawn\n  //           this.changeTurn();\n  //         } else {\n  //         // Optionally, handle the case where the square is not empty\n  //           console.log(\"Selected square is not empty.\");\n  //         }\n  //       });\n  //      });\n      \n  // }\n\n  isSquareEmpty(square) {\n    // Implement logic to check if the square is empty\n    return !square.hasChildNodes(); // Example: a square is empty if it has no child nodes\n  }\n\n\n\n// calculateValidMoves(row, col, board) {\n//   console.log(\"Board in calculateValidMoves:\", this.game.board);\n//   const validMoves = [];\n\n//     // The pawn can move forward only (white moves up, black moves down)\n//   const direction = this.color === \"white\" ? 1 : -1;\n\n//   console.log(\"Row:\", row);\n//   console.log(\"Col:\", col);\n//   console.log(\"Direction:\", direction);\n//   console.log(\"Board:\", board);\n\n//     // Check for the forward move (one square)\n//   const newRow = row + direction;\n//   console.log(\"New row:\", newRow);\n//   if (newRow >= 0 && newRow < 8) {\n//     const forwardSquare = this.game.board[newRow][col];\n//     console.log(\"Checking board position for forward move: board[\", newRow, \"][\", col, \"] = \", forwardSquare);\n//     if (!forwardSquare) {\n//       validMoves.push({ row: newRow, col: col });\n//       console.log(\"Added forward move:\", { row: newRow, col: col });\n\n//         // Check for the double-move on the pawn's first move\n//       if ((this.color === \"white\" && row === 1) || (this.color === \"black\" && row === 6)) \n//       {\n//         const doubleMoveRow = newRow + direction;\n//         const doubleMoveSquare = this.game.board[doubleMoveRow][col];\n//         console.log(\"Checking board position for double move: board[\", doubleMoveRow, \"][\", col, \"] = \", doubleMoveSquare);\n//         console.log(\"Double move square:\", doubleMoveSquare);\n//         if (!doubleMoveSquare) \n//         {\n//           validMoves.push({ row: doubleMoveRow, col: col });\n//         }\n//       }\n//     } \n//     else \n//     {\n//       console.log(\"Forward square blocked:\", forwardSquare);\n//     }\n//   } \n//   else \n//   {\n//     console.log(\"New row out of bounds:\", newRow);\n//   }\n\n//   const newRowForCapture = newRow;\n\n//     // Check for captures (diagonal moves)\n//   //const newRowForCapture = newRow;\n//   const captureCols = [col - 1, col + 1];\n//   if (newRowForCapture >= 0 && newRowForCapture < 8) {\n//     for (const captureCol of captureCols) {\n//       console.log(\"New row for capture:\", newRowForCapture);\n//       console.log(\"Capture col:\", captureCol);\n//       if (captureCol >= 0 && captureCol < 8) {\n//         const captureSquare = this.game.board[newRowForCapture][captureCol];\n//         console.log(\"Checking board position for capture: board[\", newRowForCapture, \"][\", captureCol, \"] = \", captureSquare);\n//         console.log(\"Capture square:\", captureSquare);\n//         if (captureSquare && captureSquare.color !== this.color) {\n//           validMoves.push({ row: newRowForCapture, col: captureCol });\n//           console.log(\"Added capture move:\", { row: newRowForCapture, col: captureCol });\n//         } else {\n//           console.log(\"Invalid capture square:\", captureSquare);\n//         }\n//       } else {\n//         console.log(\"Capture col out of bounds:\", captureCol);\n//       }\n//     }\n//   } else {\n//     console.log(\"New row for capture out of bounds:\", newRowForCapture);\n//   }\n\n//   console.log(\"Valid moves in calculateValidMoves:\", validMoves);\n//   ///console.log('Comparing valid moves:', validMoves, 'with target:', {row: newRowForCapture, col: captureCol});\n\n//   return validMoves;\n// }\n\n calculateValidMovesForPiece() {\n    const { row, col, type, color } = this; // Assuming these properties exist on the instance\n    return ChessPiece.calculateValidMoves(row, col, this.game.board, type, color);\n  }\n  calculateValidMoves(row, col, board, type, color, game) {\n  console.log(\"calculateValidMoves called for\", row, col);\n  console.log(\"Board state in calculateValidMoves:\", board);\n  console.log(\"this.game.board state at the beginnign of calculateValidMoves\", this.game.game.board);\n  console.log(\"Piece type in calculateValidMoves:\", type, \"Color:\", color);\n\n  const validMoves = [];\n  const enemyColor = color === \"white\" ? \"black\" : \"white\";\n  const currentRow = parseInt(row, 10);\n  const currentCol = parseInt(col, 10);\n  game = this.game\n  switch (type) {\n    case 'pawn':\n      const pawnSquare = document.querySelector(`.chess-square[data-row=\"${currentRow}\"][data-col=\"${currentCol}\"]`);\n      const pawnElement = pawnSquare.firstElementChild;\n      console.log('pawnSquare', pawnSquare);\n      console.log('pawnSquare class list:', pawnSquare.classList);\n      const isPawnOnMiniBoard = pawnSquare.classList.contains('mini-board-highlight');\n      const isWindOfChangeActive = pawnElement.classList.contains('pawn-random-move');\n      console.log('isPawnOnMiniBoard', isPawnOnMiniBoard);\n     \n      if (isPawnOnMiniBoard)\n      {\n        console.log(\"Processing pawn In MINIBOARD SPELL\");\n        // King-like moves for pawn on mini-board\n        const pawnKingMoves = [\n      { row: currentRow - 1, col: currentCol - 1 }, { row: currentRow - 1, col: currentCol }, { row: currentRow - 1, col: currentCol + 1 },\n      { row: currentRow, col: currentCol - 1 },                             { row: currentRow, col: currentCol + 1 },\n      { row: currentRow + 1, col: currentCol - 1 }, { row: currentRow + 1, col: currentCol }, { row: currentRow + 1, col: currentCol + 1 }\n    ];\n\n    pawnKingMoves.forEach(move => {\n        console.log(`Checking move: row=${move.row}, col=${move.col}`);\n      if (move.row >= 0 && move.row < 8 && move.col >= 0 && move.col < 8) {\n            console.log(`Board state at [${move.row}][${move.col}]:`, this.game.game.board[move.row][move.col]);\n        const targetSquare = this.game.game.board[move.row][move.col];\n        if (!targetSquare || targetSquare.color === enemyColor) {\n          validMoves.push(move);\n        }\n      }\n    });\n\n    } else if (type === 'pawn' && isWindOfChangeActive) {\n      const moveForward = color === \"white\" ? 1 : -1;\n  console.log('Pawn under Wind of Change spell', this);\n  console.log('moveForward', moveForward);\n  console.log('currentCol', currentCol);\n  \n  // Directly use the board state to check move validity instead of relying on an external method\n  // This approach considers both the boundaries and occupancy directly\n\n  // Movement logic when the 'left' or 'right' class is active\n  if (pawnElement.classList.contains('left')) {\n    console.log('moveForward in left moves', moveForward);\n  console.log('currentCol in left moves', currentCol, \"currentRow in left move\", currentRow);\n  // Standard left move\n  if (currentCol > 0 && !this.game.game.board[currentRow][currentCol - 1]) {\n    validMoves.push({ row: currentRow, col: currentCol - 1 });\n\n    // Double move left (ensure no blockage and within board limits)\n    if (currentCol - 2 >= 0 && !this.game.game.board[currentRow][currentCol - 2]) {\n      validMoves.push({ row: currentRow, col: currentCol - 2 });\n    }\n  }\n} else if (pawnElement.classList.contains('right')) {\n  // Standard right move\n  if (currentCol < 7 && !this.game.game.board[currentRow][currentCol + 1]) {\n    validMoves.push({ row: currentRow, col: currentCol + 1 });\n\n    // Double move right (ensure no blockage and within board limits)\n    if (currentCol + 2 <= 7 && !this.game.game.board[currentRow][currentCol + 2]) {\n      validMoves.push({ row: currentRow, col: currentCol + 2 });\n    }\n  }\n}\n\n  else if (pawnElement.classList.contains('forward')) \n  {\n    // Single forward move\n    let targetRow = currentRow + moveForward;\n    if (targetRow >= 0 && targetRow < 8 && !this.game.game.board[targetRow][currentCol]) \n    {\n        validMoves.push({ row: targetRow, col: currentCol });\n    }\n\n    // Double move on first move\n     if ((this.color === \"white\" && currentRow === 1) || (this.color === \"black\" && currentRow === 6)) \n    {\n      let doubleMoveRow = targetRow + moveForward;\n      if (!this.game.game.board[doubleMoveRow][currentCol]) \n      {\n        validMoves.push({ row: doubleMoveRow, col: currentCol });\n      }\n    }\n  }\n    // Movement logic when a 'diagonal' class is active\n    else if (pawnElement.classList.contains('diagonalLeft')) {\n    let targetRow = currentRow + moveForward; // Move one row forward based on color\n    let targetCol = currentCol - 1; // Move one column to the left\n\n    // First diagonal move\n    if (targetRow >= 0 && targetRow < 8 && targetCol >= 0 && targetCol < 8) {\n      if (!this.game.game.board[targetRow][targetCol] || this.game.game.board[targetRow][targetCol].color !== this.color) {\n        validMoves.push({ row: targetRow, col: targetCol });\n\n        // Double move diagonal left\n        let doubleMoveRow = targetRow + moveForward;\n        let doubleMoveCol = targetCol - 1;\n        if (doubleMoveRow >= 0 && doubleMoveRow < 8 && doubleMoveCol >= 0 && doubleMoveCol < 8) {\n          if (!this.game.game.board[doubleMoveRow][doubleMoveCol] || this.game.game.board[doubleMoveRow][doubleMoveCol].color !== this.color) {\n            validMoves.push({ row: doubleMoveRow, col: doubleMoveCol });\n          }\n        }\n      }\n      // Capturing Moves\n  const captureOffsets = [1, -1];\n  for (let offset of captureOffsets) \n  {\n    let captureCol = currentCol + offset;\n    if (captureCol >= 0 && captureCol < 8) \n    {\n      let captureSquare = this.game.game.board[targetRow][captureCol];\n      if (captureSquare && captureSquare.color !== this.color) \n      {\n        validMoves.push({ row: newRow, col: captureCol });\n      }\n    }\n  }\n    }\n\n}\n\n  // Diagonal Right Movement\n else if (pawnElement.classList.contains('diagonalRight')) {\n    let targetRow = currentRow + moveForward; // Move one row forward based on color\n    let targetCol = currentCol + 1; // Move one column to the right\n\n    // First diagonal move\n    if (targetRow >= 0 && targetRow < 8 && targetCol >= 0 && targetCol < 8) {\n      if (!this.game.game.board[targetRow][targetCol] || this.game.game.board[targetRow][targetCol].color !== this.color) {\n        validMoves.push({ row: targetRow, col: targetCol });\n\n        // Double move diagonal right\n        let doubleMoveRow = targetRow + moveForward;\n        let doubleMoveCol = targetCol + 1;\n        if (doubleMoveRow >= 0 && doubleMoveRow < 8 && doubleMoveCol >= 0 && doubleMoveCol < 8) {\n          if (!this.game.game.board[doubleMoveRow][doubleMoveCol] || this.game.game.board[doubleMoveRow][doubleMoveCol].color !== this.color) {\n            validMoves.push({ row: doubleMoveRow, col: doubleMoveCol });\n          }\n        }\n      }\n    }\n    // Capturing Moves\n  const captureOffsets = [1, -1];\n  for (let offset of captureOffsets) \n  {\n    let captureCol = currentCol + offset;\n    if (captureCol >= 0 && captureCol < 8) \n    {\n      let captureSquare = this.game.game.board[targetRow][captureCol];\n      if (captureSquare && captureSquare.color !== this.color) \n      {\n        validMoves.push({ row: newRow, col: captureCol });\n      }\n    }\n  }\n}\n }else {\n       console.log(\"Processing pawn\");\n  let direction = color === \"white\" ? 1 : -1; // Adjusted for the board setup\n  console.log('direction', direction); \n  let newRow = currentRow + direction;\n  console.log('newRow for pawn in calculateValidMoves:', newRow);\n\n  // Forward Move\n  if (newRow >= 0 && newRow < 8 && !this.game.game.board[newRow][currentCol]) {\n    validMoves.push({ row: newRow, col: currentCol });\n      console.log('this.color before the pawn double square first move aka PDSFM', this.color)\n      console.log(\"Pawn starting row check:\", (this.color === \"white\" && row === 1) || (this.color === \"black\" && row === 6));\n      console.log(\"Square directly in front is empty:\", !this.game.game.board[currentRow + direction][currentCol]);\n      console.log(\"Square two steps ahead is empty:\", !this.game.game.board[currentRow + 2 * direction][currentCol]);\n\n    // Double Move on First Move\n    if ((this.color === \"white\" && currentRow === 1) || (this.color === \"black\" && currentRow === 6)) \n    {\n      let doubleMoveRow = newRow + direction;\n      if (!this.game.game.board[doubleMoveRow][currentCol]) \n      {\n        validMoves.push({ row: doubleMoveRow, col: currentCol });\n      }\n    }\n  }\n\n  // Capturing Moves\n  const captureOffsets = [1, -1];\n  for (let offset of captureOffsets) \n  {\n    let captureCol = currentCol + offset;\n    if (captureCol >= 0 && captureCol < 8) \n    {\n      let captureSquare = this.game.game.board[newRow][captureCol];\n      if (captureSquare && captureSquare.color !== this.color) \n      {\n        validMoves.push({ row: newRow, col: captureCol });\n      }\n    }\n  }\n  }\n  break;\n\n    case 'knight':\n  const knightMoves = [\n    { row: currentRow - 2, col: currentCol - 1 }, { row: currentRow - 2, col: currentCol + 1 },\n    { row: currentRow - 1, col: currentCol - 2 }, { row: currentRow - 1, col: currentCol + 2 },\n    { row: currentRow + 1, col: currentCol - 2 }, { row: currentRow + 1, col: currentCol + 2 },\n    { row: currentRow + 2, col: currentCol - 1 }, { row: currentRow + 2, col: currentCol + 1 }\n  ];\n  knightMoves.forEach(move => {\n    if (move.row >= 0 && move.row < 8 && move.col >= 0 && move.col < 8) {\n      const targetSquare = this.game.game.board[move.row][move.col];\n      if (!targetSquare || targetSquare.color === enemyColor) {\n        validMoves.push(move);\n      }\n    }\n  });\n  break;\n\n    case 'bishop':\n      console.log(\"Processing bishop\");\n  const bishopDirections = [\n    { dr: -1, dc: -1 }, // Up-Left\n    { dr: -1, dc: 1 },  // Up-Right\n    { dr: 1, dc: -1 },  // Down-Left\n    { dr: 1, dc: 1 }    // Down-Right\n  ];\n\n  bishopDirections.forEach(dir => {\n    for (let i = 1; i < 8; i++) {\n      const newRow = currentRow + dir.dr * i;\n      const newCol = currentCol + dir.dc * i;\n\n      if (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n        const square = this.game.game.board[newRow][newCol];\n        if (!square) {\n          validMoves.push({ row: newRow, col: newCol });\n        } else {\n          if (square.color === enemyColor) {\n            validMoves.push({ row: newRow, col: newCol });\n          }\n          break;\n        }\n      }\n    }\n  });\n  break;\n\n    case 'rook':\n      console.log(\"Processing rook\");\n  // Directions: Up, Down, Left, Right\n  const directions = [\n    { dr: -1, dc: 0 }, // Up\n    { dr: 1, dc: 0 },  // Down\n    { dr: 0, dc: -1 }, // Left\n    { dr: 0, dc: 1 }   // Right\n  ];\n\n  directions.forEach(dir => {\n    for (let i = 1; i < 8; i++) {\n      const newRow = currentRow + dir.dr * i;\n      const newCol = currentCol + dir.dc * i;\n\n      if (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n        const square = this.game.game.board[newRow][newCol];\n        if (!square) {\n          validMoves.push({ row: newRow, col: newCol });\n        } else {\n          // If it's an enemy piece, include it as a valid move\n          if (square.color === enemyColor) {\n            validMoves.push({ row: newRow, col: newCol });\n          }\n          // Break after encountering any piece\n          break;\n        }\n      }\n    }\n  });\n  break;\n\n   case 'queen':\n  // Combine rook and bishop logic for queen\n  const queenDirections = [\n    // Diagonal directions\n    { dr: -1, dc: -1 }, { dr: -1, dc: 1 },\n    { dr: 1, dc: -1 }, { dr: 1, dc: 1 },\n    // Straight directions\n    { dr: -1, dc: 0 }, { dr: 1, dc: 0 },\n    { dr: 0, dc: -1 }, { dr: 0, dc: 1 }\n  ];\n\n  queenDirections.forEach(dir => {\n    for (let i = 1; i < 8; i++) {\n      const newRow = currentRow + dir.dr * i;\n      const newCol = currentCol + dir.dc * i;\n\n      if (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n        const square = this.game.game.board[newRow][newCol];\n        if (!square) {\n          validMoves.push({ row: newRow, col: newCol });\n        } else {\n          if (square.color === enemyColor) {\n            validMoves.push({ row: newRow, col: newCol });\n          }\n          break;\n        }\n      }\n    }\n  });\n  break;\n\n    case 'king':\n      console.log(\"Processing king\");\n      \n      // Add king moves (one square in any direction)\n      const kingMoves = [\n        { row: currentRow - 1, col: currentCol - 1 }, { row: currentRow - 1, col: currentCol }, { row: currentRow - 1, col: currentCol + 1 },\n        { row: currentRow, col: currentCol - 1 },                               { row: currentRow, col: currentCol + 1 },\n        { row: currentRow + 1, col: currentCol - 1 }, { row: currentRow + 1, col: currentCol }, { row: currentRow + 1, col: currentCol + 1 }\n      ];\n       console.log(\"King Moves:\", kingMoves); // Log 1\n\n  kingMoves.forEach(move => {\n    console.log(\"Evaluating move:\", move); // Log 2\n\n    if (move.row >= 0 && move.row < 7 && move.col >= 0 && move.col < 7) {\n      // console.log(\"Board at [\" + move.currentRow + \"][\" + move.currentCol + \"]:\", this.game.board[move.currentRow][move.currentCol]); // Log 3\n\n      if (!this.game.game.board[move.row][move.col] || this.game.game.board[move.row][move.col].color === enemyColor) {\n        validMoves.push(move);\n        console.log(\"Valid move added:\", move); // Log 4\n      }\n    }\n  });\n  break;\n\ndefault:\n  console.error('Unknown piece type:', this.type);\n}\nconsole.log(\"this.game;board at the end of calculateValidMovesl :\", this.game.board);\nconsole.log(\"Valid moves generated:\", validMoves);\nreturn validMoves;\n}\n\n\n\n    isValidMove(currentRow, currentCol, newRow, newCol, board) {\n    // create a new ChessPiece object with the current piece's information\n    const currentPiece = new ChessPiece(this.type, this.color, this.row, this.col, this.imagePath, this.element, this.board);\n\n    // check if the move is within the board boundaries\n    if (newRow < 0 || newRow > 7 || newCol < 0 || newCol > 7) {\n      console.log('move outside of board boundaries');\n        return false;\n    }\n     const currentSquare = document.querySelector(`.chess-square[data-row=\"${currentRow}\"][data-col=\"${currentCol}\"]`);\n    const onMiniBoard = currentSquare && currentSquare.classList.contains('mini-board');\n    console.log('currentSquare0', currentSquare, 'onMiniBoard', onMiniBoard);\n    // check if the piece can move to the new square based on its type and the rules of chess\n    switch (currentPiece.type) {\n        case 'pawn':\n           if (onMiniBoard) {\n            console.log('pawn is on miniboard upgrading');\n                return Math.abs(newRow - currentRow) <= 1 && Math.abs(newCol - currentCol) <= 1;\n            }\n            \n            // pawns can move forward one square, or forward two squares on their first move\n            if (currentPiece.color == 'white') {\n                if (newRow == currentRow - 1 && newCol == currentCol && !board[newRow][newCol]) {\n                    return true;\n                } else if (newRow == currentRow - 2 && newCol == currentCol && !board[newRow][newCol] && !board[currentRow - 1][currentCol] && currentRow == 6) {\n                    return true;\n                }\n            } else if (currentPiece.color == 'black') {\n                if (newRow == currentRow + 1 && newCol == currentCol && !board[newRow][newCol]) {\n                    return true;\n                } else if (newRow == currentRow + 2 && newCol == currentCol && !board[newRow][newCol] && !board[currentRow + 1][currentCol] && currentRow == 1) {\n                    return true;\n                }\n            }\n            break;\n        case 'rook':\n            // rooks can move horizontally or vertically, as long as there are no pieces blocking their path\n            if (newRow == currentRow || newCol == currentCol) {\n                // check for pieces blocking the rook's path\n                if (!isBlocked(currentPiece, newRow, newCol)) {\n                    return true;\n                }\n            }\n            break;\n        case 'knight':\n            // knights can move to squares that are two rows and one column, or two columns and one row away\n            if (Math.abs(newRow - currentRow) == 2 && Math.abs(newCol - currentCol) == 1 || Math.abs(newRow - currentRow) == 1 && Math.abs(newCol - currentCol) == 2) {\n                return true;\n            }\n            break;\n        case 'bishop':\n            // bishops can move diagonally, as long as there are no pieces blocking their path\n            if (Math.abs(newRow - currentRow) == Math.abs(newCol - currentCol)) {\n                // check for pieces blocking the bishop's path\n                if (!isBlocked(currentPiece, newRow, newCol)) {\n                    return true;\n                }\n            }\n            break;\n        case 'queen':\n            // queens can move horizontally, vertically, or diagonally, as long as there are no pieces blocking their path\n            if (newRow == currentRow || newCol == currentCol || Math.abs(newRow - currentRow) == Math.abs(newCol - currentCol)) {\n                // check for pieces blocking the queen's path\n                if (!isBlocked(currentRow, currentCol, newRow, newCol)) {\n                    return true;\n                }\n            }\n            break;\n            case 'king':\n            // kings can move to any adjacent square (horizontally, vertically, or diagonally)\n            if (Math.abs(newRow - currentRow) <= 1 && Math.abs(newCol - currentCol) <= 1) {\n                return true;\n            }\n            break;\n        default:\n            // if the piece is not recognized, return false\n          console.log(\"piece not recognized\");\n            return false;\n    }\n\n    // if the move is not valid, return false\n            console.log(\"unvalidmove\");\n\n    return false;\n}\n\nupdateBoardVisuals() {\n    console.log(\"updateBoardVisuals called\");\n\n    // Loop through all square elements\n    document.querySelectorAll('.square').forEach(squareElement => {\n        // Retrieve row and column from data attributes\n        const row = parseInt(squareElement.getAttribute('data-row'));\n        const col = parseInt(squareElement.getAttribute('data-col'));\n        console.log(\"squareElement in udpateBoardVisuals\", squareElement);\n\n        // Remove the previous click event listener, if any\n        squareElement.removeEventListener('click', this.boundHandleClick);\n\n        // Attach the new event listener\n        squareElement.addEventListener('click', (event) => this.boundHandleClick(event, this.chessBoard), { once: true });\n\n        // Get the cell from the game board\n        const cell = this.board[row][col];\n        console.log(\"this.game.board in updateBoardVisuals\", cell);\n\n        // Update the square element based on the piece in the cell\n        if (cell) {\n            squareElement.innerHTML = `<div class=\"chess-piece\" style=\"background-image: url('${cell.imagePath}')\"></div>`;\n        } else {\n            squareElement.innerHTML = '';\n        }\n    });\n        console.log(\"Finished updateBoardVisuals\");\n}\n\n\n\n// Function to initialize the internal board state based on the initial layout\n initializeBoard() {\n  // Initialize an empty 8x8 board\n    document.querySelectorAll('.chess-square').forEach(square => {\n        const row = parseInt(square.getAttribute('data-row'));\n        const col = parseInt(square.getAttribute('data-col'));\n        const piece = square.querySelector('.chess-piece div');\n        console.log(\"piece in initializeBoard\", piece);\n        if (piece) {\n            this.game.board[row][col] = {\n                type: piece.className, // e.g., 'white-rook'\n                row : row,\n                cols: col,\n                imagePath: piece.getAttribute('src')\n            };\n        }\n    });\n}\n nextRandom(multiplier, seed, increment, modulus) {\n    const nextSeed = (multiplier * seed + increment) % modulus;\n    const nextValue = nextSeed / modulus;\n    return { newSeed: nextSeed, nextValue };\n  }\n\nchaosWarp(board, data) {\n    console.log(\"chaosWarp called with rng:\", data);\n\n        const squares = Array.from(document.querySelectorAll('.chess-square'));\n    console.log(\"squares found:\", squares);\n\n    let currentSeed = data.seed;\n    let pieces = [];\n\n    // Extract pieces from the game board\n    squares.forEach(square => {\n        const pieceElement = square.querySelector('.chess-piece');\n        if (pieceElement) {\n            pieces.push({\n                element: pieceElement,\n                originalSquare: square,\n                type: pieceElement.classList[1].split('-')[1], // Assuming second class is piece type\n                color: pieceElement.classList[1].split('-')[0],  // Assuming second class is piece color\n                row: parseInt(square.getAttribute('data-row'), 10),\n                col: parseInt(square.getAttribute('data-col'), 10)\n            });\n            // Remove the piece element from the square\n            square.classList.remove('has-piece');\n            square.removeAttribute('data-type');\n            square.removeAttribute('data-color');\n            square.style.backgroundImage = '';\n            square.removeChild(pieceElement);\n        }\n    });\n\n    // Shuffle the pieces array\n    for (let i = pieces.length - 1; i > 0; i--) {\n        let rngResult = this.nextRandom(data.multiplier, currentSeed, data.increment, data.modulus);\n        let j = Math.floor(rngResult.nextValue * (i + 1));\n        [pieces[i], pieces[j]] = [pieces[j], pieces[i]];\n        currentSeed = rngResult.newSeed; // Update currentSeed for next iteration\n    }\n    // Shuffle the squares array\n    for (let i = squares.length - 1; i > 0; i--) {\n        let rngResult = this.nextRandom(data.multiplier, currentSeed, data.increment, data.modulus);\n        let j = Math.floor(rngResult.nextValue * (i + 1));\n        [squares[i], squares[j]] = [squares[j], squares[i]];\n        currentSeed = rngResult.newSeed; // Update currentSeed for next iteration\n    }\n\n    const shuffledPositions = [];\n\n    // Place the shuffled pieces back on the board\n    pieces.forEach((piece, index) => {\n        const square = squares[index];\n        const newRow = parseInt(square.getAttribute('data-row'), 10);\n        const newCol = parseInt(square.getAttribute('data-col'), 10);\n\n        square.appendChild(piece.element);\n        square.classList.add('has-piece');\n        square.setAttribute('data-type', piece.type);\n        square.setAttribute('data-color', piece.color);\n\n        // Update the internal board\n        this.game.board[newRow][newCol] = {\n            type: piece.type,\n            color: piece.color\n        };\n        console.log('piece value before pushing shuffledposition in the array', piece);\n        shuffledPositions.push({\n            id: piece.element, // Make sure your pieces have a data-piece-id attribute\n            newRow: newRow,\n            newCol: newCol\n        });\n    });\n\n    console.log(\"Shuffling complete, internal board updated.\");\n    console.log('shuffledPositions', shuffledPositions);\n\n    this.updateInternalBoardStateFromDOM();\n    this.updateBoardVisuals();\n\n    return shuffledPositions;\n}\n\nupdateInternalBoardStateFromDOM() {\n  console.log(\"updateInternalBoardStateFromDOM called\");\n\n  // Query all the chess square elements from the DOM\n  const squares = document.querySelectorAll('.chess-square');\n  squares.forEach(square => {\n    const row = parseInt(square.getAttribute('data-row'), 10);\n    const col = parseInt(square.getAttribute('data-col'), 10);\n    const type = square.getAttribute('data-type');\n    const color = square.getAttribute('data-color');\n    const pieceElement = square.querySelector('.chess-piece');\n\n    if (type && color) {\n      // Using retrieveOrCreatePiece to ensure consistency\n      const piece = this.retrieveOrCreatePiece(type, color, row, col, this.game, this.chessBoard);\n      this.game.board[row][col] = piece;\n\n      // Update pieceElement's backgroundImage if it exists\n      if (pieceElement && piece && piece.imagePath) {\n        pieceElement.style.backgroundImage = `url('${piece.imagePath}')`;\n      }\n    } else {\n      this.game.board[row][col] = null; // No piece at this square\n    }\n  });\n\n  console.log(\"Updated internal board state:\", this.game.board);\n}\n\n\n// Helper function to check if the placement of a piece is valid\n isValidPlacement(row, col, piece, gameBoard) {\n    // Implement rules for valid placement (e.g., kings not in check)\n    // This is a placeholder; you need to implement the specific rules.\n    return true; // Return true if valid, false otherwise\n}\n\n  castFrostGridSpell() {\n    console.log('castFrostGridSpell called');\n    this.toggleSpellMode('FrostGrid', true);\n                const chessBoardElement = document.getElementById('chessboard');\n    chessBoardElement.addEventListener('mousemove', this.handleHover);\n     chessBoardElement.addEventListener('click', this.boundHandleSelection, { once: true });\n          // chessBoardElement.removeEventListener('click', this.boundHandleClick, { once: true });\n\n}\n    handleHover(event) {\n    if (!this.isSpellActive) {\n        console.log(\"handleHover returned due to isSpellActive being :\", this.isSpellActive);\n        return;\n    }\n    let { x, y } = this.determineTopLeftCorner(event);\n    this.highlightArea(x, y);\n}\n   handleSelection(event) {\n    event.preventDefault(); \n    event.stopPropagation();\n    if (!this.isSpellActive) {\n        console.log(\"handleSelection returned due to isSpellActive being :\", this.isSpellActive);\n        return;\n    }\n    let { x, y } = this.determineTopLeftCorner(event);\n    this.applySpellEffects(x, y);\n    this.deactivateSpell();\n}\n\n     highlightArea(x, y){\n        this.clearHighlights();\n        for (let i = 0; i < 2; i++) {\n            for (let j = 0; j < 2; j++) {\n                let highlightX = x + i;\n                let highlightY = y + j;\n                let squareElement = document.getElementById(`square-${highlightX}-${highlightY}`);\n                if (squareElement) {\n                    squareElement.classList.add('highlight');\n                    this.highlightedSquares.push(squareElement);\n                }\n            }\n        }\n    };\n\n    clearHighlights(){\n        this.highlightedSquares.forEach(square => square.classList.remove('highlight'));\n        this.highlightedSquares = [];\n    };\n\n     applySpellEffects(x, y){\n        console.log('applySpellEffects called');\n        for (let i = x; i < x + 2; i++) {\n            for (let j = y; j < y + 2; j++) {\n                 const chessBoard = document.querySelector(`#chessboard`);\n                console.log(\"chessBoard\", chessBoard);\n\n      let pieces = chessBoard.querySelectorAll('.has-piece.highlight');\n     \n                      console.log(\"pieces\", pieces);\n                    \n                if (pieces) {\n                    this.applyEffectToPiece(pieces, i, j);\n                }\n            }\n        }\n    };\n\n    applyEffectToPiece(square, x, y) {\n  console.log(\"applyEffectToPiece called\");\n const chessBoard = document.querySelector(`#chessboard`);\n                console.log(\"chessBoard\", chessBoard);\n\n      let pieces = chessBoard.querySelectorAll('.has-piece.highlight');\n  // Assuming 'pieces' is a NodeList or array of DOM elements\n \n    pieces.forEach(piece => {\n      // Apply the 'frozen-piece' class to each piece\n      if (piece.classList) {\n        piece.classList.add('frozen-piece');\n      }\n    });\n\n    // Apply the 'frozen-square' class to the square\n    if (square.classList) {\n      square.classList.add('frozen-square');\n    }\n  \n}\n\ndeactivateSpell() {\n    console.log('Deactivating Frost Grid Spell called');\n    this.toggleSpellMode('FrostGrid', false);\n    const chessBoardElement = document.getElementById('chessboard');\n    chessBoardElement.removeEventListener('mousemove', this.handleHover);\n    chessBoardElement.removeEventListener('click', this.boundHandleSelection);\n}\n//BEGINNING OF CASTADEPTWANDSPELL\n        // Utility function to determine the top-left corner of the 2x2 area\n determineTopLeftCorner(event) {\n\n    const chessBoardElement = document.getElementById('chessboard');\n    const boardRect = chessBoardElement.getBoundingClientRect();\n    const squareSize = boardRect.width / 8; // Assuming an 8x8 chessboard\n\n    // Calculate the mouse position relative to the chessboard\n    const mouseX = event.clientX - boardRect.left;\n    const mouseY = event.clientY - boardRect.top;\n\n    // Determine the top-left square of the 2x2 area\n    // Swap the calculations for x and y to align with mouse movement\n    let y = Math.floor(mouseX / squareSize); // Use mouseX to calculate y\n    let x = Math.floor(mouseY / squareSize); // Use mouseY to calculate x\n\n    // Ensure the 2x2 area stays within the chessboard\n    x = Math.max(0, Math.min(x, 6));\n    y = Math.max(0, Math.min(y, 6));\n\n    return { x, y };\n\n        this.activateSpell();\n    }\n\n   getPieceFromCoords(game, row, col) {\n    console.log('getPieceFromCoords called with row:', row, 'col:', col);\n    const selector = `.chess-square[data-row=\"${row}\"][data-col=\"${col}\"]`;\n    const squareElement = document.querySelector(selector);\n    \n    if (squareElement) {\n        console.log('Found square element:', squareElement);\n        const pieceElement = squareElement.querySelector('.chess-piece');\n        if (pieceElement) {\n            console.log('Found piece element:', pieceElement);\n            return pieceElement;\n        } else {\n            console.error(`No piece element found in square at row ${row}, col ${col}`);\n            return null;\n        }\n    } else {\n        console.error(`No square element found at row ${row}, col ${col}`);\n        return null;\n    }\n}\n\n\n\nsyncWithClients(gameId, data) {\n    const gameSession = getGameSession(gameId);\n    gameSession.players.forEach(player => {\n        player.socket.emit('gameUpdate', data);\n    });\n}\n\ncastAdeptWandSpell(spellResult, board, game, gameId) {\n  \nconsole.log(' random rift duration being', spellResult)\n \n    const riftDuration = spellResult;\n        // Initialize the rift duration\n        this.riftDuration = spellResult; // Duration between 1 and 6 turns\n        console.log(`Rift started with duration: ${this.riftDuration} turns`);\n        // this.updateRiftTurns = this.showNotification(\"Rift\", this.riftDuration, \"Piece teleported to a random square.\");\n        // Define and visually represent the rift area\n       // this.syncWithClients(gameId, { type: 'castSpell', duration: riftDuration });\n\n        this.defineAndShowRiftArea();\n\n        // // Check if this piece is in the rift area\n        // if (this.isInRift(this.row, this.col)) {\n        //     this.randomlyPlacePiece();\n        // }\n    //     socket.emit('castSpell', {\n    //     gameId: gameId,\n    //     spellType: spellType\n    // });\n\n        const spell = {\n          name: 'Rift',\n          duration: this.riftDuration,\n          updateEffect: () => {\n            // Assuming you have a method in your game UI to update notifications\n            this.updateNotification(spell.name, spell.duration, \"Piece teleported to a random square.\");\n            \n          },\n            endEffect: () => {\n                // Logic to end the spell effect\n                this.removeRiftArea();\n                this.removeNotification(spell.name);\n            }\n        };\n        this.riftSpellDuration = this.riftDuration;\n        console.log('this.riftSpellDuration in castAdeptWandSpell', this.riftSpellDuration);\n        this.activeSpells.push(spell);\n        this.updateGameStateInMovePiece = this.updateGameStateInMovePiece.bind(this, this.activeSpells);\n        this.executeMove = this.executeMove.bind(this, this.activeSpells);\n\n\n           console.log(\"Active Spells after adding Rift:\", this.activeSpells);\n        spell.updateEffect();\n        // Show notification about the rift effect\n       // this.showNotification(spell.name, spell.duration, \"Piece teleported to a random square.\");\n     }\n     postMoveActions(newRow, newCol, turnsLeft) {\n      console.log('Executing post-move actions for piece:', this);\n     \n      // Check if the piece has moved into the rift\n      if (this.isInRift(newRow, newCol)) \n      {\n        console.log('Piece moved into rift, shuffling position');\n        this.randomlyPlacePiece();\n        console.log(\"Active Spells in postMoveActions:\", this.activeSpells);\n        const riftSpell = this.activeSpells.find(spell => spell.name === 'Rift');\n        console.log('riftSpell in postMoveActionsos', riftSpell);\n        if (riftSpell) \n        {\n          console.log('trying to updateNotification on rifl increment, spell duration', riftSpell.duration);\n          this.updateNotification(\"Rift\", riftSpell.duration, \"Piece teleported to a random square.\");\n        }\n        console.log('tried to updateNotification');\n      } else {\n        console.log('Piece did not move into rift, no additional action taken');\n      }\n    }\n\nremoveRiftArea(){\n   const riftCenterRow = Math.floor(this.game.board.length / 2);\n        const riftCenterCol = Math.floor(this.game.board[0].length / 2);\n\n        const riftArea = [\n            [riftCenterRow - 1, riftCenterCol - 1],\n            [riftCenterRow - 1, riftCenterCol],\n            [riftCenterRow, riftCenterCol - 1],\n            [riftCenterRow, riftCenterCol]\n        ];\n\n        riftArea.forEach(([row, col]) => {\n            const square = document.querySelector(`#square-${row}-${col}`);\n            if (square) {\n                square.classList.remove('rift');\n            }\n        });\n    }\n\n    // Define and visually represent the rift area\n    defineAndShowRiftArea() {\n        const riftCenterRow = Math.floor(this.game.board.length / 2);\n        const riftCenterCol = Math.floor(this.game.board[0].length / 2);\n\n        const riftArea = [\n            [riftCenterRow - 1, riftCenterCol - 1],\n            [riftCenterRow - 1, riftCenterCol],\n            [riftCenterRow, riftCenterCol - 1],\n            [riftCenterRow, riftCenterCol]\n        ];\n\n        riftArea.forEach(([row, col]) => {\n            const square = document.querySelector(`#square-${row}-${col}`);\n            if (square) {\n                square.classList.add('rift');\n            }\n        });\n    }\n\n    isInRift(row, col) {\n        // Assuming the rift area is defined in the game state\n        return this.getRiftArea().some(([riftRow, riftCol]) => riftRow === row && riftCol === col);\n    }\n    getRiftArea() {\n        // Assuming the board is a property of this.game\n        const board = this.game.board;\n        const riftCenterRow = Math.floor(board.length / 2);\n        const riftCenterCol = Math.floor(board[0].length / 2);\n\n        return [\n            [riftCenterRow - 1, riftCenterCol - 1],\n            [riftCenterRow - 1, riftCenterCol],\n            [riftCenterRow, riftCenterCol - 1],\n            [riftCenterRow, riftCenterCol]\n        ];\n    }\n     updateGameStateInMovePiece(game, activeSpells) {\n    console.log(\".game in updateGameStateInMovePiece :\", game);\n    console.log(\"Flag before executeMove:\", this.hasMovedDueToRift);\nconsole.log(\".activeSpells in updateGameStateInMovePiece :\", activeSpells);\n    \nactiveSpells = this.activeSpells;\nconsole.log('activeSpells in updateGameStateInMovePiece', activeSpells);\n    // Update the current player\n    this.currentPlayer = this.currentPlayer === \"white\" ? \"black\" : \"white\";\n    console.log(\"Active Spells in updateGameStateInMovePiece:\", this.activeSpells);\n    // Update active spells\n    this.activeSpells.forEach(spell => {\n      console.log('spell.duration before -- :', spell.duration);\n        this.riftSpellDuration --;\n        console.log('spell.duration after -- :', spell.duration);\n        if (this.riftSpellDuration > 0) {\n          this.updateNotification(spell.name, this.riftSpellDuration, \"Piece teleported to a random square.\");\n       \n        } else {\n            spell.endEffect();\n        }\n    });\n\n    // Remove spells that have ended\n    this.activeSpells = this.activeSpells.filter(spell => spell.duration > 0);\n\n\n\n    // ... any additional game state updates ...\n}\n    // Method to randomly place a piece on the board\n    randomlyPlacePiece(game) {\n      \n      console.log('this.game.board in randomlyPlacePiece', this.game.board);\n    if (this.isRandomlyPlacing) {\n        console.log('Already placing a piece, exiting to prevent overlap.');\n        return;\n    }\n\n    this.isRandomlyPlacing = true;\n\n    // Function to get empty squares\n    const getEmptySquares = squareElements => squareElements.filter(square => !square.classList.contains('has-piece'));\n\n    // Use the function to get empty squares from the board's square elements\n    let emptySquares = getEmptySquares(this.board.squareElements);\n    console.log('emptySquares :', emptySquares);\n    if (emptySquares.length === 0) {\n        console.error('No empty squares available');\n        this.isRandomlyPlacing = false;\n        return;\n    }\n\n    // Randomly select an empty square\n    let randomSquare = emptySquares[Math.floor(Math.random() * emptySquares.length)];\n\n    // Extract row and col from the square's ID (assuming IDs are in the format 'square-row-col')\n    const [_, randomRow, randomCol] = randomSquare.id.split('-').map(Number);\n\n    // Use forceMove to move the piece\n    this.forceMove(this, randomRow, randomCol, true);\n\n    this.isRandomlyPlacing = false;\n    this.hasMovedDueToRift = true;\n        console.log(\"Rift move completed, flag set:\", this.hasMovedDueToRift);\n    console.log(`Piece moved to new position: (${randomRow}, ${randomCol})`);\n}\n\n\nupdateRiftDurationOnPlayerChange() {\n    console.log(\"updateRiftDurationOnPlayerChange called\");\n        console.log(\"Current active spells:\", this.activeSpells);\n\n    const riftSpell = this.activeSpells.find(spell => spell.name);\n    console.log(\"Rift Spell found:\", riftSpell);\n\n    if (riftSpell) {\n        riftSpell.duration--;\n        console.log(`Rift duration decremented to ${riftSpell.duration}`);\n\n        if (riftSpell.duration > 0) {\n            this.updateNotification(riftSpell.name, riftSpell.duration, \"Piece teleported to a random square.\");\n        } else {\n            riftSpell.endEffect();\n            this.activeSpells = this.activeSpells.filter(spell => spell !== riftSpell);\n            console.log(\"Rift spell ended and removed from active spells\");\n        }\n    }\n}\n\n\n  // END OF RIFT SPELL AKA ADEPTWANDSPELL\n        //STILL NOT FUNCITONNNAL\\\\\n//BEGINNING OF FINAL STAND SPELL\n  startFinalStand() \n  {\n    this.isFinalStandActive = true;\n    // this.createMiniBoardContainer();\n    this.setupMiniBoard();\n    this.clearMiniBoard();\n    // this.positionMiniBoard();\n    // this.selectPiecesForMiniGame();\n    // Notify players about the start of the mini-game\n  }\n\n      setupMiniBoard() {\n    console.log('Current player color:', this.playerColor || this.game?.currentPlayer);        if (this.playerColor === 'white') {\n        // Bottom right for white\n        this.miniBoardArea = { x1: 6, y1: 6, x2: 7, y2: 7 };\n    } else if (this.playerColor === 'black') {\n        // Top left for black\n        this.miniBoardArea = { x1: 0, y1: 0, x2: 1, y2: 1 };\n    }\n        this.highlightMiniBoardArea();\n        // Visually distinguish the mini-board area (CSS changes)\n        // Disable interactions for pieces outside the mini-board\n        const allSquares = document.querySelectorAll('.chess-square');\n        console.log('allSquares', allSquares);\n        allSquares.forEach(square => {\n            const row = parseInt(square.getAttribute('data-row'));\n            const col = parseInt(square.getAttribute('data-col'));\n            if (!this.isWithinMiniBoard(row, col)) {\n                square.classList.add('inactive-square');\n            }\n        });\n\n        // Gray out or blur other pieces and board squares\n        // Example: Adding a CSS class to gray out pieces\n        const allPieces = document.querySelectorAll('.chess-piece');\n        allPieces.forEach(piece => {\n            const row = parseInt(piece.parentNode.getAttribute('data-row'));\n            const col = parseInt(piece.parentNode.getAttribute('data-col'));\n            if (!this.isWithinMiniBoard(row, col)) {\n                piece.classList.add('grayed-out');\n            }\n        });\n    }\n\n    clearMiniBoard() {\n      console.log('clearMiniBoard function entered');\n      console.log('this.miniBoardArea.x1', this.miniBoardArea.x1, 'this.miniBoardArea.y1', this.miniBoardArea.y1, 'this.miniBoardArea.y2', this.miniBoardArea.y2, 'this.miniBoardArea.x2', this.miniBoardArea.x2);\n      const unoccupiedSquares = Array.from(document.querySelectorAll('.chess-square:not(.has-piece)'))\n      .filter(square => !this.isWithinMiniBoard(\n        parseInt(square.getAttribute('data-row')),\n        parseInt(square.getAttribute('data-col'))\n        ));\n\n      for (let row = this.miniBoardArea.y1; row <= this.miniBoardArea.y2; row++) {\n        for (let col = this.miniBoardArea.x1; col <= this.miniBoardArea.x2; col++) {\n            const square = document.querySelector(`.chess-square[data-row=\"${row}\"][data-col=\"${col}\"]`);\n            if (!square) {\n                console.error(`Square not found at row ${row}, col ${col}`);\n                continue;\n            }\n            console.log('Clearing square:', square);\n            const piece = square.querySelector('.chess-piece');\n            if (piece) {\n                // Randomly select an unoccupied square and move the piece there\n                if (unoccupiedSquares.length > 0) {\n                    const randomIndex = Math.floor(Math.random() * unoccupiedSquares.length);\n                    const targetSquare = unoccupiedSquares[randomIndex];\n                    unoccupiedSquares.splice(randomIndex, 1); // Remove the square from the array\n\n                    this.forceMovePieceToSquare(piece, targetSquare);\n                    // square.classList.remove('has-piece');\n                } else {\n                    console.error('No unoccupied squares available to move the piece');\n                }\n            }\n        }\n    }\n\n    // Rest of your code for placing pawns and prompting for piece selection\n    this.handlePieceSelection();\n}\n\n    highlightMiniBoardArea() {\n    console.log('highlightMiniBoardArea function called');\n    \n    // Create the mini-board container\n    const chessboard = document.getElementById('chessboard'); // Main chessboard container ID\n    const miniBoardContainer = document.createElement('div');\n    miniBoardContainer.className = 'mini-board-container';\n    chessboard.appendChild(miniBoardContainer);\n\n    let topLeftSquare, bottomRightSquare;\n\n    // Find the top-left and bottom-right squares of the mini-board\n    for (let row = this.miniBoardArea.y1; row <= this.miniBoardArea.y2; row++) {\n        for (let col = this.miniBoardArea.x1; col <= this.miniBoardArea.x2; col++) {\n            const square = document.querySelector(`.chess-square[data-row=\"${row}\"][data-col=\"${col}\"]`);\n            square.classList.add('mini-board-highlight');\n            if (!topLeftSquare) topLeftSquare = square;\n            bottomRightSquare = square;\n        }\n    }\n\n    // Calculate the position and size for the mini-board container\n    const topLeftRect = topLeftSquare.getBoundingClientRect();\n    const bottomRightRect = bottomRightSquare.getBoundingClientRect();\n\n    // Set the position and size of the mini-board container\n    miniBoardContainer.style.position = 'absolute';\n    miniBoardContainer.style.left = `${topLeftRect.left}px`;\n    miniBoardContainer.style.top = `${topLeftRect.top}px`;\n    miniBoardContainer.style.width = `${bottomRightRect.right - topLeftRect.left}px`;\n    miniBoardContainer.style.height = `${bottomRightRect.bottom - topLeftRect.top}px`;\n\n\n    // Highlight the mini-board area and set up piece event listeners\n    for (let row = this.miniBoardArea.y1; row <= this.miniBoardArea.y2; row++) {\n        for (let col = this.miniBoardArea.x1; col <= this.miniBoardArea.x2; col++) {\n            const square = document.querySelector(`.chess-square[data-row=\"${row}\"][data-col=\"${col}\"]`);\n            square.classList.add('mini-board-highlight');\n            square.addEventListener('click', this.handleSquareClick);\n        }\n    }\n\n    // Gray out or blur other pieces and board squares\n    const allSquares = document.querySelectorAll('.chess-square');\n    allSquares.forEach(square => {\n        const row = parseInt(square.getAttribute('data-row'));\n        const col = parseInt(square.getAttribute('data-col'));\n        if (!this.isWithinMiniBoard(row, col)) {\n            square.classList.add('inactive-square');\n            const piece = square.querySelector('.chess-piece');\n            if (piece) {\n                piece.classList.add('grayed-out');\n            }\n        }\n    });\n}\n     setupPieceEventListeners() {\n        const allSquares = document.querySelectorAll('.chess-square');\n        allSquares.forEach(square => {\n            const row = parseInt(square.getAttribute('data-row'), 10);\n            const col = parseInt(square.getAttribute('data-col'), 10);\n\n            if (this.isWithinMiniBoard(row, col)) {\n                // Attach event listeners as usual\n                square.addEventListener('click', this.handleSquareClick);\n            } else {\n                // Optionally, visually indicate that the square is inactive\n                square.classList.add('inactive-square');\n            }\n        });\n    }\n\n    isWithinMiniBoard(row, col) {\n      console.log('isWithinMiniBoard function called');\n        return row >= this.miniBoardArea.y1 && row <= this.miniBoardArea.y2 &&\n               col >= this.miniBoardArea.x1 && col <= this.miniBoardArea.x2;\n    }\n    isMoveValid(piece, targetRow, targetCol) \n    {\n        if (this.isFinalStandActive) \n        {\n            return this.isWithinMiniBoard(targetRow, targetCol);\n                   /* Add other standard move validation checks here */\n        } else {\n            // Existing move validation logic\n        }\n    }\n\n    checkMiniBoardAndEndFinalStand() {\n  console.log('checkMiniBoardAndEndFinalStand function called');\n\n  // Check if the mini-board spell is active\n  const miniBoardSquares = document.querySelectorAll('.mini-board-highlight');\n  console.log('miniBoardSquares', miniBoardSquares.length);\n\n  // If no mini-board squares are highlighted, return early\n  if (miniBoardSquares.length === 0) {\n    console.log('No mini-board squares highlighted. Spell is not active.');\n    return;\n  }\n\n  // If the spell is active, continue to check the pieces\n  const miniBoardWhitePieces = document.querySelectorAll('.mini-board-highlight .chess-piece.white');\n  const miniBoardBlackPieces = document.querySelectorAll('.mini-board-highlight .chess-piece.black');\n  console.log('miniBoardWhitePieces', miniBoardWhitePieces.length, 'miniBoardBlackPieces', miniBoardBlackPieces.length);\n\n  if (miniBoardWhitePieces.length <= 1 || miniBoardBlackPieces.length <= 1) {\n    this.endFinalStand();\n  }\n}\n\n    // Method to end the Final Stand spell\n//     endFinalStand() {\n//   const whitePiecesCount = document.querySelectorAll('.mini-board-highlight .chess-square:has(.chess-piece.white)').length;\n//   const blackPiecesCount = document.querySelectorAll('.mini-board-highlight .chess-square:has(.chess-piece.black)').length;\n\n//   // Check if either player has 0 or 1 pieces left\n//   if (whitePiecesCount <= 1 || blackPiecesCount <= 1) {\n//     console.log('whitePieceCount or blackPieceCount inferior to one, cancelling the finalstandspell');\n//     // Re-enable interactions for all pieces\n//     document.querySelectorAll('.chess-square').forEach(square => square.classList.remove('inactive'));\n//     document.querySelectorAll('.chess-piece').forEach(piece => piece.classList.remove('grayed-out'));\n\n//     // Remove visual distinctions of the mini-board\n//     // ... (Resetting CSS changes as needed)\n//     const outsidePieces = document.querySelectorAll('.chess-square:not(.mini-board-highlight) .chess-piece');\n//     outsidePieces.forEach(piece => {\n//     this.attachEventListenersToPiece(piece); // Attach event listeners\n//   });\n//     this.isFinalStandActive = false;\n//     this.applyFinalStandOutcome();\n//     // Additional logic for the outcome of the mini-game\n//   }\n// }\nendFinalStand() {\n  const whitePiecesCount = document.querySelectorAll('.mini-board-highlight .chess-square:has(.chess-piece.white)').length;\n  const blackPiecesCount = document.querySelectorAll('.mini-board-highlight .chess-square:has(.chess-piece.black)').length;\n\n  console.log('White pieces count:', whitePiecesCount, 'Black pieces count:', blackPiecesCount);\n\n  if (whitePiecesCount <= 1 || blackPiecesCount <= 1) {\n    console.log('Ending Final Stand Spell');\n\n    document.querySelectorAll('.chess-square').forEach(square => {\n      console.log('Removing inactive from:', square);\n      square.classList.remove('inactive-square');\n      square.classList.remove('mini-board-highlight');\n    });\n\n    document.querySelectorAll('.chess-piece').forEach(piece => {\n      console.log('Removing grayed-out from:', piece);\n      piece.classList.remove('grayed-out');\n    });\n\n    const outsidePieces = document.querySelectorAll('.chess-square:not(.mini-board-highlight) .chess-piece');\n    outsidePieces.forEach(piece => {\n      console.log('Reattaching event listeners to:', piece);\n      this.attachEventListenersToPiece(piece);\n    });\n\n    this.isFinalStandActive = false;\n    this.applyFinalStandOutcome();\n  } else {\n    console.log('Final Stand Spell continues');\n  }\n}\nattachEventListenersToPiece(piece) {\n  // Logic to attach the necessary event listeners to the piece\n  // For example:\n  piece.addEventListener('click', this.boundHandleClick);\n  // ... other event listeners as needed\n}\n    // Method to handle the outcome of Final Stand\n    applyFinalStandOutcome() {\n        // Apply effects based on the finalStandScore\n        // E.g., revive a piece, grant an extra move, etc.\n    }\n    \n\n    handlePieceSelection(pieceType) \n    {\n    // Get the current player's color\n    const playerColor = this.currentPlayer; // Adjust this based on your game state\n\n    // Directly create a new piece of the chosen type and color\n    this.finalStandPlayerPieces = this.queryAlliedMiniBoardPieces(playerColor);\n\n    // Hide the selection UI\n    const selectionContainer = document.getElementById('piece-selection-container');\n    if (selectionContainer) {\n        selectionContainer.style.display = 'none';\n    }\n\n    // Continue with the setup\n    this.selectOpponentPiece();\n     this.setupMiniBoard();\n}\n    selectOpponentPiece() {\n      const opponentColor = this.currentPlayer === 'white' ? 'black' : 'white';\n      // Select two or three pawns and one upgraded piece for the opponent\n      this.finalStandOpponentPieces = this.queryOponentMiniBoardPieces(opponentColor);\n\n      // Place pieces on the mini-board\n      this.placePiecesOnMiniBoard(this.finalStandPlayerPieces, this.finalStandOpponentPieces);\n\n    }\n\nqueryOponentMiniBoardPieces(color) {\n  const opponentColor = this.currentPlayer === 'white' ? 'black' : 'white';\n  const opponentPawn = Array.from(document.querySelectorAll(`.chess-piece.${opponentColor}-pawn`))\n  const opponentUpgradedPiece = Array.from(document.querySelectorAll(`.chess-piece.${opponentColor}-rook, \n                                                                       .chess-piece.${opponentColor}-bishop, \n                                                                       .chess-piece.${opponentColor}-knight`));\n  const selectedPawns = this.randomlySelectPieces(opponentPawn, 2);\n  // Randomly select one upgraded piece\n  const selectedUpgradedPiece = this.randomlySelectPieces(opponentUpgradedPiece, 1);\n\n  return selectedPawns.concat(selectedUpgradedPiece);\n\n    // Your logic to randomly select two or three pawns and one upgraded piece (rook, bishop, or knight)\n    // Return an array of these pieces\n}\nqueryAlliedMiniBoardPieces(color) {\n  const alliedColor = this.currentPlayer;\n\n  const alliedPawn = Array.from(document.querySelectorAll(`.chess-piece.${alliedColor}-pawn`));\n  const selectedPawns = this.randomlySelectPieces(alliedPawn, 2);\n\n  // Fetch upgraded pieces excluding the ones already selected as pawns\n  const upgradedPieceSelector = `.chess-piece.${alliedColor}-rook, .chess-piece.${alliedColor}-bishop, .chess-piece.${alliedColor}-knight`;\n  const alliedUpgradedPiece = Array.from(document.querySelectorAll(upgradedPieceSelector))\n                                   .filter(piece => !selectedPawns.includes(piece));\n\n  const selectedUpgradedPiece = this.randomlySelectPieces(alliedUpgradedPiece, 1);\n\n  console.log('Selected pawns:', selectedPawns, 'Selected upgraded piece:', selectedUpgradedPiece);\n\n  return selectedPawns.concat(selectedUpgradedPiece);\n}\n\nrandomlySelectPieces(pieces, count) {\n  console.log('pieces', pieces);\n\n  // Convert NodeList to an array\n  const piecesArray = Array.from(pieces);\n\n  // Now sort the array\n  const shuffledPieces = piecesArray.sort(() => 0.5 - Math.random());\n  const selectedPieces = [];\n\n  for (let i = 0; i < count && i < shuffledPieces.length; i++) {\n    selectedPieces.push(shuffledPieces[i]);\n  }\n\n  return selectedPieces;\n}\nplacePiecesOnMiniBoard(playerPieces, opponentPieces) {\n  // Shuffle and combine the pieces array\n  const allPieces = playerPieces.concat(opponentPieces).sort(() => 0.5 - Math.random());\n\n  allPieces.forEach(piece => {\n    // Get and shuffle the current list of empty squares\n    const emptySquares = Array.from(document.querySelectorAll('.mini-board .chess-square:not(.has-piece)'))\n                              .sort(() => 0.5 - Math.random());\n\n    if (emptySquares.length > 0) {\n      const targetSquare = emptySquares[0]; // Select the first square from the shuffled array\n      this.forceMovePieceInsideMiniBoard(piece, targetSquare);\n    } else {\n      console.error('No unoccupied squares available to place the piece');\n    }\n  });\n}\nforceMovePieceToSquare(piece, targetSquare) {\n  console.log('forceMovePieceToSquare function entered with piece', piece);\n\n  if (!targetSquare) {\n    console.error('No target square provided');\n    return;\n  }\n\n  const fromRow = parseInt(piece.parentNode.getAttribute('data-row'));\n  const fromCol = parseInt(piece.parentNode.getAttribute('data-col'));\n  const toRow = parseInt(targetSquare.getAttribute('data-row'));\n  const toCol = parseInt(targetSquare.getAttribute('data-col'));\n\n  console.log('fromRow', fromRow, 'fromCol', fromCol, 'toRow', toRow, 'toCol', toCol);\n\n  // Call the forceMove function with the target position\n  this.forceMove(piece, fromRow, fromCol, toRow, toCol);\n}\n\nforceMovePieceInsideMiniBoard(piece, miniBoardArea) {\n  console.log('forceMovePieceInsideMiniBoard function entered with piece', piece);\n  console.log('this.miniBoardArea.y2', this.miniBoardArea.y2);\n  console.log('this.miniBoardArea.y1', this.miniBoardArea.y1);\n  console.log('this.miniBoardArea.x2', this.miniBoardArea.x2);\n  console.log('this.miniBoardArea.x1', this.miniBoardArea.x1);\n  const fromRow = parseInt(piece.parentNode.getAttribute('data-row'));\n  const fromCol = parseInt(piece.parentNode.getAttribute('data-col'));\n\n  let toRow, toCol, attempts = 0;\n\n   do {\n    if (attempts++ > 15) { // Prevent infinite loop\n      console.error('Unable to find an empty square after 50 attempts.');\n      return;\n    }\n\n    toRow = Math.floor(Math.random() * (this.miniBoardArea.y2 - this.miniBoardArea.y1 + 1)) + this.miniBoardArea.y1;\n    toCol = Math.floor(Math.random() * (this.miniBoardArea.x2 - this.miniBoardArea.x1 + 1)) + this.miniBoardArea.x1;\n\n    console.log('Attempt', attempts, ': trying row', toRow, 'col', toCol);\n  } while (this.isSquareEmpty(toRow, toCol) === false);\n\n  console.log('Moving piece from', fromRow, fromCol, 'to', toRow, toCol);\n  this.forceMove(piece, fromRow, fromCol, toRow, toCol);\n}\nisSquareEmpty(row, col) {\n  console.log('row', row, 'col', col);\n  // Select the square using data attributes for row and column\n  const squareSelector = `.chess-square[data-row='${row}'][data-col='${col}']`;\n  const square = document.querySelector(squareSelector);\n  console.log('squareSelector', squareSelector);\n  // If the square is not found, return false (as we can't determine if it's empty)\n  if (!square) {\n    console.error(`Square at row ${row} and column ${col} not found.`);\n    return false;\n  }\n\n  // A square is empty if it has no child nodes\n  return !square.hasChildNodes();\n}\n\n\n   \n\n    // Check if Final Stand should end\n    checkFinalStandEndCondition() {\n        // Check if any player reached the point threshold\n    }\n\n    \n//END OF FINAL STAND SPELL\n\n\n                // BEGINNING OF PETRIFYING SPELL\n\n        // castPetrifySpell(spellResult) {\n        //   console.log('castPetrifySpell function entered spell result being :', spellResult)\n        // // Randomly select enemy and ally pieces\n        //   const enemyColor = this.currentPlayer === 'white' ? 'black' : 'white';\n        //   console.log(enemyColor);\n        //   const board = document.querySelector('#chessboard');\n\n        //   const enemyPieces = document.querySelectorAll(`.chess-piece.${enemyColor}-pawn`);\n        //   console.log(\"enemyPieces\", enemyPieces);\n\n        //   const allyColor = this.currentPlayer;\n        //   console.log(allyColor);\n        //   // board = document.querySelector('#chessboard');\n\n        //   const allyPieces = document.querySelectorAll(`.chess-piece.${allyColor}-pawn`);\n        //   console.log(\"allyPieces\", allyPieces);\n        //   console.log(\"spellResult.enemies\", spellResult.selectedEnemiesCount, 'spellResult.selectedEnemiesCount', spellResult.selectedAlliesCount);\n        //   const selectedEnemies = this.selectRandomPieces(enemyPieces, spellResult.selectedEnemiesCount); // 2 to 4\n        //   const selectedAllies = this.selectRandomPieces(allyPieces, spellResult.selectedAlliesCount); // 1 to 3\n        //   console.log('selectedEnemies :', selectedEnemies);\n        //   console.log('selectedAllies :', selectedAllies);\n        //   // Apply petrification\n        //   this.applyPetrification(selectedEnemies.concat(selectedAllies), spellResult);\n         // }\n         castPetrifySpell(spellResult, ally, enemy, game) {\n    console.log('castPetrifySpell function entered, spell result being:', spellResult);\n\n    // Get all enemy and ally pieces\n    const enemyColor = this.currentPlayer === 'white' ? 'black' : 'white';\n    console.log('enemyColor', enemyColor)\n    const enemyPieces = Array.from(document.querySelectorAll(`.chess-piece.${enemyColor}-pawn`));\nconsole.log('enemyPieces', enemyPieces)\n    const allyColor = this.currentPlayer;\n    const allyPieces = Array.from(document.querySelectorAll(`.chess-piece.${allyColor}-pawn`));\nconsole.log('allyColor', allyColor)\nconsole.log('allyPieces', allyPieces)\n    // Select pieces based on provided indices\n    const selectedEnemies = spellResult.selectedEnemyIndices;\n    const selectedAllies = spellResult.selectedAllyIndices;\n    \n      this.processSelectedPieces(selectedEnemies, spellResult, game);\n    \n\n      this.processSelectedPieces(selectedAllies, spellResult, game);\n    \n    \n    console.log('Selected enemies:', selectedEnemies);\n    console.log('Selected allies:', selectedAllies);\n\n    \n    const totalPieces = selectedEnemies.concat(selectedAllies);\n    const totalTurnsPetrified = spellResult.turnsPetrified.slice(0, totalPieces.length);\n    const totalTurnsUntilDestruction = spellResult.turnsUntilDestruction.slice(0, totalPieces.length);\n    console.log('check before the call to applyPetrification totalTurnsPetrified being:', totalTurnsPetrified, 'totalTurnsUntilDestruction', totalTurnsUntilDestruction);\n\n    this.applyPetrification(totalPieces, totalTurnsPetrified, totalTurnsUntilDestruction);\n\n} processSelectedPieces(selectedPieces, spellResult, game) {\n        selectedPieces.forEach((piece, index) => {\n            const { row, col } = piece;\n             const element = document.querySelector(`.chess-square[data-row=\"${row}\"][data-col=\"${col}\"]`);            \n\n            const child = element.querySelector('.chess-piece');\n            const turnsUntilDestruction = spellResult.turnsUntilDestruction[index];\n            const turnPetrified = this.getCurrentTurnCount();\n\n            if (element) {\n                console.log('about to call petrifyElement with', child);\n                this.petrifyElement(child, turnPetrified, turnsUntilDestruction, game);\n            } else {\n                console.error(`No element found at row ${row}, col ${col}`);\n            }\n        });\n    }\n\n petrifyElement(element, turnPetrified, turnsUntilDestruction) {\n        console.log('Petrifying element:', element);\n\n        element.classList.add('petrified'); // Add a class to indicate petrification\n        element.dataset.petrifiedOnTurn = turnPetrified;\n        element.dataset.turnsUntilDestruction = turnsUntilDestruction;\n        this.createPetrifiTimer(element, turnsUntilDestruction);\n    }\n        \n        applyPetrification(pieces, spellResult) \n        {\n          pieces.forEach(pieceElement => \n          {\n          const turnsPetrified = spellResult.turnsPetrified; // 1 or 2 turns\n          this.petrifyElement(pieceElement, turnsPetrified, spellResult);\n        });\n        }\n\n      //   petrifyElement(element, turns, spellResult, game) {\n      //     console.log('about to call petrifyElement with', element);\n      //   const turnsUntilDestruction = spellResult.turnsUntilDestruction; // Random number between 1 and 3\n      //   element.classList.add('petrified'); // Add a class to indicate petrification\n      //   element.dataset.petrifiedOnTurn = this.getCurrentTurnCount();\n      //   element.dataset.turnsUntilDestruction = turnsUntilDestruction;\n\n      //   this.createPetrifiTimer(element, turnsUntilDestruction, game);\n      // }\n\n      createPetrifiTimer(element, turnPetrified, turnsUntilDestruction, game)\n      {\n        const indicator = document.createElement('span');\n        indicator.className = 'petrification-timer';\n        indicator.textContent = turnPetrified;\n        element.appendChild(indicator);\n      }\n\n      getCurrentTurnCount() \n      {\n        const turnCountDisplay = document.querySelector('#turn-count-display');\n        if (turnCountDisplay) \n        {\n        // Assuming the turn count is displayed as \"Turn: X\"\n          const turnText = turnCountDisplay.textContent;\n          const turnNumberMatch = turnText.match(/\\d+/); // Regular expression to extract number\n          if (turnNumberMatch) \n          {\n            return parseInt(turnNumberMatch[0], 10);\n          }\n        }\n        return -1; // Return an error value if turn count cannot be determined\n      }\n\n      updatePetrifiedPieces() {\n    const petrifiedPieces = document.querySelectorAll('.petrified');\n    petrifiedPieces.forEach(piece => {\n        let turnsUntilDestruction = parseInt(piece.dataset.turnsUntilDestruction, 10);\n        turnsUntilDestruction -= 1;\n\n        if (turnsUntilDestruction <= 0) {\n            this.clearPetrification(piece);\n        } else {\n            piece.dataset.turnsUntilDestruction = turnsUntilDestruction;\n            this.updatePetrificationIndicator(piece);\n        }\n    });\n}\n\n      updatePetrifyExpiration(piece) \n      {\n      // Ensure the values are integers\n        const petrifiedOnTurn = parseInt(piece.dataset.petrifiedOnTurn, 10);\n        let turnsUntilDestruction = parseInt(piece.dataset.turnsUntilDestruction, 10);\n\n        // Calculate the number of full turns passed since petrification\n        const turnsPassed = Math.floor((this.getCurrentTurnCount() - petrifiedOnTurn) / 2);\n\n        // If more than a full turn has passed, update the turn countdown\n        if (turnsPassed > 0) \n        {\n          turnsUntilDestruction -= turnsPassed;\n          // Update the data attribute and the indicator\n          piece.dataset.turnsUntilDestruction = turnsUntilDestruction;\n          this.updatePetrificationIndicator(piece);\n          // If the countdown has reached zero or less, remove petrification\n          if (turnsUntilDestruction <= 0) \n          {\n            const parent = piece.parentNode;\n            const col = parent.getAttribute('data-col');\n            const row = parent.getAttribute('data-row');\n\n            console.log('parent', parent, 'row', row, 'col', col);\n            this.forceRemove(row, col);\n            piece.classList.remove('petrified');\n            piece.removeAttribute('data-turnsUntilDestruction');\n            const petrificationIndicator = piece.querySelector('.petrification-indicator');\n            if (petrificationIndicator) \n            {\n              petrificationIndicator.remove();\n            }\n          }\n        }\n      }\n\n      updatePetrificationIndicator(piece) \n      {\n        console.log(\"updatePetrificationIndicator function called with:\", piece);\n        const turnsRemaining = parseInt(piece.dataset.turnsUntilDestruction, 10);\n        const indicator = piece.querySelector('.petrification-timer');\n\n        if (indicator) \n        {\n          indicator.textContent = turnsRemaining;\n        }\n      }\n\n      // Method to attempt transferring petrification to an ally piece\n      attemptToTransferPetrification(currentPlayerColor) \n      {\n        console.log(\"attemptToTransferPetrification function called for:\", currentPlayerColor);\n\n        if (Math.random() <= 0.7) \n        { // 70% chance to transfer petrification\n          console.log('petrification probability is correct');\n          const allyPieces = document.querySelectorAll(`.chess-piece.${currentPlayerColor}-pawn:not(.petrified)`);\n          console.log(\"Ally pieces for potential petrification:\", allyPieces);\n\n          if (allyPieces.length > 0) \n          {\n            const randomIndex = Math.floor(Math.random() * allyPieces.length);\n            const randomAlly = allyPieces[randomIndex];\n            console.log('randomAlly', randomAlly);\n            \n            // You need to ensure randomAlly is processed correctly for petrification\n            // For instance, add petrified class, set data attributes, etc.\n            randomAlly.classList.add('petrified');\n            randomAlly.dataset.petrifiedOnTurn = this.getCurrentTurnCount();\n            randomAlly.dataset.turnsUntilDestruction = 1; // Set petrification for 1 turn\n            this.createPetrifiTimer(randomAlly, 1);\n          }\n        }\n      }\n\n      selectRandomPieces(pieces, numPieces) \n      {\n        console.log('selectRandomPiece function entered, numbPcs being :', numPieces);\n      // Convert NodeList to an array to use array methods\n        const piecesArray = Array.from(pieces);\n\n        // Shuffle the array using the Fisher-Yates (Durstenfeld) shuffle algorithm\n        for (let i = piecesArray.length - 1; i > 0; i--) \n        {\n          const j = Math.floor(Math.random() * (i + 1));\n          [piecesArray[i], piecesArray[j]] = [piecesArray[j], piecesArray[i]];\n        }\n\n        // Slice the array to get the required number of pieces\n        return piecesArray.slice(0, numPieces);\n      }\n\n      clearPetrification(piece) \n      {\n        piece.classList.remove('petrified');\n        piece.removeAttribute('data-petrifiedOnTurn');\n        piece.removeAttribute('data-turnsUntilDestruction');\n\n        const petrificationIndicator = piece.querySelector('.petrification-timer');\n        if (petrificationIndicator) \n        {\n          petrificationIndicator.remove();\n        }\n      }\n\n    // END OF PETRIFYING SPELL\n      // BEGIN OF CHESSQUAKE SPELL\napplyChessquakeEffect(board) {\n  console.log('applyChessquakeEffect function entered');\n        // Applying effects to each piece\n  const chessBoard = document.querySelector('#chessboard');\n  const pieces = document.querySelectorAll('.chess-square.event-listener-attached.has-piece');\n  console.log('pieces', pieces);\n        pieces.forEach(piece => {\n            let effectRoll = Math.random();\n            if (effectRoll < 0.01) {\n                // 2;5% chance to remove the piece\n                this.removepPiece(board, piece);\n            } else if (effectRoll < 0.009) {\n                // 25% chance to move the piece to a random empty square\n                this.movePieceToRandomSquare(board, piece);\n            } else if (effectRoll < 0.1) {\n                // 25% chance to swap with another piece\n                this.swapPiece(piece);\n                \n            }\n            // 25% chance to do nothing\n        });\n        // console.log('Calling syncBoardState');\n        // this.syncBoardState();             \n        // console.log('syncBoardState called');\n      const emptySquares = document.querySelectorAll('.chess-square:not(.has-piece)');\n    console.log('emptySquares', emptySquares);\n    // Applying effects to unoccupied squares\n    emptySquares.forEach(square => {\n        let squareEffectRoll = Math.random();\n        if (squareEffectRoll < 0.05) {\n            // 5% chance for Magma Square\n            this.createMagmaSquare(board, square);\n        } else if (squareEffectRoll < 0.08) {\n            // 3% chance for Hole\n            this.createHole(board, square);\n        } else if (squareEffectRoll < 0.12) {\n            // 4% chance for Rock\n            this.createRock(board, square);\n        }\n        // Other squares remain unaffected\n    });\n}\n    removepPiece(board, piece) {\n    console.log('removepiece function called for :', piece);\n    \n    const row = piece.getAttribute('data-row');\n    const col = piece.getAttribute('data-col');\n    this.forceRemove(row, col);\n     }\n    movePieceToRandomSquare(board, piece) {\n    console.log('Moving piece to a random square:', piece);\n    const child =  piece.querySelector('.chess-piece');\n    const row = piece.getAttribute('data-row');\n    const col = piece.getAttribute('data-col');\n\n    const emptySquares = document.querySelectorAll('.chess-square:not(.has-piece)');\n    if (emptySquares.length === 0) {\n        console.log('No empty squares available for movement.');\n        return; // No empty square available\n    }\n\n    // Select a random empty square\n    const randomSquare = emptySquares[Math.floor(Math.random() * emptySquares.length)];\n    const newRow = randomSquare.getAttribute('data-row');\n    const newCol = randomSquare.getAttribute('data-col');\n    \n    // Remove piece from current position\n    \n     this.forceMove(child, row, col, newRow, newCol);\n\n   \n}\n    swapWithRandomPiece(board, piece) { \n      console.log('removepiece function called')\n    }\n    createMagmaSquare(board, square) {\n  console.log('createMagmaSquare function called for:', square);\n\n  // Add a class to visually indicate the square is now a Magma Square\n  square.classList.add('magma-square');\n\n  // Update the board data structure to reflect the Magma effect\n  const row = parseInt(square.getAttribute('data-row'), 10);\nconst col = parseInt(square.getAttribute('data-col'), 10);\n  this.game.board[row][col] = 'magma';\n}\n\ncreateHole(board, square) {\n  console.log('createHole function called for:', square);\n\n  // Add a class to visually indicate the square is now a Hole\n  square.classList.add('hole-square');\n\n  // Update the board data structure to reflect the Hole effect\n  const row = parseInt(square.getAttribute('data-row'), 10);\nconst col = parseInt(square.getAttribute('data-col'), 10);\n  this.game.board[row][col] = 'hole';\n\n  // Add an event listener to move pieces that land on this hole to a random empty square\n  square.addEventListener('pieceLanded', () => {\n    const emptySquares = document.querySelectorAll('.chess-square:not(.has-piece)');\n    if (emptySquares.length > 0) {\n      const randomSquare = emptySquares[Math.floor(Math.random() * emptySquares.length)];\n      this.movePieceToRandomSquare(board, square); // Reuse the existing function\n    }\n  });\n}\n\ncreateRock(board, square) {\n  console.log('createRock function called for:', square);\n\n  // Add a class to visually indicate the square is now occupied by a Rock\n  square.classList.add('rock-square');\n\n  // Update the board data structure to reflect the Rock effect\n  const row = parseInt(square.getAttribute('data-row'), 10);\nconst col = parseInt(square.getAttribute('data-col'), 10);\n  this.game.board[row][col] = 'rock';\n  this.game.board[row][col] = 'rock'; // This indicates that the square is occupied and cannot be landed on\n}\n\n// This helper function can be used to simulate a piece landing on a square\n triggerPieceLanding(square) {\n  const pieceLandedEvent = new Event('pieceLanded');\n  square.dispatchEvent(pieceLandedEvent);\n}\n      //END OF CHESSQUAKESPELL\n\n\n    \n\n    //BEGINNING OF PLIT AND MERGE SPELL\nstatic activateSplitSpell(pieces) {\n        // Randomly select and split pieces\n        pieces.forEach(piece => piece.split());\n    }\n\n    // Split this piece\n    split() {\n        if (!this.isSplit && this.type !== 'King' && this.type !== 'Pawn') { // Assuming King and Pawn are not splittable\n            this.isSplit = true;\n            // You can define the behavior of each split part here or delegate to another method\n            // e.g., setting different movement capabilities for each part\n        }\n    }\n\n    // Check if this piece can merge with another\n    canMergeWith(otherPiece) {\n        return this.isSplit && otherPiece.isSplit && \n               this.type === otherPiece.type && \n               this.color === otherPiece.color &&\n               this.areAdjacent(otherPiece); // Implement areAdjacent to check adjacency\n    }\n\n    // Merge this piece with another\n    mergeWith(otherPiece) {\n        if (this.canMergeWith(otherPiece)) {\n            this.isSplit = false;\n            otherPiece.isSplit = false;\n            this.splitPart = null;\n            otherPiece.splitPart = null;\n            // Further merge logic, like combining back into a single piece on the board\n        }\n    }\n\n    //END OF SPLIT AND MERGE SPELL\n\n\n    //BEGIN OF STICK OF THE FOREST SPELL\n    castStickOfTheForestSpell()\n    {\n        console.log('castStickOfTheForestSpell function called');\n\n    }\n     assignRandomElement(seedElements) {\n        const randomIndex = Math.floor(Math.random() * seedElements.length);\n        this.seedElement = seedElements[randomIndex];\n    }\n    growSeed() {\n        if (this.seedStage > 0 && this.seedStage < MAX_GROWTH_STAGE) {\n            this.seedStage++;\n        }\n    }\n    activateTreeAbility(board) {\n        if (this.seedStage === MAX_GROWTH_STAGE) {\n            // Example: Activate ability based on element\n            switch(this.seedElement) {\n                case 'Fire':\n                  this.castFirePlantSpell();\n                    // Fire ability logic\n                    break;\n                case 'Frost':\n                  this.castFirePlantSpell();\n                  // Frost ability logic\n                    break;\n                case 'Stone':\n                  this.castStonePlantSpell();\n                    // Fire ability logic\n                    break;\n                case 'Light':\n                  this.castLightPlantSpell();\n                    // Fire ability logic\n                    break;\n                case 'Mystic':\n                    // Fire ability logic\n                  this.castMysticPlantSpell();\n                    break;\n                case 'Aqua':\n                  this.castWaterPlantSpell();\n                    // Fire ability logic\n                    break;\n                case 'Earth':\n                  this.castEarthPlantSpell();\n                    // Fire ability logic\n                    break;\n                case 'Whirlwind':\n                  this.castWindPlantSpell();\n                    // Fire ability logic\n                    break;\n                case 'Quake':\n                  this.castQuakePlantSpell();\n                    // Fire ability logic\n                    break;\n                // ... other cases for different elements\n            }\n            this.seedStage = 0; // Reset the seed stage after activation\n        }\n    }\n    \n    checkAndTriggerCombo() {\n    const boardElements = this.getBoardElements();\n    const randomElement = this.getRandomElement(boardElements);\n\n    const comboTriggers = {\n      'FireWater': this.triggerInfernoWave(),\n      'EarthAir': this.triggerSandstormDance(),\n      'LightShadow': this.triggerEclipseMirage(),\n      'FrostFire': this.triggerThermalShock(),\n      'MysticNature': this.triggerVerdantResurgence(),\n      'WaterAir': this.triggerHurricaneSurge(),\n      'ShadowFire': this.triggerDarkFlame(),\n      'NatureFrost': this.triggerIcyBloom(),\n      'MysticLight': this.triggerArcaneIllumination(),\n      'AirShadow': this.triggerWhisperingShadows(),\n      'WaterMystic': this.triggerReflectionPool(),\n      'EarthFrost': this.triggerFrozenGround(),\n      'FireNature': this.triggerWildfireGrowth(),\n      'LightAir': this.triggerRadiantWind(),\n      'ShadowEarth': this.triggerTerrifyingQuake(),\n      'MysticAir': this.triggerEtherealBreeze(),\n\n        // ... other combos\n    };\n\n    const comboKey = this.element + randomElement;\n    const triggerFunction = comboTriggers[comboKey];\n\n    if (triggerFunction) {\n        triggerFunction.call(this);\n    }\n}\n\n    \n    //END OF STICK OF THE FOREST SPELL\n\n//BEGINNING OF randomDiceMove spell\\\\\n// rollDiceForSpell() {\n//     return Math.floor(Math.random() * 4) + 1 + Math.floor(Math.random() * 4) + 1;\n//   }\n\n//   // Method to select a random piece for a specific player\n//   selectRandomPiece(playerColor) {\n//     // Select all pieces of the specified player's color\n//     const alliedPieces = Array.from(document.querySelectorAll(\n//         `.chess-piece.${playerColor}-pawn, \n//          .chess-piece.${playerColor}-rook, \n//          .chess-piece.${playerColor}-bishop, \n//          .chess-piece.${playerColor}-knight, \n//          .chess-piece.${playerColor}-queen, \n//          .chess-piece.${playerColor}-king` // Include all piece types\n//     ));\n\n//     if (alliedPieces.length === 0) {\n//         console.error(\"No pieces found for player:\", playerColor);\n//         return null;\n//     }\n\n//     // Randomly select one piece from the array\n//     const randomIndex = Math.floor(Math.random() * alliedPieces.length);\n//     return alliedPieces[randomIndex];\n// }\n\n//   // Method to execute a random move for a specific piece\n//   executeRandomMoveForPiece(pieceElement) {\n//     console.log('entering executeRandomMoveForPiece with :', pieceElement);\n//     pieceElement.classList.add('selected-piece');\n//     // Assuming you have a way to get legal moves for a piece DOM element\n//     const legalMoves = this.getLegalMovesForPieceElement(pieceElement);\n//     if (!legalMoves || legalMoves.length === 0) {\n//         console.error(\"No legal moves for piece:\", pieceElement);\n//         return;\n//     }\n\n//     const randomMoveIndex = Math.floor(Math.random() * legalMoves.length);\n//     const randomMove = legalMoves[randomMoveIndex];\n//     // Assuming executeMove can handle a move defined in 'randomMove'\n\n//     console.log('randomMove,', randomMove);\n//     this.executeMove(randomMove);\n// }\n//  getLegalMovesForPieceElement(pieceElement) {\n//   console.log(\"entering getLegalMovesForPieceElement with :\", pieceElement);\n//     // Assuming each piece element has a type (e.g., pawn, rook) as part of its class\n//     const pieceType = this.getPieceType(pieceElement); // Implement this method\n//     const currentPosition = this.getPosition(pieceElement); // Implement this method\n//     const clickedPiece = pieceElement.parentNode;\n//     const chessBoard = document.querySelector('#chessboard');\n//     const row = clickedPiece.getAttribute('data-row');\n//     const col = clickedPiece.getAttribute('data-col');\n//     const type = clickedPiece.getAttribute('data-type');\n//     const color = clickedPiece.getAttribute('data-color');\n\n    \n    \n//     console.log('pieceType', pieceType);\n//     console.log('currentPosition', currentPosition);\n//     console.log('row', row, 'col', col);\n//     console.log('clickedPiece', clickedPiece);\n    \n    \n//     // Calculate legal moves based on piece type and current position\n//     // This is highly game-specific and depends on your chess logic implementation\n//       return this.calculateValidMoves(row, col, chessBoard, type, color);\n\n//     return this.calculateLegalMoves(pieceType, currentPosition);\n//   }  \n\n//   // Method to cast the Dice of Destiny spell\n//   castDiceOfDestinySpell() {\n//     const movesPerPlayer = this.rollDiceForSpell();\n\n//     for (let player of ['white', 'black']) {\n//       for (let i = 0; i < movesPerPlayer; i++) {\n//         const piece = this.selectRandomPiece(player);\n//         if (piece) {\n//           this.executeRandomMoveForPiece(piece);\n//         }\n//       }\n//     }\n\n//     // ... Update game state or other necessary changes after spell execution ...\n//   }\nrollDiceForSpell() {\n    // Returns a number between 2 and 8 (simulating two four-sided dice)\n    return Math.floor(Math.random() * 4) + 1 + Math.floor(Math.random() * 4) + 1;\n  }\n\n  selectRandomPiece(playerColor) {\n    // Select all pieces of the specified player's color\n     const alliedPieces = Array.from(document.querySelectorAll(\n        `.chess-piece.${playerColor}-pawn, \n         .chess-piece.${playerColor}-rook, \n         .chess-piece.${playerColor}-bishop, \n         .chess-piece.${playerColor}-knight, \n         .chess-piece.${playerColor}-queen, \n         .chess-piece.${playerColor}-king`\n    ));\n\n    if (alliedPieces.length === 0) {\n        console.error(\"No pieces found for player:\", playerColor);\n        return null;\n    }\n\n    // Randomly select one piece from the array\n    return alliedPieces[Math.floor(Math.random() * alliedPieces.length)];\n  }\n\n\n\ncastDiceOfDestinySpell() {\n    const movesPerPlayer = this.rollDiceForSpell();\n    let currentMove = 0;\n    const totalMoves = movesPerPlayer * 2; // 2 players\n\n    const moveInterval = setInterval(() => {\n        const player = currentMove % 2 === 0 ? 'white' : 'black';\n        const piece = this.selectRandomPiece(player);\n        if (piece) {\n            this.forceRandomMove(piece); // Use your existing function\n        }\n\n        currentMove++;\n        if (currentMove >= totalMoves) {\n            clearInterval(moveInterval);\n        }\n    }, 1000); // Delay of 1 second between moves\n}\n//END OF randomDiceMove SPELL\n\n\n//BEGINNING OF castDigitzKingSpell FUNCTION\\\\\n\n\n\ncastDigitzKingSpell() {\n  this.assignRowClassesToPawns();\n    console.log('Casting Number King Spell');\n    const enemyColor = this.color === 'white' ? 'black' : 'white';\n    const friendlyPawns = document.querySelectorAll(`.chess-piece.${this.color}-pawn`);\n    const enemyPawns = document.querySelectorAll(`.chess-piece.${enemyColor}-pawn`);\n    const allPawns = [...friendlyPawns, ...enemyPawns];\n    const chessboard = document.querySelector('#chessboard');\n    const kingsNumber = Math.floor(Math.random() * 151) + 1;\n        console.log('allPawns', allPawns);\n\n    let delay = 0; // Starting delay for the first pawn\n    const delayIncrement = 500; // Delay increment for each subsequent pawn\n    const pawnFinalNumbers = new Map(); \n    allPawns.forEach((pawn, index) => {\n        setTimeout(() => {\n            const square = pawn.closest('.chess-square');\n            const row = square.dataset.row;\n\n            const numberBox = this.createNumberBox(index);\n            square.appendChild(numberBox); // Append the number box to the square instead of the pawn\n\n            // Add classes for top or bottom row\n            if (row === \"0\") {\n                numberBox.classList.add('bottom-box');\n            } else if (row === \"7\") { // Assuming an 8x8 board\n                numberBox.classList.add('top-box');\n            }\n\n            let rollCount = 0;\n            const maxRolls = Math.floor(Math.random() * 11) + 5; // Between 5 and 15 rolls\n            const interval = setInterval(() => {\n                const randomNumber = Math.floor(Math.random() * 151);\n                numberBox.textContent = randomNumber;\n\n                rollCount++;\n                if (rollCount >= maxRolls) {\n                    clearInterval(interval);\n                    pawnFinalNumbers.set(pawn, randomNumber); // Store final number for this pawn\n\n                    if (pawnFinalNumbers.size === allPawns.length) {\n                        // All pawns have their final number, proceed with spell effects\n                        this.applySpellEffects(pawnFinalNumbers);\n                    }\n                }\n            }, 100); // Adjust the rolling speed as needed\n        }, delay);\n\n        delay += delayIncrement;\n               \n    });\n    this.displayKingsNumber(kingsNumber);\n            \n    // Continue with other spell effects such as finding and removing enemy pawns...\n}\nassignRowClassesToPawns() {\n  console.log('assignRowClassesToPawns called');\n    const allPawns = document.querySelectorAll('.chess-piece.pawn');\n\n    allPawns.forEach(pawn => {\n        const square = pawn.closest('.chess-square');\n        const row = square.dataset.row;\n\n        if (row === \"0\") {\n            pawn.classList.add('top-row');\n        } else if (row === \"7\") { // Assuming 8x8 board with rows indexed from 0 to 7\n            pawn.classList.add('bottom-row');\n        } else {\n            pawn.classList.add('middle-row');\n        }\n    });\n}\ndisplayKingsNumber(number) {\n    const displayElement = document.createElement('div');\n    displayElement.textContent = `King's Number: ${number}`;\n    displayElement.classList.add('kings-number-display');\n    document.body.appendChild(displayElement);\n\n    // Animation or special effect (simple fade-out example)\n    setTimeout(() => displayElement.style.opacity = 0, 2000); // Fade out after 2 seconds\n    setTimeout(() => displayElement.remove(), 3000); // Remove from DOM after 3 seconds\n}\n\ncreateNumberBox(index) {\n  console.log('createNumberBox FUCNCTION CALLED ');\n    const numberBox = document.createElement('div');\n    numberBox.classList.add('number-box');\n    numberBox.style.backgroundColor = this.getRandomColor(index);\n    return numberBox;\n}\n\nupdateNumberBoxColor(numberBox, number, index) {\n    const baseColor = this.getBaseColor(index);\n    const shade = number % 256; // More pronounced shading\n    const bgColor = `rgb(${baseColor.r + shade}, ${baseColor.g + shade}, ${baseColor.b + shade})`;\n    numberBox.style.backgroundColor = bgColor;\n\n    // Set text color for contrast\n    const textColor = this.isLightColor(bgColor) ? 'black' : 'white';\n    numberBox.style.color = textColor;\n}\n\n// Helper function to determine if a color is light or dark\nisLightColor(color) {\n    const rgb = color.match(/\\d+/g);\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\n    return luminance > 0.5;\n}\n\n\ngetRandomColor(index) {\n \n  console.log('getRandomColor FUCNCTION CALLED ');\n\n    // Generate a base color based on the index, using RGB\n    return `rgb(${index * 50 % 256}, ${index * 100 % 256}, ${index * 150 % 256})`;\n}\n\ngetBaseColor(index) {\n    // Return the base RGB components for the color\n    return {\n        r: index * 50 % 256,\n        g: index * 100 % 256,\n        b: index * 150 % 256\n    };\n}\n\n   getPawnRow(pawn) {\n    // Assuming each row in your chessboard has a class or identifiable attribute\n    // Adjust this method to match your chessboard's structure\n    const rowElement = pawn.closest('.chess-row'); // Example: if each row has a class 'chess-row'\n    return rowElement ? parseInt(rowElement.getAttribute('data-row'), 10) : -1; // Example: if rows have a 'data-row' attribute\n}\n\n// Helper function to position the number box based on the row\npositionNumberBox(numberBox, row) {\n    if (row <= 1) {\n        // Pawn is at the top of the board, position box below the pawn\n        numberBox.style.bottom = 'auto';\n        numberBox.style.top = '100%';\n    } else {\n        // Pawn is elsewhere, position box above the pawn\n        numberBox.style.bottom = '100%';\n        numberBox.style.top = 'auto';\n    }\n}\n applySpellEffects(pawnFinalNumbers) {\n    // Generate the King's number\n    const kingsNumber = Math.floor(Math.random() * 151) + 1;\n    console.log('King\\'s Number:', kingsNumber);\n\n    // Find the closest enemy pawn\n    let closestEnemyPawn = null;\n    let closestAlliedPawn = null;\n    let smallestEnemyDifference = Number.MAX_SAFE_INTEGER;\n    let smallestAlliedDifference = Number.MAX_SAFE_INTEGER;\n    \n    pawnFinalNumbers.forEach((number, pawn) => {\n        const difference = Math.abs(number - kingsNumber);\n        const isEnemyPawn = (this.color === 'white' && pawn.classList.contains('black-pawn')) ||\n                            (this.color === 'black' && pawn.classList.contains('white-pawn'));\n\n        if (isEnemyPawn && difference < smallestEnemyDifference) {\n            closestEnemyPawn = pawn;\n            smallestEnemyDifference = difference;\n        }\n    });\n\n    pawnFinalNumbers.forEach((number, pawn) => {\n      const difference = Math.abs(number - kingsNumber);\n      const isAlliedPawn = (this.color === 'white' && pawn.classList.contains('white-pawn')) ||\n                           (this.color === 'black' && pawn.classList.contains('black-pawn'));\n\n        if (isAlliedPawn && difference < smallestAlliedDifference) {\n          closestAlliedPawn = pawn;\n          smallestAlliedDifference = difference;\n        }\n      });\n\n    if (closestEnemyPawn) {\n        // Extract row and col from the pawn's parent square\n        const square = closestEnemyPawn.closest('.chess-square');\n        const row = square.dataset.row;\n        const col = square.dataset.col;\n        document.querySelectorAll('.number-box').forEach(box => box.remove());\n        // Use forceRemove to remove the closest enemy pawn\n        this.forceRemove(row, col);\n    }\n    if (closestAlliedPawn) {\n        // Determine the new type (rook, bishop, or knight)\n        const newTypes = ['rook', 'bishop', 'knight'];\n        const randomType = newTypes[Math.floor(Math.random() * newTypes.length)];\n\n        // Update the piece\n        const square = closestAlliedPawn.closest('.chess-square');\n        if (square) {\n            // Remove the existing pawn\n            if (closestAlliedPawn.parentNode === square) {\n                square.removeChild(closestAlliedPawn);\n            }\n\n            // Create the new piece element\n            const newPiece = document.createElement('img');\n            newPiece.classList.add('chess-piece', `${this.color}-${randomType}`);\n            newPiece.style.backgroundImage = `url('img/${this.color}${randomType}.png')`; // Set the correct image path\n\n            newPiece.setAttribute('data-color', this.color);\n            newPiece.setAttribute('data-type', randomType);\n            square.appendChild(newPiece);\n\n            // Update any other necessary internal game state\n            // ...\n        }\n    }\n\n}\n\n//END OF castDigitzKingSpell FUNCTION\\\\\n\n  // BEGIN OF CASTENCHANTEDGROUNDSPELL\\\\\ncastEnchantedGroundSpell() {\n  console.log('castEnchantedGroundSpell function called');\n  const allSquares = Array.from(document.querySelectorAll('.chess-square')); // Select all squares\n  const emptySquares = allSquares.filter(square => !square.classList.contains('has-piece')); // Filter out squares with pieces\n\n  const numberOfEnchantedSquares = 5; // Adjust as needed\n  const enchantedGrounds = new Set();\n\n  while (enchantedGrounds.size < numberOfEnchantedSquares && emptySquares.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptySquares.length);\n    const selectedSquare = emptySquares[randomIndex];\n\n    enchantedGrounds.add(selectedSquare.id);\n    emptySquares.splice(randomIndex, 1); // Remove the selected square from the array\n  }\n\n  enchantedGrounds.forEach(squareId => {\n    const square = document.getElementById(squareId);\n    if (square) {\n      square.classList.add('enchanted-ground');\n      square.style.backgroundColor = this.color; // Adjust the color as needed\n      square.style.border = \"2px solid black\";\n      // Optionally add visual indication for enchanted grounds\n    }\n  });\n  return enchantedGrounds;\n}\nhandleMagicalCardEffect(selectedPiece) {\n  console.log('handleMagicalCardEffect function called with', selectedPiece);\n  const effects = \n  {\n        // //'upgrade': { name: 'Upgrade', description: '.' },\n        'upgrade': { effect: () => this.upgradePiece(selectedPiece), description: 'The piece is promoted rabdomly created.' },\n        'downgrade': { effect: () => this.downgradePiece(selectedPiece), description: 'The piece is demoted.' },\n        'swap': { effect: () => this.swapPiece(selectedPiece), description: 'swap two allies randomPiece.' },\n        'teleport': { effect: () => this.teleportPiece(selectedPiece), description: 'teleport the piece random empty square.' },\n        // 'shield': { effect: () => this.shieldPiece(piece), description: 'shield the piece .' },\n         // 'chaos': { effect: () => this.chaosShift(selectedPiece), description: 'Rearrange all pieces of the same type on the players side.' },\n        /*ALMOSTCORRECT just missing a few implementations*/ 'freeze': { effect: () => this.freezePiece(selectedPiece), description: 'Cannot move for two turns...' },\n        // 'blinkStep': { effect: () => this.blinkStep(piece), description: 'Teleport to a nearby square.' },\n        // 'shieldAura': { effect: () => this.shieldAura(piece), description: 'Gain temporary immunity.' },\n        // 'precisionStrike': { effect: () => this.precisionStrike(piece), description: 'Capture from two squares away.' },\n        // 'mightyLeap': { effect: () => this.mightyLeap(piece), description: 'Gain knight\\'s move.' },\n        // 'wisdomOfKings': { effect: () => this.wisdomOfKings(piece), description: 'Move like a king.' },\n        // 'fogOfConfusion': { effect: () => this.fogOfConfusion(piece), description: 'Reversed movement.' },\n        // 'vulnerabilityCurse': { effect: () => this.vulnerabilityCurse(piece), description: 'Increased vulnerability.' },\n        // 'erraticMovement': { effect: () => this.erraticMovement(piece), description: 'Move randomly.' },\n        // 'dwindlingPower': { effect: () => this.dwindlingPower(piece), description: 'Lose special abilities.' },\n        \n       //CORRECT// 'magneticPull': { effect: () => this.magneticPull(selectedPiece), description: 'Drawn towards board edge.' }\n  };\n  \n  const randomEffectKey = Object.keys(effects)[Math.floor(Math.random() * Object.keys(effects).length)];\n  const selectedEffect = effects[randomEffectKey];\n  console.log('Selected Effect:', selectedEffect.description);\n        selectedEffect.effect(); // Execute the effect\n\n        return selectedEffect.description;\n      }\n//     }\n// console.log('selectedEffect', selectedEffect, 'randomEffectKey', randomEffectKey);\n//   switch (randomEffectKey) {\n//         case 'upgrade':\n//             this.upgradePiece(piece);\n//             break;\n//         case 'downgrade':\n//             this.downgradePiece(piece);\n//             break;\n//         case 'swap':\n//             this.swapPiece(piece);\n//             break;\n//         case 'teleport':\n//             this.teleportPiece(piece);\n//             break;\n//         case 'shield':\n//             this.shieldPiece(piece);\n//             break;\n//         case 'banish':\n//             this.banishPiece(piece);\n//             break;\n//         case 'chaos':\n//             this.chaosShift(piece);\n//             break;\n//         case 'freeze':\n//             this.freezePiece(piece);\n//             break;\n//         // Implement other cases similarly\n//     }\n//     return randomEffect;\n// }\n\nshowSpellInteraction(spellName, spellDescription) {\n  console.log('showSpellInteraction function entered description being:', spellDescription)\n  this.startShufflingAnimation();\n    const spellPopup = document.getElementById('spell-interaction');\n    const spellNameElement = document.getElementById('spell-name');\n    const spellDescriptionElement = document.getElementById('spell-description');\n\n    spellNameElement.textContent = spellName;\n    spellDescriptionElement.textContent = spellDescription;\n\n    // Show the popup\n    spellPopup.classList.remove('hidden');\n    spellPopup.classList.add('visible');\n\n    // Hide the popup after some time\n    setTimeout(() => {\n        spellPopup.classList.remove('visible');\n        spellPopup.classList.add('hidden');\n    }, 9000); // Adjust time as needed\n}\nstartShufflingAnimation() {\n  console.log('startShufflingAnimation function called');\n    const cardContainer = document.getElementById('card-container');\n    cardContainer.innerHTML = ''; // Clear previous cards\n\n    // Create and add cards for animation\n    for (let i = 0; i < 5; i++) { // 5 as an example\n        const card = document.createElement('div');\n        card.classList.add('card');\n        cardContainer.appendChild(card);\n    }\n}\nupgradePiece(alliance) {\n    console.log(\"Upgraded piece called for alliance:\", alliance);\n    const pieces = Array.from(document.querySelectorAll('.chess-piece'));\n    console.log(\"Pieces\", pieces);\n    const allianceParent = alliance.parentNode;\n    const allianceColor = allianceParent.dataset.color;\n\n\n\n    // Filter for allied pawns using parent node data attributes\n    let alliedPawns = pieces.filter(piece => {\n        let parentSquare = piece.parentNode;\n        console.log('parentSquare', parentSquare);\n        console.log('parentSquare.dataset.type', parentSquare.dataset.type);\n        console.log('parentSquare.dataset.color', parentSquare.dataset.color);\n        \n        return parentSquare.dataset.type === 'pawn' && parentSquare.dataset.color === allianceColor;\n    });\n    console.log('Allied Pawns', alliedPawns);\n\n    // Randomly select a pawn\n    let selectedPawn = this.getRandomElement(alliedPawns);\n\n    if (!selectedPawn) {\n        console.error('No eligible pawns found for upgrade.');\n        return;\n    }\n\n    // Upgrade logic here (randomly to knight, rook, or bishop)\n    let upgradeOptions = ['knight', 'rook', 'bishop'];\n    let newType = this.getRandomElement(upgradeOptions);\n\n    // Update the pawn's parent data-type and class\n    let parentSquare = selectedPawn.parentNode;\n    parentSquare.dataset.type = newType;\n    selectedPawn.className = `chess-piece ${alliance}-${newType}`;\n\n    // Update the piece's appearance and functionality\n    this.updatePieceAppearanceAndFunctionality(selectedPawn, parentSquare, allianceColor, newType);\n}\n\ndowngradePiece(alliancePiece) {\n    console.log('downgradePiece called with alliance piece', alliancePiece);\n    const allianceParent = alliancePiece.parentNode;\n    // Extract the color from the alliance piece\n    const allianceColor = allianceParent.dataset.color;\n    console.log('Alliance color:', allianceColor);\n\n    // Select all pieces and then filter for the same color\n        const pieces = Array.from(document.querySelectorAll(`.chess-piece.${allianceColor}-rook, .chess-piece.${allianceColor}-bishop, .chess-piece.${allianceColor}-knight`));\n    \n    console.log('Filtered pieces:', pieces);\n\n    // Randomly select a piece\n    let selectedPiece = this.getRandomElement(pieces);\n\n    if (!selectedPiece) {\n        console.error('No eligible pieces found for downgrade.');\n        return;\n    }\n\n    // Downgrade to pawn\n    // this.selectedPiece.dataset.type = 'pawn';\n\n    // Update the piece's appearance and functionality\n    this.updatePieceAppearanceAndFunctionality(selectedPiece, allianceParent, allianceColor, 'pawn',);\n}\n getRandomElement(arr) {\n      console.log(\"getRandomElement  called\");\n\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\n updatePieceAppearanceAndFunctionality(piece, parentSquare, allianceColor, newType) {\n  console.log('updatePieceAppea function called newType', newType);\n  let parent = piece.parentNode;\n  let formattedNewType = newType.charAt(0).toUpperCase() + newType.slice(1);\n  \n  parent.removeAttribute('data-type');\n  parent.setAttribute('data-type', newType);\n  parent.style.backgroundImage = `url('img/${allianceColor}${formattedNewType}.png')`;\n  console.log('parent', parent);\n\n  // Update the piece's class and background image\n  piece.className = `chess-piece ${allianceColor}-${newType}`;\n  piece.style.backgroundImage = `url('img/${allianceColor}${formattedNewType}.png')`;\n\n\n}\n\n// swapPiece(square) { //ALMOST FUNCTIONNAL BUT MISSING SOME THINGS ABOUT SWAPPIECE DIRECTION CONCERNING VALIDMOVES -forpawn-\n//     console.log('swapPiece function called with square:', square);\n\n//     const allSquares = Array.from(document.querySelectorAll('.chess-square.has-piece'));\n//     const eligibleSquares = allSquares.filter(s => s !== square);\n\n//     if (eligibleSquares.length < 1) {\n//         console.error('Not enough squares available to swap.');\n//         return;\n//     }\n\n//     let randomSquare = eligibleSquares[Math.floor(Math.random() * eligibleSquares.length)];\n//     console.log('randomsquare in swapPiece function:', randomSquare);\n//     if (square && randomSquare) {\n//       console.log('initial square check for swapping :', square, 'randomSquare', randomSquare);\n        \n//         let piece1 = square.querySelector('.chess-piece');\n//         let piece2 = randomSquare.querySelector('.chess-piece');\n//         console.log('initial piece for swapping :', piece1, 'randomPiece', piece2);\n//         if (square && randomSquare) {\n//           // Swap the attributes of the squares (which are the containers of the pieces)\n//         ['data-type', 'data-color', 'data-col', 'data-row'].forEach(attribute => {\n//                 this.swapAttributes(square, randomSquare, attribute);\n//         });\n       \n\n//             let bgImage1 = piece1.style.backgroundImage;\n//             let bgImage2 = piece2.style.backgroundImage;\n//             console.log('backgroundImage1', bgImage1, \"background-image2\", bgImage2);\n//             piece1.style.backgroundImage = bgImage2;\n//             square.style.backgroundImage = '';\n//             piece2.style.backgroundImage = bgImage1;\n//             randomSquare.style.backgroundImage = '';\n//             console.log('piece1.style.backgroundImage', piece1.style.backgroundImage, \"piece2.style.backgroundImage\", piece2.style.backgroundImage);\n\n//             // Swap CSS for background images if needed\n//             // This part seems commented out but you can uncomment and adjust as needed\n//             let classPiece1 = piece1.className;\n//             let classPiece2 = piece2.className;\n//             piece1.className = classPiece2;\n//             piece2.className = classPiece1;\n\n//                         // Detach and re-append pieces to swap them\n//             // const detachedPiece1 = square.removeChild(piece1);\n//             // const detachedPiece2 = randomSquare.removeChild(piece2);\n//             // square.appendChild(detachedPiece2);\n//             // randomSquare.appendChild(detachedPiece1);\n\n//             // Calculate positions based on square attributes\n//             const piece1Position = [parseInt(square.getAttribute('data-row')), parseInt(square.getAttribute('data-col'))];\n//             const piece2Position = [parseInt(randomSquare.getAttribute('data-row')), parseInt(randomSquare.getAttribute('data-col'))];\n\n//             console.log('position of the pieces before changing the board internal state, piece 1 swapped', piece1Position[0], 'randomPiece aka piece2', piece2Position);\n//             console.log('this.game.board before trying to update the internal state', this.game.game.board);\n\n//             // Swap pieces in the game board array\n//             let tempPiece = this.game.game.board[piece1Position[0]][piece1Position[1]];\n//             this.game.game.board[piece1Position[0]][piece1Position[1]] = this.game.game.board[piece2Position[0]][piece2Position[1]];\n//             this.game.game.board[piece2Position[0]][piece2Position[1]] = tempPiece;\n//             console.log('this.game.board after the internalstate update but before calling this.syncBoardState', this.game.board);\n\n\n//             // Ensure syncBoardState properly reflects changes in the board state\n//             this.game.syncBoardState();\n//              console.log('this.game.board AFTER THE CALL TO syncBoardState ', this.game.game.board);\n\n//             this.pieceSwapped = true;\n//         } else {\n//             console.error('One of the squares does not contain a piece. Swap aborted.');\n//         }\n//     } else {\n//         console.error('Invalid square element encountered.');\n//     }\n// }\n\n\n// // Enhanced attribute swap function to handle both square and piece attributes\n// swapAttributes(square1, square2, attributeName) {\n//   console.log('swapAttributes function called for square', square1, 'randomsquare', square2, 'with attribute : ', attributeName);\n//     // Swap square attributes\n//     let tempSquareAttribute = square1.getAttribute(attributeName);\n//     square1.setAttribute(attributeName, square2.getAttribute(attributeName));\n//     square2.setAttribute(attributeName, tempSquareAttribute);\n    \n//     // Swap piece attributes if they exist\n//     // if (piece1 && piece2) {\n//     //     let tempPieceAttribute = piece1.getAttribute(attributeName);\n//     //     piece1.setAttribute(attributeName, piece2.getAttribute(attributeName));\n//     //     piece2.setAttribute(attributeName, tempPieceAttribute);\n//     // }\n// }\nswapPiece() {\n    console.log(\"swapTwoPieces called\");\n\n    const squares = Array.from(document.querySelectorAll('.chess-square.has-piece'));\n    if (squares.length < 2) {\n        console.error(\"Not enough pieces on the board to swap.\");\n        return;\n    }\n\n    // Select two distinct squares randomly\n    let randomIndexes = this.selectTwoDistinctRandomIndexes(squares.length);\n    let square1 = squares[randomIndexes[0]];\n    let square2 = squares[randomIndexes[1]];\n    square1.style.backgroundImage = '';\n    square2.style.backgroundImage = '';\n    \n\n    // Swap 'data-' attributes and pieces\n    ['data-type', 'data-color'].forEach(attribute => {\n        this.swapAttributes(square1, square2, attribute);\n    });\n    this.swapChessPieces(square1, square2);\n\n    // Optionally, update internal game state\n    this.updateInternalGameStateForSwap(square1, square2);\n\n    console.log(\"Two pieces swapped successfully.\");\n}\n\nselectTwoDistinctRandomIndexes(length) {\n    let index1 = Math.floor(Math.random() * length);\n    let index2;\n    do {\n        index2 = Math.floor(Math.random() * length);\n    } while (index1 === index2);\n    return [index1, index2];\n}\n\nswapAttributes(element1, element2, attributeName) {\n    let temp = element1.getAttribute(attributeName);\n    element1.setAttribute(attributeName, element2.getAttribute(attributeName));\n    element2.setAttribute(attributeName, temp);\n}\n\nswapChessPieces(square1, square2) {\n    const piece1 = square1.querySelector('.chess-piece');\n    const piece2 = square2.querySelector('.chess-piece');\n\n    const tempContainer = document.createElement('div');\n    tempContainer.appendChild(piece1.cloneNode(true));\n    square1.replaceChild(piece2.cloneNode(true), piece1);\n    square2.replaceChild(tempContainer.firstChild, piece2);\n}\n\nupdateInternalGameStateForSwap(square1, square2) {\n    // Your logic to update the internal game state after a swap\n    // This should reflect the new positions of the swapped pieces in your game's data structure\n}\n    // swapPiece(piece) {\n//     console.log('swapPiece function called with', piece);\n//     // const pieceColor = piece.dataset.color;\n\n//     // Fetch all pieces of the same color\n//     //     const pieces = Array.from(document.querySelectorAll(`.chess-piece.${pieceColor}-rook, .chess-piece.${pieceColor}-bishop, .chess-piece.${pieceColor}-knight, .chess-piece.${pieceColor}-pawn, .chess-piece.${pieceColor}-queen, .chess-piece.${pieceColor}-king`))\n//     const pieceTypes = ['pawn', 'rook', 'knight', 'bishop', 'queen', 'king'];\n// const pieceColor = this.color; // or \"black\", depending on the color you need\n\n// // Create a selector for each piece type and concatenate them\n// const selectors = pieceTypes.map(type => `.chess-piece.${pieceColor}-${type}`).join(', ');\n\n// // Query all pieces of the specified color and types\n// const allPieces = Array.from(document.querySelectorAll(selectors));\n//     // const allPieces = Array.from(document.querySelectorAll(`.chess-piece.${pieceColor}`));\n//     console.log('All pieces before filtering:', allPieces);\n\n//     // Filter out the piece that triggered the swap\n//     const eligiblePieces = allPieces.filter(p => p !== piece);\n//     console.log('Eligible pieces for swap:', eligiblePieces);\n\n//     if (eligiblePieces.length < 2) {\n//         console.error('Not enough pieces available to swap.');\n//         return;\n//     }\n\n//     // Randomly select two different pieces to swap\n//     let randomIndex1 = Math.floor(Math.random() * eligiblePieces.length);\n//     let randomPiece1 = eligiblePieces[randomIndex1];\n//     let randomIndex2;\n//     do {\n//         randomIndex2 = Math.floor(Math.random() * eligiblePieces.length);\n//     } while (randomIndex2 === randomIndex1);\n//     let randomPiece2 = eligiblePieces[randomIndex2];\n\n//     // Swap the pieces\n// const randomPiece1Square = randomPiece1.parentNode;\n// const randomPiece2Square = randomPiece2.parentNode;\n\n// // Temporarily store one piece in a fragment to maintain a reference to it\n// const tempFragment = document.createDocumentFragment();\n// tempFragment.appendChild(randomPiece1);\n\n// // Swap positions\n// randomPiece1Square.appendChild(randomPiece2);\n// randomPiece2Square.appendChild(tempFragment.firstChild);\n//     this.pieceSwapped = true;\n\n//     console.log('Swapped pieces:', randomPiece1, randomPiece2);\n// }\n\n\nbanishPiece(piece) {\n    console.log('banish function called');\n\n    piece.remove();\n    // Update any internal game state as necessary\n}\nshieldPiece(piece) {\n    console.log('shield function called');\n\n    piece.dataset.shielded = 'true';\n    // You'll need to check this property in your capture logic\n    setTimeout(() => piece.dataset.shielded = 'false', 3 * turnDuration); // Assuming turnDuration is the duration of a turn\n}\n\nteleportPiece(piece) {\n    console.log('teleport function called');\n\n    const emptySquares = document.querySelectorAll('.chess-square:not(.has-piece)');\n    console.log('emptySquares', emptySquares);\n    const randomSquare = emptySquares[Math.floor(Math.random() * emptySquares.length)];\n    console.log('randomSquare', randomSquare);\n    const parentPiece = piece.parentNode;\n    // Assuming 'allianceColor' holds the color of the allied pieces (e.g., 'white' or 'black')\n    const allianceColor = parentPiece.dataset.color; // Extract the color from the piece\n    const alliedPieces = Array.from(document.querySelectorAll(`.chess-piece.${allianceColor}-pawn, \n                                                              .chess-piece.${allianceColor}-rook, \n                                                              .chess-piece.${allianceColor}-bishop, \n                                                              .chess-piece.${allianceColor}-knight, \n                                                              .chess-piece.${allianceColor}-queen`));\n    console.log('Allied pieces except for the king:', alliedPieces);\n    const randomPiece = alliedPieces[Math.floor(Math.random() * alliedPieces.length)];\n    console.log('Random Piece selected for teleport:', randomPiece);\n     // Perform the teleportation\n    if (randomPiece && randomSquare) {\n        // Move the piece to the new square\n        \n        \n        const currentSquare = randomPiece.parentNode;\n        const type = currentSquare.getAttribute('data-type');\n        const color = currentSquare.getAttribute('data-color');\n\n        currentSquare.removeChild(randomPiece);\n        currentSquare.classList.remove('has-piece', 'event-listener-attached');\n        currentSquare.removeAttribute('data-type');\n        currentSquare.removeAttribute('data-color');\n        currentSquare.removeEventListener('click', this.boundHandleClick);\n\n        randomSquare.appendChild(randomPiece);\n        randomSquare.setAttribute('data-type', type);\n        randomSquare.setAttribute('data-color', color);\n        randomSquare.classList.add('has-piece', 'event-listener-attached');\n        randomSquare.addEventListener('click', this.boundHandleClick);\n\n\n        \n\n        // Update any necessary game state here\n        console.log(`Teleported ${randomPiece.className} to square ${randomSquare.id}`);\n    } else {\n        console.error('Teleportation failed: No piece or square selected.');\n    }\n}\n\nfreezePiece() {\n    console.log('freeze function called');\n\n    // Determine the enemy color\n    const currentPlayerColor = this.game.currentPlayer;\n    console.log('currentPlayerColor', currentPlayerColor);\n    const enemyColor = currentPlayerColor === 'white' ? 'black' : 'white';\n\n    console.log(\"Enemy color:\", enemyColor);\n\n    // Query for enemy pieces excluding the king\n    const enemyPieces = Array.from(document.querySelectorAll(`.chess-piece.${currentPlayerColor}-pawn, \n                                                              .chess-piece.${currentPlayerColor}-rook, \n                                                              .chess-piece.${currentPlayerColor}-bishop, \n                                                              .chess-piece.${currentPlayerColor}-knight, \n                                                              .chess-piece.${currentPlayerColor}-queen`));\n    console.log(\"Enemy pieces:\", enemyPieces);\n\n    // Current turn count at the time of spell casting\n    const currentTurnCount = this.turnCount;\n\n    // Randomly select a number of pieces to freeze\n    const numberOfPiecesToFreeze = Math.floor(Math.random() * 4) + 1; // 1 to 4 pieces\n    for (let i = 0; i < numberOfPiecesToFreeze && i < enemyPieces.length; i++) {\n        const randomIndex = Math.floor(Math.random() * enemyPieces.length);\n        const pieceToFreeze = enemyPieces[randomIndex];\n\n        // Apply freeze effect\n        const squareToFreeze = pieceToFreeze.parentNode;\n                squareToFreeze.classList.add('frozen-square');\n\n        pieceToFreeze.classList.add('frozen-piece');\n        \n\n        // Random number of turns for the freeze duration (between 2 and 4)\n        const freezeDurationInTurns = Math.floor(Math.random() * 3) + 2;\n\n        // Calculate the turn when the freeze effect should end\n        const unfreezeTurn = currentTurnCount + freezeDurationInTurns;\n\n        // Restore piece's movement ability after the freeze duration\n        const unfreezeCheckInterval = setInterval(() => {\n            if (this.turnCount >= unfreezeTurn) {\n                pieceToFreeze.dataset.frozen = 'false';\n             \n                clearInterval(unfreezeCheckInterval);\n            }\n        }, 1000); // Check every second\n    }\n}\n\nchaosShift(selectedPiece) {\n    console.log('chaosShift function called');\n    const parent = selectedPiece.parentNode;\n    const parentColor = parent.getAttribute('data-color');\n    console.log('parent', parent);\n    const currentPlayerColor = this.currentPlayer;\n    console.log('selectedPiece.color', parent.getAttribute('data-color'));\n    console.log('currentPlayerColor', currentPlayerColor);\n    const enemyColor = currentPlayerColor === 'white' ? 'black' : 'white';\n    const alliedPieces = Array.from(document.querySelectorAll(`.chess-piece.${parentColor}-pawn, \n                                                              .chess-piece.${parentColor}-rook, \n                                                              .chess-piece.${parentColor}-bishop, \n                                                              .chess-piece.${parentColor}-knight, \n                                                              .chess-piece.${parentColor}-queen`));\n    console.log(\"alliedPieces pieces:\", alliedPieces);\n    // Query for all pieces of the same type and color\n    \n    const positions = Array.from(alliedPieces).map(piece => {\n        const parentSquare = piece.parentNode;\n        return { row: parentSquare.getAttribute('data-row'), col: parentSquare.getAttribute('data-col') };\n    });\n\n    this.shuffleArray(positions); // Randomly shuffle the positions array\n\n    alliedPieces.forEach((piece, i) => {\n        const newPos = positions[i];\n        const newSquareId = `square-${newPos.row}-${newPos.col}`;\n        const newSquare = document.getElementById(newSquareId);\n\n        // Move piece to the new square\n        if(newSquare && !newSquare.contains(piece)) {\n            const oldSquare = piece.parentNode;\n            oldSquare.removeChild(piece);\n            newSquare.appendChild(piece);\n\n            // Update the dataset attributes if necessary\n            newSquare.dataset.type = selectedPiece.dataset.type;\n            newSquare.dataset.color = selectedPiece.dataset.color;\n\n            // Perform any additional updates required for the game state\n        }\n    });\n}\n\n// Shuffle array helper function\n shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\nblinkStep(piece) {\n    console.log('Blink Step activated for', piece.id);\n    // Allow the piece to move to any empty square within a two-square radius.\n    // You'll need to handle this in the movement logic of your game.\n    this.forceRandomMove(piece);\n    // Example: Set a flag and handle in the piece's movement method\n    piece.dataset.blinkStep = 'active';\n}\n//BEGINNING OF CHAOSTHEORYSPELL\n\ncastChaosTheorySpell() {\n  console.log('chaostheoryspell entered');\n    // Emit Chaos Theory start event\n    document.dispatchEvent(this.chaosTheoryStartEvent);\n    setTimeout(() => {\n        // Emit Chaos Theory end event after duration\n        document.dispatchEvent(this.chaosTheoryEndEvent);\n    }, 60000); // Example: 60 seconds duration\n}\n\nperformRandomMove() {\n    const playerColor = this.game.currentPlayer;\n    console.log('playerColor', playerColor);\n\n    // Get all allied pieces\n    const alliedPieces = Array.from(document.querySelectorAll(`.chess-piece.${playerColor}-pawn, \n                                                              .chess-piece.${playerColor}-rook, \n                                                              .chess-piece.${playerColor}-bishop, \n                                                              .chess-piece.${playerColor}-knight`));\n    console.log(\"alliedPieces pieces:\", alliedPieces);\n\n    // Select a random piece\n    const randomPiece = alliedPieces[Math.floor(Math.random() * alliedPieces.length)];\n\n    // Get all empty squares\n    const emptySquares = Array.from(document.querySelectorAll('.chess-square:not(.has-piece)'));\n\n    if (emptySquares.length > 0) {\n        // Select a random empty square\n        const randomSquare = emptySquares[Math.floor(Math.random() * emptySquares.length)];\n\n        // Extract the row and column from the square's ID or data attributes\n        const toRow = parseInt(randomSquare.getAttribute('data-row'), 10);\n        const toCol = parseInt(randomSquare.getAttribute('data-col'), 10);\n\n        // Assuming randomPiece's parent element has data-row and data-col attributes\n        const fromRow = parseInt(randomPiece.parentNode.getAttribute('data-row'), 10);\n        const fromCol = parseInt(randomPiece.parentNode.getAttribute('data-col'), 10);\n\n        console.log(`Performing random move on piece :(${randomPiece}) from (${fromRow}, ${fromCol}) to (${toRow}, ${toCol})`);\n\n        // Move the piece\n        this.forceMove(randomPiece, fromRow, fromCol, toRow, toCol); // Implement forceMove or use existing logic\n    } else {\n        console.log(\"No empty squares available to move the randomly selected piece.\");\n    }\n}\n\n\nshowDiceRoll(result) {\n    const diceContainer = document.getElementById('dice-container');\n    const diceImage = document.getElementById('dice-image');\n\n    // Update the dice image based on the result\n    diceImage.src = `img/dice${result}.png`; // Assuming you have images for each dice face\n\n    // Show the dice container\n    diceContainer.style.display = 'block';\n\n    // Hide the dice after a short delay\n    setTimeout(() => {\n        diceContainer.style.display = 'none';\n    }, 2000); // Adjust the time as needed\n}\n\nrollDice() {\n    const result = Math.floor(Math.random() * 6) + 1;\n    this.showDiceRoll(result);\n    return result;\n}\n\n//END OF CHAOSTHEORYSPELL\nmagneticPull(selectedPiece) {\n    console.log('Magnetic Pull activated for selectedPiece', selectedPiece);\n\n    const parentSquare = selectedPiece.parentNode;\n    const currentRow = parseInt(parentSquare.getAttribute('data-row'), 10);\n    const currentCol = parseInt(parentSquare.getAttribute('data-col'), 10);\n\n    // Determine the direction towards the opponent's side\n    const isWhitePiece = selectedPiece.dataset.color === 'white';\n    const rowChange = isWhitePiece ? -1 : 1;\n\n    // Apply Gravitational Field effect around the piece\n    this.applyGravitationalField(selectedPiece, currentRow, currentCol, rowChange);\n}\n\n\napplyGravitationalField(selectedPiece, currentRow, currentCol) {\n    console.log('Applying Gravitational Field for', selectedPiece);\n\n    const radius = 1;\n    const totalRows = 8; // Assuming an 8x8 board\n\n    for (let row = currentRow - radius; row <= currentRow + radius; row++) {\n        for (let col = currentCol - radius; col <= currentCol + radius; col++) {\n            if ((row === currentRow && col === currentCol) || row < 0 || row >= totalRows || col < 0 || col >= totalRows) {\n                continue; // Skip the square where the selected piece is and invalid rows/cols\n            }\n\n            const squareId = `square-${row}-${col}`;\n            const square = document.getElementById(squareId);\n            if (!square || !square.classList.contains('has-piece')) {\n                continue;\n            }\n\n            const piece = square.querySelector('.chess-piece');\n            if (!piece || piece === selectedPiece) {\n                continue;\n            }\n            const parentPiece = piece.parentNode\n            // Determine the direction based on the piece's color\n            let newRow;\n            console.log('piece color', parentPiece.dataset.color);  \n            if (parentPiece.dataset.color === 'white') {\n                // White pieces move downwards (increasing row number)\n                newRow = Math.min(row + 1, totalRows - 1);\n                console.log('newRow', newRow);\n              } else {\n                // Black pieces move upwards (decreasing row number)\n                newRow = Math.max(row - 1, 0);\n            }\n\n            // Move the piece if the new position is different from the current\n            if (newRow !== row) {\n                this.forceMove(piece, row, col, newRow, col);\n            }\n        }\n    }\n}\n// applyGravitationalField(selectedPiece, currentRow, currentCol, direction) {\n//     console.log('Applying Gravitational Field for', selectedPiece);\n\n//     const radius = 1;\n//     const totalRows = 8; // Assuming an 8x8 board\n\n//     for (let row = currentRow - radius; row <= currentRow + radius; row++) {\n//         for (let col = currentCol - radius; col <= currentCol + radius; col++) {\n//             // Skip the square where the selected piece is and invalid rows/cols\n//             if ((row === currentRow && col === currentCol) || row < 0 || row >= totalRows || col < 0 || col >= totalRows) continue;\n\n//             // Handle adjacent piece movement\n//             const squareId = `square-${row}-${col}`;\n//             const square = document.getElementById(squareId);\n//             if (square && square.classList.contains('has-piece')) {\n//                 const piece = square.querySelector('.chess-piece');\n//                 if (piece && piece !== selectedPiece) {\n//                     let newRow = row + direction;\n//                     newRow = Math.max(0, Math.min(newRow, totalRows - 1));\n//                     this.forceMove(piece, row, col, newRow, col);\n//                 }\n//             }\n//               const selectedPieceParent = selectedPiece.parentNode;\n            \n            \n//         }\n//     }\n// }\n// applyGravitationalField(selectedPiece, currentRow, currentCol) {\n//     console.log('Applying Gravitational Field for', selectedPiece);\n\n//     const radius = 1;\n//     const totalRows = 8; // Assuming an 8x8 board\n\n//     for (let row = currentRow - radius; row <= currentRow + radius; row++) {\n//         for (let col = currentCol - radius; col <= currentCol + radius; col++) {\n//             if ((row === currentRow && col === currentCol) || row < 0 || row >= totalRows || col < 0 || col >= totalRows) {\n//                 continue; // Skip the square where the selected piece is and invalid rows/cols\n//             }\n\n//             const squareId = `square-${row}-${col}`;\n//             const square = document.getElementById(squareId);\n//             if (!square || !square.classList.contains('has-piece')) {\n//                 continue;\n//             }\n\n//             const piece = square.querySelector('.chess-piece');\n//             if (!piece || piece === selectedPiece) {\n//                 continue;\n//             }\n\n//             // Determine the direction based on the piece's color\n//             const isWhitePiece = piece.dataset.color === 'white';\n//             let newRow = row + (isWhitePiece ? 1 : -1); // White moves down, Black moves up\n//             newRow = Math.max(0, Math.min(newRow, totalRows - 1)); // Ensure within board boundaries\n \n//             console.log('newRow', newRow);\n//             // Additional check to prevent moving out of the board\n//             if (newRow >= 0 && newRow < totalRows) {\n//                 this.forceMove(piece, row, col, newRow, col);\n//             }\n//         }\n//     }\n// }\nforceRandomMove(piece, chessBoard, event, excludeMiniBoardArea = false) {\n    console.log('forceRandomMove called for:', piece);\n    const parentSquare = piece.parentNode;\n    const fromRow = parseInt(parentSquare.getAttribute('data-row'));\n    const fromCol = parseInt(parentSquare.getAttribute('data-col'));\n\n    const totalRows = 8; // Assuming an 8x8 grid\n    const totalCols = 8;\n\n    let toRow, toCol, targetSquare, isValidMove;\n\n    do {\n        toRow = Math.floor(Math.random() * totalRows);\n        toCol = Math.floor(Math.random() * totalCols);\n\n        targetSquare = document.querySelector(`[data-row='${toRow}'][data-col='${toCol}']`);\n\n        // Check if the square is empty and not the same as the starting square\n        isValidMove = targetSquare && !targetSquare.classList.contains('has-piece')\n                      && (toRow !== fromRow || toCol !== fromCol);\n\n        if (excludeMiniBoardArea) {\n            isValidMove = isValidMove && !this.isWithinMiniBoard(toRow, toCol);\n        }\n    } while (!isValidMove);\n\n    this.forceMove(piece, fromRow, fromCol, toRow, toCol);\n    this.syncBoardState();\n    console.log('this context', this);\n    // this.game.syncBoardState();\n}\nisOutsideMiniBoard(row, col) {\n    return row < this.miniBoardArea.y1 || row > this.miniBoardArea.y2 ||\n           col < this.miniBoardArea.x1 || col > this.miniBoardArea.x2;\n}\n\n// END OF CASTENCHANTEDGROUNDSPELL\\\\\n//BEGINNING OF RANDOMPAWNMOVE\n// Method to activate the Wind of Change spell for all pawns\nactivateWindOfChangeSpell() {\n  const rng = new SeededRNG(this.game.turnCount);\n  console.log('rng', rng);\n    const allPawnElements = document.querySelectorAll('.chess-piece.white-pawn, .chess-piece.black-pawn');\n    const currentTurn = this.game.turnCount; // Assuming this is available globally\n    allPawnElements.forEach(pawnElement => {\n        const spellDuration = Math.floor(Math.random() * 4) + 2; // Duration from 2 to 5 turns\n        pawnElement.dataset.spellExpirationTurn = currentTurn + spellDuration;\n\n        const directions = ['forward', 'left', 'right', 'diagonalLeft', 'diagonalRight'];\n        const randomDirection = directions[Math.floor(Math.random() * directions.length)];\n        pawnElement.classList.remove(...directions); // Remove existing direction classes\n        pawnElement.classList.add(randomDirection, 'pawn-random-move'); // Add new direction and spell effect\n    });\n}\n\n// Method to check and update spell effects for all pawns\n// checkAndUpdateSpellEffects() {\n//     console.log('checkAndUpdateSpellEffects function entered in classPiece');\n//     const allPawnElements = document.querySelectorAll('.chess-piece.pawn-random-move');\n//     allPawnElements.forEach(pawnElement => {\n//         const spellExpirationTurn = parseInt(pawnElement.dataset.spellExpirationTurn, 10);\n//         if (spellExpirationTurn > 0) {\n//             pawnElement.dataset.spellExpirationTurn = spellExpirationTurn - 1; // Decrement the value\n//         } else {\n//             // If the expiration turn has passed, remove the spell effect\n//             ['forward', 'left', 'right', 'diagonalLeft', 'diagonalRight', 'pawn-random-move'].forEach(dir => pawnElement.classList.remove(dir));\n//             // Clean up data attribute\n//             delete pawnElement.dataset.spellExpirationTurn; // Corrected to delete the dataset attribute\n//         }\n//     });\n// }\n\n\n// checkAndUpdateSpellEffects() {\n//   console.log('checkAndUpdateSpellEffects function entered in classPiece');\n//     const allPawnElements = document.querySelectorAll('.chess-piece.pawn-random-move');\n//     allPawnElements.forEach(pawnElement => {\n//         const spellStartTurn = parseInt(pawnElement.dataset.spellStartTurn, 10);\n//         const spellDuration = parseInt(pawnElement.dataset.spellDuration, 10);\n//         if (game.turnCount >= spellStartTurn + spellDuration) {\n//             // Spell duration has elapsed, remove the spell effect\n//             ['forward', 'left', 'right', 'diagonalLeft', 'diagonalRight', 'pawn-random-move'].forEach(dir => pawnElement.classList.remove(dir));\n//             // Clean up data attributes\n//             delete pawnElement.dataset.spellStartTurn;\n//             delete pawnElement.dataset.spellDuration;\n//         }\n//     });\n// }\n\n// activateWindOfChangeSpell() {\n//         if (this.type !== 'pawn') return; // Only pawns are affected\n//             this.isWindOfChangeActive = true;\n\n//         const allPawnElements = document.querySelectorAll('.chess-piece.white-pawn, .chess-piece.black-pawn');\n    \n//     // Add the 'pawn-random-move' class to each pawn element\n//     allPawnElements.forEach(pawnElement => {\n//         pawnElement.classList.add('pawn-random-move');\n//     });\n//         this.movesLeftWithSpell = Math.floor(Math.random() * (9)) + 2; // 2 to 10 moves\n//         this.assignNewDirection(); // Assign initial random direction\n//     }\n\n//     // Assigns a new, random direction to the pawn\n//     assignNewDirection() {\n//       console.log('this context in assignNewDirection', this);\n//       const randomIndex = Math.floor(Math.random() * this.directions.length);\n//       this.currentDirection = this.directions[randomIndex];\n//       console.log(`New direction for ${this.color} pawn: ${this.currentDirection}`);\n//             console.log(`New direction for ${this.color} pawn: ${chessPiece.currentDirection}`);\n\n//     }\n\n    // // Called after each move to update the spell's effect\n    // updateAfterMove() {\n    //     if (this.type !== 'pawn' || !this.isWindOfChangeActive) return;\n\n    //     this.movesLeftWithSpell--;\n    //     if (this.movesLeftWithSpell > 0) {\n    //         this.assignNewDirection(); // Assign a new direction if spell is still active\n    //     } else {\n    //         this.isWindOfChangeActive = false; // Spell expires\n    //         this.currentDirection = 'forward'; // Reset to default direction\n    //     }\n    // }\n  // Additional methods as needed for standard chess piece behavior...\n  \n//END OD RANDOMPAWNMOVE\n//BEGINNING OF ARCANE ANARCHY spell\n\n    determineMovement() {\n        // Movement logic based on piece type\n        switch(this.type) {\n            case 'Pawn': return 'forward';\n            case 'Rook': return 'straight';\n            case 'Knight': return 'L-shape';\n            case 'Bishop': return 'diagonal';\n            default: return 'default';\n        }\n    }\n\n    // Static method to cast the Arcane Anarchy spell\n    static castArcaneAnarchy() {\n        const eligiblePieces = ChessPiece.allPieces.filter(piece => piece.type !== 'King' && piece.type !== 'Queen');\n        const shuffledMovements = eligiblePieces.map(piece => piece.originalMovement).sort(() => Math.random() - 0.5);\n\n        eligiblePieces.forEach((piece, index) => {\n            piece.applySpell(shuffledMovements[index] || piece.originalMovement);\n        });\n\n        // Reset the spell after 3 turns\n        // This logic would need to be integrated with the game's turn management system\n    }\n\n    applySpell(newMovement) {\n        this.currentMovement = newMovement;\n        this.isUnderSpell = true;\n    }\n\n    revertSpell() {\n        this.currentMovement = this.originalMovement;\n        this.isUnderSpell = false;\n    }\n    \n//END OF ARCANE ANARCHY SPELL\n\n//BEGIN OF TOWERACTIVATIONSPELL\nplaceTower() {\n    const unOccupiedSquares = document.querySelectorAll('.chess-square:not(.has-piece)');\n    if (unOccupiedSquares.length > 0) {\n        const randomIndex = Math.floor(Math.random() * unOccupiedSquares.length);\n        const chosenSquare = unOccupiedSquares[randomIndex];\n        // Code to place the tower on chosenSquare\n        chosenSquare.classList.add('TOWER');\n        chosenSquare.innerHTML = '<img src=\"path/to/tower-icon.png\" alt=\"Tower\">';\n        const squareId = chosenSquare.getAttribute('id');\n        const coords = squareId.split('-').slice(1).map(Number); // Assuming IDs like 'square-3-4'\n        this.towers.push({ x: coords[0], y: coords[1] });\n        // Additional code to update game state, if necessary\n    } else {\n        console.log(\"No unoccupied squares available.\");\n    }\n}\ncastTowerSpell(currentTurn) {\n    this.towerOfPowerActivated = true;\n    this.activationTurn = currentTurn;\n    this.placeTower();\n    // this.createBeamAndApplyEffects();\n}\ncheckTowerCountAndActivateBeam() {\n    if (this.towers.length === 4) {\n        this.activateBeamOfLight();\n    }\n}\n\ncheckAndPlaceTowerEachTurn(currentTurn) {\n  // const currentTurn = document.querySelector('.turn-count-display');\n    if (this.towerOfPowerActivated && ((currentTurn - this.activationTurn) % 2 === 0)) {\n        this.placeTower();\n    }\n}\n\ncreateBeamAndApplyEffects() {\n    this.towers.forEach((tower, index) => {\n        // Assuming a method to draw a beam between towers\n        if (index < this.towers.length - 1) {\n            const nextTower = this.towers[index + 1];\n            this.drawBeam(tower, nextTower);\n        }\n\n        // Check and apply effects to pieces along the beam1111111111111111111111\n        this.checkAndApplyBeamEffects(tower);\n    });\n}\n\ndrawBeam(tower1, tower2) {\n    // Implement logic to visually draw a beam between tower1 and tower2\n}\n\ncheckAndApplyBeamEffects(tower) {\n    // Logic to apply a 50% chance effect on enemy pieces along the beam\n    // This will depend on the layout of your board and how pieces are managed\n}\n updateTurnCount(newTurnCount) {\n  console.log('updateTurnCount function called');\n    console.log('Updating turn count to', newTurnCount); // Added for debugging\n    document.getElementById('turn-count-display').textContent = `Turn: ${newTurnCount}`;\n    \n    // Ensure the event is being created and dispatched correctly\n    try {\n        const turnChangeEvent = new CustomEvent('turnChanged', { detail: { turnCount: newTurnCount } });\n        document.dispatchEvent(turnChangeEvent);\n    } catch (e) {\n        console.error('Error dispatching turnChanged event:', e);\n    }\n}\n\n\n//END OF TOWERACTIVATIONSPELL\n//BEGIN OF REALITYSHATTERSPELL \ncastRealityShatterSpell(chessBoard, game) {\n        this.isRealityShattered = true;\n        this.storePiecePositions();\n        this.createMiniBoardContainers();\n        this.hideMainBoard();\n        this.divideBoardIntoMiniBoards(chessBoard, game);\n        // Further logic for handling mini-board gameplay\n    }\n    storePiecePositions() {\n    const pieces = document.querySelectorAll('.chess-piece');\n    pieces.forEach(piece => {\n        const square = piece.parentNode;\n        piece.setAttribute('data-original-row', square.getAttribute('data-row'));\n        piece.setAttribute('data-original-col', square.getAttribute('data-col'));\n    });\n}\n\n  divideBoardIntoMiniBoards() {\n    console.log('divideBoardIntoMiniBoards function called');\n    const squaresWithPieces = document.querySelectorAll('.chess-square.has-piece');\n    squaresWithPieces.forEach(square => {\n        const row = parseInt(square.getAttribute('data-row'), 10);\n        const col = parseInt(square.getAttribute('data-col'), 10);\n        const piece = square.querySelector('.chess-piece');\n        if (piece) {\n            const miniBoardId = this.getMiniBoard(row, col);\n            const miniBoardDiv = document.getElementById(`${miniBoardId}-mini-board`);\n            if (miniBoardDiv) {\n                miniBoardDiv.appendChild(piece);\n            } else {\n                console.error(`Mini-board container not found for ID: ${miniBoardId}-mini-board`);\n            }\n        }\n    });\n    this.isRealityShattered = true;\n}\nhideMainBoard() {\n    const mainBoard = document.getElementById('chessboard');\n    mainBoard.style.display = 'none'; // Use 'display: none' to hide the main board\n\n    // Optionally, make the mini-board container visible\n    const miniBoardContainer = document.getElementById('mini-board-container');\n    miniBoardContainer.style.display = 'block'; // Adjust as per your layout\n}\ncreateMiniBoardContainers() {\n    const miniBoardContainer = document.createElement('div');\n    miniBoardContainer.className = 'mini-board-container';\n\n    ['topLeft', 'topRight', 'bottomLeft', 'bottomRight'].forEach(board => {\n        const miniBoardDiv = document.createElement('div');\n        miniBoardDiv.className = 'mini-board';\n        miniBoardContainer.appendChild(miniBoardDiv); // Append to the container\n    });\n\n    document.body.appendChild(miniBoardContainer); // Append the container to the body or a specific element on your page\n}\n// createMiniBoardContainers() {\n//     // Create or select a container for mini-boards\n//     let miniBoardContainer = document.getElementById('mini-board-container');\n//     if (!miniBoardContainer) {\n//         miniBoardContainer = document.createElement('div');\n//         miniBoardContainer.id = 'mini-board-container';\n//         document.body.appendChild(miniBoardContainer); // Append to a suitable parent element\n//     }\n\n//     // Create and append mini-boards\n//     ['topLeft', 'topRight', 'bottomLeft', 'bottomRight'].forEach(board => {\n//         const miniBoardDiv = document.createElement('div');\n//         miniBoardDiv.id = `${board}-mini-board`;\n//         miniBoardDiv.className = 'mini-board';\n//         miniBoardContainer.appendChild(miniBoardDiv);\n//     });\n// }\n\ngetMiniBoard(row, col) {\n    if (row < 4 && col < 4) return 'topLeft';\n    if (row < 4 && col >= 4) return 'topRight';\n    if (row >= 4 && col < 4) return 'bottomLeft';\n    if (row >= 4 && col >= 4) return 'bottomRight';\n}\ncreateEmptyMiniBoard() {\n        return Array(4).fill(null).map(() => Array(4).fill(null));\n    }\n\n    mergeMiniBoardsBack() {\n    const pieces = document.querySelectorAll('.chess-piece');\n    pieces.forEach(piece => {\n        const miniBoardDiv = piece.parentNode;\n        const mainBoardSquare = document.querySelector(`.chess-square[data-row=\"${piece.dataset.row}\"][data-col=\"${piece.dataset.col}\"]`);\n        mainBoardSquare.appendChild(piece); // Moves the piece back to the main board\n    });\n\n    this.isRealityShattered = false;\n    // Additional logic to resume normal game play\n}\n//END OF REALITYSHATTERSPELL\n\n//BEGIN OF AUTOSPELLS\ncastAutoSpellSpell(spellType, board, game) {\n        switch (spellType) {\n            case 'staff-of-fire':\n                this.preparePawnCreation('FirePawn');\n                break;\n\n            case 'staff-of-water':\n                this.preparePawnCreation('WaterPawn');\n                console.log(\"preparePawnCreation successfully called on WaterPawn\");\n                break;\n          \n            case 'adept-wand':\n                // Assuming castAdeptWandSpell affects the game state\n                this.castAdeptWandSpell(board, game);\n                break;\n            case 'staff-of-light':  \n               chessPiece.castRealityShatterSpell();\n            case 'staff-of-earth' : \n              chessPiece.preparePawnCreation('Earthpawn');\n              break;\n\n            case 'ice':  \n\n              break;\n\n            case 'novice-staff':\n            // chessPiece.applyGravitationalSpell();\n              break;\n\n            case 'iced-out':  \n              chessPiece.castFrostGridSpell();\n              break;\n\n            case 'apprentice-wand': \n              chessPiece.activateDaggerSpell();\n              break;\n\n    case 'lightsaber' :\n         chessPiece.castLightsaberSpell();\n\n    break;\n\n    case 'hourglass' :\n\n    break;\n    // Add cases for other spell types (air, water, etc.)\n    case 'staff-of-chaos' :\n         chessPiece.chaosWarp(board);\n\n    break;\n\n    case 'staff-of-the-necromancer' :\n        chessPiece.castNecronomancerSpell();\n\n    break;\n\n    case 'apprentice-staff' :\n        chessPiece.castDigitzKingSpell();\n    break;\n    case 'apprentice-wand' :\n\n    break;\n    case 'staff' :\n\n    break;\n    case 'orbs-of-illusion' :\n              chessPiece.castChaosTheorySpell();\n\n\n    break;\n    \n    case 'adept-wand' :\n\n chessPiece.castAdeptWandSpell(chessBoard, chessGame); //PROBLEME AVEC le changement de tours, concernant le nombre de tours qu'il reste pour le rift spell, et sa désimplemntation.\n\n    break;\n\n    case 'adept-staff' :\n\n    break;\n\n    case 'novice-staff' :\n\n    break;\n\n    case 'arcane-hands' :\n\n    break;\n\n    case 'staff-of-air' :\n\n    break;\n\n    case 'spoon' :\n\n    break;\n    \n    case 'excalibur' :\n\n    break;\n\n    case 'magician-wand' :\n\n    break;\n\n    case 'trident' :\n\n    break;\n\n    case 'reaper-scythe' :\n\n    break;\n\n    case 'rebel-sword' :\n\n    break;\n\n    case 'wooden-staff' :\n\n    break;\n\n    case 'broomstick' :\n\n    break;\n\n    case 'celestial-staff' :\n\n    break;\n\n    case 'cybermancer-staff' :\n\n    break;\n\n    case 'grand-master-staff' :\n\n    break;\n\n    case 'stick-of-the-forest' :\n\n    break;\n\n    case 'samba' :\n\n    break;\n          \n        }\n    }\n\n    drawSpell() {\n        const randomIndex = Math.floor(Math.random() * this.spellDeck.length);\n        return this.spellDeck[randomIndex];\n    }\n\n//END OF AUTOSPELLS\n\n\n\n//BEGIN OF MERGING SPELLS\n\nactivateShadowMerge() {\n        // Player selects two pieces to merge\n        this.selectPiecesForMerge(); // Implement this selection method\n    }\n\n    mergePieces(piece1, piece2) {\n        // Merge piece1 and piece2\n        const mergedPiece = this.createMergedPiece(piece1, piece2);\n        this.placeMergedPieceOnBoard(mergedPiece);\n        this.mergedPieces.push(mergedPiece);\n\n        // Duration of the merge\n        setTimeout(() => this.splitMergedPiece(mergedPiece), 2 * turnDuration);\n    }\n\n    createMergedPiece(piece1, piece2) {\n        // Create a new piece with combined movement abilities of piece1 and piece2\n        // ...\n\n        return mergedPiece; // Return the new merged piece\n    }\n\n    placeMergedPieceOnBoard(mergedPiece) {\n        // Place the merged piece on the board\n        // ...\n    }\n\n    splitMergedPiece(mergedPiece) {\n        // Split the merged piece back into its original pieces\n        // ...\n    }\n\n    capturePiece(capturingPiece, capturedPiece) {\n        // If the captured piece is merged, count it as two captures\n        // ...\n    }\n\n\n//END OF MERGING SPELLS\n\n  \n\n\n\n\ncastDaggerSpell(data) {\n    console.log('Casting Dagger Spell');\n    const enemyColor = this.currentPlayer === 'white' ? 'black' : 'white';\n    console.log(enemyColor);\n\n    const enemyPieces = document.querySelectorAll(`.chess-piece.${enemyColor}-pawn`);\n    console.log(\"enemyPieces\", enemyPieces);\n\n    let currentSeed = data.seed;\n\n    enemyPieces.forEach(piece => {\n        const daggerImg = document.createElement('img');\n        daggerImg.src = 'img/dagger.png'; // Path to your dagger image\n        daggerImg.classList.add('dagger');\n        piece.appendChild(daggerImg);\n\n        // Use shared RNG to determine if the piece should be removed\n        let rngResult = this.nextRandom(data.multiplier, currentSeed, data.increment, data.modulus);\n        currentSeed = rngResult.newSeed;\n\n        if (rngResult.nextValue < 0.33) {\n            const parent = piece.parentNode; // Get the parent node of the piece\n            if (parent) {\n                parent.removeChild(piece); // Safely remove the piece from the DOM\n            }\n        }\n    });\n}\n\nactivateDaggerSpell(data) {\n    this.castDaggerSpell(data);\n}\n\n\n   \n\n        //GRAVITATIONNAL SPELL\n\n    getRandomDirection() {\n    const directions = ['left', 'right', 'top', 'bottom'];\n    return directions[Math.floor(Math.random() * directions.length)];\n}\n  applyGravitationalSpell() {\n    console.log('Casting Gravitational Spell');\n    const direction = this.getRandomDirection();\n    console.log(`Gravitational pull towards: ${direction}`);\n\n    for (let row = 0; row < 8; row++) {\n        for (let col = 0; col < 8; col++) {\n            const piece = this.getPieceFromCoords(row, col);\n            if (piece) {\n                const [newRow, newCol, hasMoved] = this.calculateNewPosition(row, col, direction);\n                if (hasMoved) {\n                    this.movePiece(row, col, newRow, newCol);\n                } else if (Math.random() < 0.25) {\n                    this.removePiece(row, col); // Implement this method to remove the piece\n                }\n            }\n        }\n    }\n} \ncalculateNewPosition(row, col, direction) {\n    let newRow = row, newCol = col, hasMoved = false;\n\n    while (true) {\n        switch (direction) {\n            case 'left':\n                if (newCol > 0 && !this.getPieceFromCoords(newRow, newCol - 1)) {\n                    newCol--; hasMoved = true;\n                } else return [newRow, newCol, hasMoved];\n                break;\n            case 'right':\n                if (newCol < 7 && !this.getPieceFromCoords(newRow, newCol + 1)) {\n                    newCol++; hasMoved = true;\n                } else return [newRow, newCol, hasMoved];\n                break;\n            case 'top':\n                if (newRow > 0 && !this.getPieceFromCoords(newRow - 1, newCol)) {\n                    newRow--; hasMoved = true;\n                } else return [newRow, newCol, hasMoved];\n                break;\n            case 'bottom':\n                if (newRow < 7 && !this.getPieceFromCoords(newRow + 1, newCol)) {\n                    newRow++; hasMoved = true;\n                } else return [newRow, newCol, hasMoved];\n                break;\n        }\n    }\n}\n\nmovePiece(oldRow, oldCol, newRow, newCol) {\n    // Move the piece in the game state and update the DOM\n    // This will depend on your game's implementation\n}\nremovePiece(row, col) {\n    // Remove the piece from the game state and update the DOM\n    // This will depend on your game's implementation\n}\n\n//END OF GRAVITATIONNAL SPELL\n//BEGIN OF NECROMANCER SPELL\ncastNecronomancerSpell() {\n    console.log('Casting Chronomancer Spell');\n    const playerColor = this.currentPlayer; // Assuming this is 'white' or 'black'\n    const enemyColor = playerColor === 'white' ? 'black' : 'white';\n\n    // Reviving captured pieces\n    this.reviveCapturedPieces(playerColor);\n    console.log(\"check after reviveCapturedPieces\")\n    // Removing enemy pieces with a 7% chance and 'stealing' them\n    this.removeAndStealEnemyPieces(enemyColor, playerColor);\n}\nreviveCapturedPieces(playerColor) {\n    const capturedPieces = this.getCapturedPieces(playerColor); // Implement this method\n\n    capturedPieces.forEach(piece => {\n        if (Math.random() < 0.10) {\n            // Revive the piece on the board - you need to define where it should be placed\n            this.placePieceOnBoard(piece); // Implement this method\n        }\n    });\n}\n\nremoveAndStealEnemyPieces(enemyColor, playerColor, game) {\n    console.log('removeAndStealEnemyPieces function called');\n    const enemyPieces = document.querySelectorAll(`.chess-piece.${enemyColor}-pawn`);\n\n    enemyPieces.forEach(pieceElement => {\n        if (Math.random() < 0.07) {\n            const parent = pieceElement.parentNode;\n            const pieceType = this.getPieceType(pieceElement); // Get the type of the piece\n\n            // Remove the enemy piece\n            parent.removeChild(pieceElement);\n\n            // Add the removed piece type to the current player's set\n            this.addPieceToPlayerSet(pieceElement, playerColor);\n        }\n    });\n}\ngetPieceType(piece) {\n  console.log('getPieceType entered with :', piece);\n    if (piece.classList.contains('white-pawn')) return 'pawn';\n    if (piece.classList.contains('black-pawn')) return 'pawn';\n    if (piece.classList.contains('white-rook')) return 'rook';\n    if (piece.classList.contains('black-rook')) return 'rook';\n    if (piece.classList.contains('white-king')) return 'king';\n    if (piece.classList.contains('white-queen')) return 'queen';\n     if (piece.classList.contains('white-bishop')) return 'bishop';\n    if (piece.classList.contains('white-knight')) return 'knight';\n    if (piece.classList.contains('black-king')) return 'king';\n    if (piece.classList.contains('black-queen')) return 'queen';\n     if (piece.classList.contains('black-bishop')) return 'bishop';\n    if (piece.classList.contains('black-knight')) return 'knight';\n   \n    return 'unknown'; // Default case\n}\ngetCapturedPieces(playerColor) {\n    if (!this.capturedPieces) {\n        console.error(\"Captured pieces data is not available.\");\n        return []; // Return an empty array to safely handle this case\n    }\n    return this.capturedPieces.filter(piece => piece.color === playerColor);\n}\n\nplacePieceOnBoard(piece, parent) {\n    // Check if the parent square is empty\n    if (!parent.querySelector('.chess-piece')) {\n        parent.appendChild(piece); // Add the piece to the square\n        // Update the internal game state\n        const row = parseInt(parent.getAttribute('data-row'), 10);\n        const col = parseInt(parent.getAttribute('data-col'), 10);\n        this.game.board[row][col] = piece;\n    } else {\n        console.log(\"Cannot place the piece, the square is not empty.\");\n        // Handle the case where the square is not empty\n    }\n}\naddPieceToPlayerSet(pieceElement, playerColor, game) {\n  this.syncBoardState();\n    const pieceTypes = ['pawn', 'rook', 'knight', 'bishop', 'queen', 'king'];\n\n\n    // Find the piece type from the class list\n        let pieceType = pieceElement.classList.value.split(' ')[1].split('-')[1];\n\n    if (!pieceType) {\n        console.error(\"Could not determine the piece type from the element\", pieceElement);\n        return;\n    }\n    // Create a new piece element with the correct color and type\n    const newPiece = document.createElement('div');\n    newPiece.classList.add('chess-piece', `${playerColor}-${pieceType}`);\n    newPiece.style.backgroundImage = `url('img/${playerColor}-${pieceType}.png')`; // Update this path\n\n    // Get all empty squares\n    const emptySquares = document.querySelectorAll('.chess-square:not(.has-piece)');\n    if (emptySquares.length === 0) {\n        console.log(\"No empty squares available to place the piece.\");\n        return;\n    }\n\n    // Select a random empty square\n    const randomIndex = Math.floor(Math.random() * emptySquares.length);\n    const targetSquare = emptySquares[randomIndex];\n            console.log(\"targetSquare\", targetSquare);\n\n    const newImagePath = `images/${targetSquare.color}_${targetSquare.type}.png`;\n    // Place the piece on the selected square\n    targetSquare.appendChild(newPiece);\n    targetSquare.classList.add('has-piece');\n     \n    // Update internal game state if necessary\n    const row = parseInt(targetSquare.getAttribute('data-row'), 10);\n    const col = parseInt(targetSquare.getAttribute('data-col'), 10);\n\n    targetSquare.style.gridRow = row + 1;\n    targetSquare.style.gridColumn = col + 1;\n    targetSquare.setAttribute('data-type', pieceType);\n    targetSquare.setAttribute('data-color', playerColor);\n     newPiece.addEventListener('click', this.boundHandleClick, { once: true });\n     newPiece.dataset.listenerAttached = 'true';\n    console.log('this.game', this.game);  \n    console.log('this.game.board in addPieceToPlayerSet before syncBoardState', this.game.game.board);  \n    console.log('this.game.board in addPieceToPlayerSet before syncBoardState', this.game.board);  \n    console.log(\"newPiece value :\", newPiece);\n    this.game.game.board[row][col] = { type: pieceType, color: playerColor }; // Update this to match how your game tracks pieces\n    console.log('this.game.game.board in addPieceToPlayerSet after syncBoardState', this.game.game.board);\n    console.log('this.game.board in addPieceToPlayerSet after syncBoardState', this.game.board);  \n\n}\n\nstatic forceMove(piece, fromRow, fromCol, toRow, toCol, isRiftMove = false) {\n    console.log('forceMove called with piece:', piece, 'fromRow:', fromRow, 'fromCol:', fromCol, 'toRow:', toRow, 'toCol:', toCol);\n\n    // Validate positions\n    if (fromRow === null || fromCol === null || toRow === null || toCol === null) {\n        console.error('Invalid move: Position out of bounds');\n        return;\n    }\n\n    // Handle the square the piece is moving from\n    const fromSquare = document.getElementById(`square-${fromRow}-${fromCol}`);\n    const pieceElement = fromSquare.querySelector('.piece');\n    console.log('pieceElement', pieceElement);\n    let pieceType = fromSquare.getAttribute('data-type');\n    \n    let pieceColor = fromSquare.getAttribute('data-color');    \n    \n    console.log('pieceType', pieceType, 'pieceColor', pieceColor, 'fromSquare', fromSquare);\n    console.log('piece', piece);\n    if (fromSquare && fromSquare.contains(piece.pieceElement)) {\n        fromSquare.classList.remove('has-piece', 'enchanted-ground', 'event-listener-attached');\n        fromSquare.removeAttribute('data-color');\n        fromSquare.removeAttribute('data-type');\n        fromSquare.removeAttribute('style');\n        fromSquare.removeChild(piece.pieceElement);\n    } else {\n        console.error(`Failed to find or remove piece from square (${fromRow}, ${fromCol})`);\n    }\n\n    // Handle the square the piece is moving to\n    const toSquare = document.getElementById(`square-${toRow}-${toCol}`);\n\n\n    if (toSquare) {\n        // If there is an existing piece at the target square, only remove it if it's an enemy piece\n        const existingPiece = toSquare.querySelector('.chess-piece');\n\n       \n        if (existingPiece && existingPiece.dataset.color !== piece.dataset.color) {\n            toSquare.removeChild(existingPiece);\n            // Additional logic for capturing the piece, updating scores, etc.\n        }\n   \n        console.log('fromSquare', fromSquare);\n        toSquare.appendChild(piece.pieceElement);\n        toSquare.classList.add('has-piece');\n        toSquare.setAttribute('data-type', pieceType);\n        toSquare.setAttribute('data-color', pieceColor);\n        toSquare.style.backgroundImage = `url('img/${pieceColor}-${pieceType}.png')`;\n        console.log('isRiftMove', isRiftMove);\n        if (!isRiftMove) {\n          console.log('trying to addEventListener in forceMove');\n            piece.pieceElement.addEventListener('click', this.boundHandleClick, { once: true });\n        }\n    } else {\n        console.error(`Failed to find target square at position (${toRow}, ${toCol})`);\n    }\n\n    if (isRiftMove) {\n        console.log('Rift-induced move completed.');\n    }\n}\n\n//END OF NECROMANCER SPELL\n// BEGINNING OF GAMBITMOVE UPGRADEDPIECE\n\nactivateGambitOfAges() {// Assuming you have a way to access the board and pieces\n  console.log('Casting gambitOfAges');\n        const enemyColor = this.currentPlayer === 'white' ? 'black' : 'white';\n        console.log(enemyColor);\n        const board = document.querySelector('#chessboard');\n\n        const enemyPawn = document.querySelectorAll(`.chess-piece.${enemyColor}-pawn`);\n        const alliedPawn = document.querySelectorAll(`.chess-piece.${this.currentPlayer}-pawn`);\n        console.log(\"enemyPawn\", enemyPawn);\n        console.log(\"alliedPawn\", alliedPawn);\n\n        \n        const opponentUpgradedPiece = Array.from(document.querySelectorAll(`.chess-piece.${enemyColor}-rook, \n                                                                       .chess-piece.${enemyColor}-bishop, \n                                                                       .chess-piece.${enemyColor}-knight`));\n\n        const alliedUpgradedPiece = Array.from(document.querySelectorAll(`.chess-piece.${this.currentPlayer}-rook, \n                                                                       .chess-piece.${this.currentPlayer}-bishop, \n                                                                       .chess-piece.${this.currentPlayer}-knight`));\n        \n        const enemyPawnSelected = this.randomlySelectPieces(enemyPawn, 2);\n        const opponentUpgradedPieceSelected = this.randomlySelectPieces(opponentUpgradedPiece, 2);\n\n        // Select two pawns and one 'upgraded' piece for each player\n        const alliedUpgradedPieceSelected = this.randomlySelectPieces(alliedUpgradedPiece, 2);\n        const alliedPawnSelected = this.randomlySelectPieces(alliedPawn, 2);\n        \n        console.log('alliedPawnSelected', enemyPawnSelected);        \n        console.log('alliedUpgradedPieceSelected', opponentUpgradedPieceSelected);\n        console.log('alliedPawnSelected', alliedPawnSelected);        \n        console.log('alliedUpgradedPieceSelected', alliedUpgradedPieceSelected);\n     \n        // Apply enhancements\n        alliedUpgradedPieceSelected.forEach(piece => this.enhancePiece(piece));\n        opponentUpgradedPieceSelected.forEach(piece => this.enhancePiece(piece));\n        enemyPawnSelected.forEach(piece => this.enhancePiece(piece));\n        alliedPawnSelected.forEach(piece => this.enhancePiece(piece));\n        // ... Additional logic for visual indicators and other effects\n    }\n\n    // Method to randomly select pieces\n    // selectRandomPieces(pieces, count, types) {\n    //     const filteredPieces = pieces.filter(piece => types.includes(piece.type));\n    //     // Shuffle and select the specified number of pieces\n    //     return filteredPieces.sort(() => 0.5 - Math.random()).slice(0, count);\n    // }\n\n    // Method to apply enhancements to a piece\n    enhancePiece(piece) {\n    // Assuming 'piece' is the DOM element representing the chess piece\n    console.log('Enhancing piece:', piece);\n\n    // Mark the piece as enhanced using a data attribute\n    piece.dataset.isEnhanced = 'true';\n\n    // Apply a universal visual indicator for all enhanced pieces\n    piece.style.boxShadow = '0 0 10px 5px rgba(255, 215, 0, 0.7)'; // Example: A glowing effect\n}\n\n// END OF GAMBITMOVE UPGRADEPIECE\n//BEGIN OF LIGHSABER SPELL\ncastLightsaberSpell(data) {\n    console.log(\"Casting Lightsaber Spell with rng:\", data);\n    \n    // Shared RNG setup\n    let currentSeed = data.seed;\n\n    // Play lightsaber animation and sound across the columns\n    this.playLightsaberAnimation(data, currentSeed, (removalColumnIndex) => {\n        this.removePiecesInColumn(removalColumnIndex);\n    });\n}\n\n\n removePiecesInColumn(columnIndex) {\n    console.log(\"Column Index for removal:\", columnIndex);\n\n    for (let row = 0; row < 8; row++) {\n        const squareId = `square-${row}-${columnIndex}`;\n        const square = document.getElementById(squareId);\n        console.log(\"square\", square);\n\n        if (square && square.classList.contains('has-piece') && this.isEnemyPiece(square)) {\n            console.log(`Enemy piece detected at ${row}, ${columnIndex}:`, square);\n            this.forceRemove(row, columnIndex); // Remove the piece from the board\n        }\n    }\n}\nisEnemyPiece(square) {\n    if (!this.currentPlayer) {\n      \n      console.log(\"this.currentPlayer\", this.currentPlayer); \n        console.error('Current player color is not defined.');\n        return false; // Or handle this case as per your game logic\n    }\n\n    console.log(`Current player color: ${this.currentPlayer}`);\n    const pieceColor = square.getAttribute('data-color');\n    console.log(\"Piece color on square:\", pieceColor);\n    return pieceColor !== this.currentPlayer;\n}\n\nplayLightsaberAnimation(data, initialSeed) {\n    const lightsaberSound = new Audio('sound/lightsaber.mp3');\n    let currentColumn = 0;\n    const totalColumns = 8; // For a standard chessboard with 8 columns\n\n    let currentSeed = initialSeed;\n    // Determine a random number of individual columns to move through (3 to 15)\n    const minColumns = 3;\n    const maxColumns = 15;\n    \n    let rngResult = this.nextRandom(data.multiplier, currentSeed, data.increment, data.modulus);\n    const targetColumns = Math.floor(rngResult.nextValue * (maxColumns - minColumns + 1)) + minColumns;\n    currentSeed = rngResult.newSeed;\n\n    let columnsMoved = 0;\n\n    const lightsaberInterval = setInterval(() => {\n        this.updateLightsaberColumn(currentColumn);\n        lightsaberSound.play();\n\n        // Increment the counter and move to the next column\n        columnsMoved++;\n        currentColumn = (currentColumn + 1) % totalColumns;\n\n        // Check if the animation should stop\n        if (columnsMoved >= targetColumns) {\n            clearInterval(lightsaberInterval);\n\n            // Add a delay before removing pieces to allow the last update to be shown\n            setTimeout(() => {\n                const removalColumnIndex = currentColumn === 0 ? totalColumns - 1 : currentColumn - 1;\n                this.removePiecesInColumn(removalColumnIndex);\n            }, 500); // Delay of 500 milliseconds\n        }\n    }, 500); // Interval timing\n\n}\n\nupdateLightsaberColumn(columnIndex) {\n    const lightsaber = document.getElementById('lightsaber');\n    const chessBoard = document.querySelector('#chessboard'); // Replace with your chessboard's ID\n    console.log(\"chessBoard\", chessBoard);\n\n    // Calculate the width of a single column (assuming 8 columns for a standard chessboard)\n    const columnWidth = chessBoard.offsetWidth / 8;\n\n    // Position the lightsaber over the correct column\n    lightsaber.style.left = `${columnIndex * columnWidth}px`;\n    lightsaber.style.width = `${columnWidth}px`;\n    lightsaber.style.display = 'block';\n\n    // Hide the lightsaber after 1 second\n    setTimeout(() => {\n        lightsaber.style.display = 'none';\n    }, 400); // 1000 milliseconds = 1 second\n}\n forceRemove(row, col) {\n    console.log(\"forceRemove function called for row:\", row, \"col:\", col);\n\n    // Identify the square from which the piece is to be removed\n    const squareId = `square-${row}-${col}`;\n    const square = document.getElementById(squareId);\n    const color = square.getAttribute('data-color');\n    const type = square.getAttribute('data-type');\n    console.log('square in forceRemove:', square);\n\n    if (square) {\n        // Remove the piece element from the square\n        const piece = square.querySelector('.chess-piece');\n        console.log('piece to be removed:', piece);\n        if (piece) {\n            square.removeChild(piece);\n            square.classList.remove('has-piece');\n            square.removeAttribute('data-color');\n            square.removeAttribute('data-type');\n           // EMOJI MAPPING\n             // const pieceEmoji = this.mapPieceToEmoji(type, color);\n            // this.addCapturedPiece(pieceEmoji, color);\n        }\n\n        // Clear the background-image style from the square\n        square.style.backgroundImage = ''; // This line removes the image\n    }\n\n    // Update the internal game state\n    // this.game.board[row][col] = null;\n}\nstatic forceRemove(row, col) {\n    console.log(\"forceRemove function called for row:\", row, \"col:\", col);\n\n    // Identify the square from which the piece is to be removed\n    const squareId = `square-${row}-${col}`;\n    const square = document.getElementById(squareId);\n    const color = square.getAttribute('data-color');\n    const type = square.getAttribute('data-type');\n    console.log('square in forceRemove:', square);\n\n    if (square) {\n        // Remove the piece element from the square\n        const piece = square.querySelector('.chess-piece');\n        console.log('piece to be removed:', piece);\n        if (piece) {\n            square.removeChild(piece);\n            square.classList.remove('has-piece');\n            square.removeAttribute('data-color');\n            square.removeAttribute('data-type');\n           // EMOJI MAPPING\n             // const pieceEmoji = this.mapPieceToEmoji(type, color);\n            // this.addCapturedPiece(pieceEmoji, color);\n        }\n\n        // Clear the background-image style from the square\n        square.style.backgroundImage = ''; // This line removes the image\n    }\n\n    // Update the internal game state\n    // this.game.board[row][col] = null;\n}\n    getType() {\n        // returns the type of the piece (e.g. \"pawn\", \"rook\", etc.)\n      return this.type;\n    }\n\n    getColor() {\n        // returns the color of the piece (e.g. \"white\", \"black\")\n      return this.color;\n    }\n\n    getPosition(piece) \n    {\n        // returns the current position of the piece on the board as an array [row, col]\n      return [this.row, this.col];\n    }\n\n    setPosition(row, col) \n    {\n        // sets the position of the piece on the board\n      this.row = row;\n      this.col = col;\n    }\n\n    playMoveSound() \n    {\n      const audioElement = document.createElement('audio');\n      audioElement.src = '/sounds/move.mp3';\n      document.body.appendChild(audioElement);\n      audioElement.play();\n    }\n\n    playCaptureSound() {\n      const audioElement = document.createElement('audio');\n      audioElement.src = '/sounds/capture.mp3';\n      document.body.appendChild(audioElement);\n      audioElement.play();\n    }\n\n    playWrongSound() \n    {\n        // create an audio element for the wrong sound\n      const audioElement = document.createElement('audio');\n      audioElement.src = '/sounds/wrong.mp3';\n      document.body.appendChild(audioElement);\n        // play the sound\n      audioElement.play();\n    }\n \n\n\n }\n // module.exports = ChessPiece;\n//    document.addEventListener('DOMContentLoaded', function() {\n//     // Add event listeners to all chess squares\n//     document.querySelectorAll('.chess-square').forEach(square => {\n//         square.addEventListener('click', function() {\n//             // Retrieve the row and column from the clicked square\n//             const row = this.getAttribute('data-row');\n//             const col = this.getAttribute('data-col');\n\n//             // Call the function to remove pieces from this column\n//             removePiecesFromColumn(col);\n//         });\n//     });\n// });\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   const closeButton = document.getElementsByClassName(\"close-button\")[0];\n//   if (closeButton) {\n//     console.log(\"Close button setup\");\n//     closeButton.addEventListener('click', () => {\n//       // this.hideSelectSquarePrompt();\n//     });\n//   }\n// });\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    const closeButton = document.getElementsByClassName(\"close-button\")[0];\n    if (closeButton) {\n      console.log(\"Close button setup\");\n      closeButton.addEventListener('click', () => {\n        // this.hideSelectSquarePrompt();\n      });\n    }\n  });\n\n  document.addEventListener('turnChanged', (e) => {\n    console.log('turn changed');\n    // Assuming you have a chessPiece instance accessible here\n    chessPiece.placeTower();\n    chessPiece.checkTowerCountAndActivateBeam();\n  });\n\n  document.getElementById('turn-count-display').addEventListener('turnChanged', (e) => {\n    const { turnCount } = e.detail; // Get the current turn count from the event detail\n    console.log('Turn changed:', turnCount);\n    // Assuming you have a chessPiece instance accessible here\n    chessPiece.checkAndUpdateSpellEffects();\n    // Additional logic here if needed\n  });\n\n  document.addEventListener('turnChanged', function(event) {\n    console.log('trying to call checkAndUpdateSpellEffects');\n    // Assuming you have a chessPiece instance accessible here\n    chessPiece.checkAndUpdateSpellEffects();\n  }.bind(this));\n}\n\n// export { ChessPiece, ChessPiece as calculateValidMoves };","export class SeededRNG {\r\n    constructor(seed) {\r\n        this.modulus = 4294967296;\r\n        this.multiplier = 1664525;\r\n        this.increment = 1013904223;\r\n        this.seed = parseInt(seed.slice(0, 10), 16);\r\n    }\r\n\r\n    next() {\r\n        this.seed = (this.multiplier * this.seed + this.increment) % this.modulus;\r\n        return this.seed / this.modulus;\r\n    }\r\n}\r\n\r\n// export default SeededRNG;","// utility.js\r\n// Dynamically import 'crypto'\r\nlet crypto;\r\nimport('crypto').then((mod) => {\r\n  crypto = mod.default;\r\n}).catch(err => console.error('Failed to load crypto module:', err));\r\n\r\n\r\n\r\nexport function generateSeed(addresses) {\r\n    const hash = crypto.createHash('sha256');\r\n    addresses.forEach(addr => {\r\n        if (addr && addr.walletAddress) {  // Ensure the object and property exist\r\n            hash.update(addr.walletAddress);  // Use the walletAddress string for hashing\r\n        } else {\r\n            console.warn(\"Invalid address object received:\", addr);\r\n        }\r\n    });\r\n    return hash.digest('hex');  // Returns a hexadecimal string as the seed\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchessmos\"] = self[\"webpackChunkchessmos\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n__webpack_require__(2091);\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(3894);\n__webpack_require__(473);\n__webpack_require__(2115);\n__webpack_require__(8499);\n__webpack_require__(4577);\nvar __webpack_exports__ = __webpack_require__(63);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","leafPrototypes","getProto","inProgress","dataWebpackPrefix","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","Keplr","router_1","enigma_1","cosmjs_1","deepmerge_1","long_1","buffer_1","events_1","constructor","version","mode","requester","enigmaUtils","Map","defaultOptions","ethereum","EthereumProvider","ping","sendSimpleMessage","BACKGROUND_PORT","enable","chainIds","f","catch","finally","setTimeout","protectedTryOpenSidePanelIfEnabled","isEnabled","disable","experimentalSuggestChain","chainInfo","hideInUI","Error","gasPriceStep","assign","feeCurrency","feeCurrencies","console","warn","coinType","getKey","chainId","getKeysSettled","getChainInfosWithoutEndpoints","r","chainInfos","getChainInfoWithoutEndpoints","sendTx","tx","signAmino","signer","signDoc","signOptions","_a","default","sign","signDirect","bodyBytes","authInfoBytes","accountNumber","toString","signed","fromString","signature","signDirectAux","publicKey","sequence","preferNoSetMemo","signArbitrary","data","Buffer","from","isADR36WithString","verifyArbitrary","signEthereum","message","signType","signICNSAdr36","contractAddress","owner","username","addressChainIds","getOfflineSigner","CosmJSOfflineSigner","getOfflineSignerOnlyAmino","CosmJSOfflineSignerOnlyAmino","getOfflineSignerAuto","isNanoLedger","suggestToken","viewingKey","getSecret20ViewingKey","getEnigmaPubKey","getEnigmaTxEncryptionKey","nonce","enigmaEncrypt","contractCodeHash","msg","enigmaDecrypt","cipherText","length","Uint8Array","getEnigmaUtils","has","get","KeplrEnigmaUtils","set","experimentalSignEIP712CosmosTx_v0","eip712","__core__getAnalyticsId","changeKeyRingName","defaultName","editable","__core__privilageSignAminoWithdrawRewards","__core__privilageSignAminoDelegate","sendEthereumTx","suggestERC20","ignoreGestureFailure","isInContentScript","window","__keplr_content_script","enabled","log","includes","document","getElementById","isKeplrLocked","keplrThemeOption","fontFaceAndKeyFrames","chrome","runtime","getURL","isLightMode","matchMedia","matches","styleElement","createElement","appendChild","createTextNode","head","button","id","style","boxSizing","animation","position","right","top","padding","zIndex","borderRadius","display","alignItems","fontFamily","fontWeight","background","arrowTop","transform","marginRight","innerHTML","keplrLogoWrap","keplrLogo","keplrLogoUrl","src","width","height","logoClickCursor","logoClickCursorUrl","bottom","aspectRatio","mainText","fontSize","color","textContent","removed","intervalId","setInterval","sidePanelPing","clearInterval","remove","body","keplr","super","selectedAddress","networkVersion","isKeplr","isMetaMask","protectedEnableAccess","isConnected","request","method","params","providerId","sidePanelOpenNeededJSONRPCMethods","net_version","getAccounts","key","address","bech32Address","algo","pubkey","pubKey","signerAddress","chain_id","getPubkey","getTxEncryptionKey","encrypt","decrypt","ciphertext","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","__exportStar","p","prototype","hasOwnProperty","call","InjectedKeplr","injectKeplrToWindow","types_1","defineUnwritablePropertyIfPossible","descriptor","startProxy","eventListener","addMessageListener","fn","addEventListener","removeMessageListener","removeEventListener","postMessage","location","origin","parseMessage","type","startsWith","receivedSignDoc","args","ethereumProviderMethod","JSONUint8Array","unwrap","proxyResponse","return","wrap","error","code","module","requestMethod","bytes","Array","crypto","getRandomValues","map","join","proxyMessage","receiveResponse","eip6963ProviderInfo","fieldNames","keys","fieldName","methodNames","getOwnPropertyNames","methodName","bind","_b","features","injectedKeplr","_isConnected","_currentChainId","_initProviderState","ethereumHexAddress","_handleAccountsChanged","event","detail","evmChainId","_handleChainChanged","uuid","emit","announceEvent","CustomEvent","EIP6963EventNames","Announce","freeze","info","provider","Request","dispatchEvent","_requestMethod","EthereumProviderRpcError","initialProviderState","currentEvmChainId","currentChainId","_handleConnect","evmChainIdHexString","_handleDisconnect","WEBPAGE_PORT","APP_PORT","MessageRegistry","registeredMsgType","registerMessage","msgCls","setPrototypeOf","KeplrError","fromHex","toHex","out","byte","slice","hexstring","listOfInts","i","hexByteAsString","substr","match","push","parseInt","Message","approveExternal","_env","_sender","Router","encoding_1","uint8_array_1","envProducer","msgRegistry","registeredHandler","guards","port","_isInitialized","isInitialized","addHandler","route","handler","addGuard","guard","listen","initFn","attachHandler","initWaiter","_initWaiter","unlisten","detachHandler","handleMessage","sender","env","routerMeta","validateBasic","SimpleMessage","message_1","symbolRoute","Symbol","symbolType","sendMessage","hex_1","parse","text","JSON","replace","stringify","obj","isArray","array","EthTxStatus","EthSignType","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","string","encoding","isEncoding","actual","write","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","size","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","name","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","dst","alphabet","table","i16","BufferBigIntNotDefined","isMergeableObject","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","defaultArrayMerge","source","element","getKeys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","forEach","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","reduce","prev","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","NumberIsNaN","isNaN","EventEmitter","init","once","emitter","errorListener","err","removeListener","resolver","eventTargetAgnosticAddListener","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","unshift","warned","w","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","evlistener","unwrapListeners","arrayClone","listenerCount","flags","wrapListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","listeners","addListener","prependListener","prependOnceListener","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","rawListeners","eventNames","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","LN2","Long","wasm","WebAssembly","Instance","Module","low","high","unsigned","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","substring","radixToPower","power","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","greaterThan","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","div_u","div_s","toUnsigned","shru","shr","shl","log2","ceil","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","_regeneratorRuntime","t","iterator","asyncIterator","u","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","h","l","GeneratorFunction","GeneratorFunctionPrototype","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","__proto__","awrap","async","reverse","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_walletConnect","_callee","_context","onload","accounts","_next","_throw","querySelector","walletConnect","_asyncToGenerator","_defineProperties","_toPropertyKey","_createClass","_toPrimitive","_classCallCheck","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_isNativeReflectConstruct","Boolean","construct","_getPrototypeOf","_inherits","_setPrototypeOf","game","validPieceTypes","ChessPiece","ExtendedPiece","_ChessPiece","row","col","imagePath","elementId","defineExtendedPiece","_defineExtendedPiece","_callee5","_context5","chessPiece","ChessBoard","chessGame","pieces","chessPieces","squareElements","querySelectorAll","moveHistory","currentPlayer","gameStatus","boardElement","currentlySelectedPiece","initializeBoard","board","initialize","blackPieces","whitePieces","selectedPieceElement","movePiece","_initialize2","runChessGame","t0","_initializeBoard","_callee2","_context2","initializeEmptyBoard","populateBoardWithPieces","_populateBoardWithPieces","_callee3","_this","_context3","piece","_runChessGame","_callee4","_yield$this$initializ","_chessArray","_chessBoard","_context4","chessArray","chessBoard","getDOMElement","handleClick","_this2","newChessPiece","addPiece","squareElement","classList","backgroundImage","gridRow","gridColumn","_this3","square","createPiece","placePieces","_this4","html","img","firstElementChild","dataset","className","splice","targetSquare","pieceElement","destinationElement","validateMoveInputs","selectPiece","targetCoords","getSquareCoords","validateCoords","selectedElement","getSelectedPieceElement","parentElement","selectedPieceParent","originalCoords","contains","executeMove","getPiece","postMoveActions","updateGameStateInMovePiece","riftArea","getRiftArea","some","_ref","_ref2","_slicedToArray","riftRow","riftCol","_ref3","Element","parentNode","oldSquare","originalRow","originalCol","targetRow","targetCol","newSquare","removeChild","resetBoardColors","displayBoard","_this5","_ref5","whiteKing","blackKing","opponentPieces","king","calculateValidMoves","move","isCheck","_step","_iterator","_createForOfIteratorHelper","getValidPieces","_step2","_iterator2","_move","isBlocked","getNumWhitePieces","getNumBlackPieces","getNumWhiteBishops","getNumBlackBishops","Bishop","boardHTML","numRows","numCols","getPieceAtPosition","pieceHTML","generateHTML","squareClass","squareId","find","generateBoardHTML","isPlayerTurn","selectedPiece","fromRow","fromCol","getLegalMoves","_step3","_iterator3","fromIndex","toIndex","to","captured","alert","currentRow","currentCol","rowDir","colDir","_callSuper","_yield$import","_yield$import2","_yield$import3","ChessArray","ChessGame","handlePieceSelection","_class","forceMove","_ChessGame","_class2","_this$chessArray","_this$chessArray2","parent","getAttribute","whiteCaptured","blackCaptured","squares","checkGameStatus","validMoves","status","turn","player1Id","turnCount","turnDuration","currentTurnTimeLeft","turnTimer","updateTurnDisplay","extraTimeLimit","extraTimer","extraWhiteTimeLeft","extraBlackTimeLeft","extraWhiteTimer","extraBlackTimer","handleMove","handleSquareClick","startTurnTimer","instance","endTurnMove","pawnElement","spellExpirationTurn","turnDisplay","player","startExtraTimer","startTurn","updateTurnCountDisplay","checkAndUpdateSpellEffects","updateExtraTimerDisplay","endGame","turnCountDisplay","extraTimerDisplay","timeLeft","timerId","timeRemaining","timeLimit","updateClock","opponent","sourcePiece","targetPiece","isValidMove","timer","isTurn","isCheckmate","unhighlightSquares","highlightSquares","checkGameOver","pieceArray","createPieces","addPiecesToBoard","whiteTurn","legalMoves","endTurn","pieceRow","pieceCol","isLegalMove","isClearPath","children","isWhiteTurn","pieceType","pieceColor","newSquareCoords","currentSquareCoords","getPieceOnSquare","enemyPiece","hasMoved","squareInBetween","rightSquare","rookSquare","rook","isSquareInCheck","currentSquare","leftSquare","isLegalMoves","sq","newRow","newCol","rowDiff","colDiff","rowStep","colStep","getBoard","isDraw","extraTimeLeft","announceWinner","endTurnMoveServ","updateTurnCountDisplayServ","myChessGame","myTurn","instanceTurnCount","turnPlayer","changeTurn","gameSessions","getGameSession","gameId","session","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_n","F","test","_defineProperty","SeededRNG","initializeChessPieces","_x","_x2","_x3","_initializeChessPieces","config","_initialize","_yield$import4","seededRNG","_i5","_pieces","_chessPiece2","boundHandleClick","clickedSquareElement","closest","clickedPieceElement","showAlert","syncBoardState","activeSpells","validPiecesToResolveCheck","isValidPiece","validPiece","rowMatch","colMatch","playerColor","isSpecialMoveActive","isSpellActive","clickedPiece","getPieceFromElement","thistype","thiscolor","isAlliedPiece","isSelected","alliedSelectedPieces","deselectAndClear","selectNewPiece","initObserver","threateningPath","gameSession","isChaosTheoryActive","hasMovedDueToRift","isPawnPlacementActive","pieceSwapped","riftSpellDuration","setupMoveListener","selectedSquare","prevTarget","currentPlayerColor","highlightedSquares","handleHover","boundHandleSelection","handleSelection","castAdeptWandSpell","activeClickListeners","capturedPieces","setAttribute","castDigitzKingSpell","miniBoards","topLeft","createEmptyMiniBoard","topRight","bottomLeft","bottomRight","isFinalStandActive","miniBoardArea","x1","y1","x2","y2","finalStandTurnCount","finalStandScore","white","black","pointThreshold","isRealityShattered","spellDeck","isWindOfChangeActive","movesLeftWithSpell","directions","currentDirection","isMiniGameActive","miniGameScore","miniGameMoveCount","towers","towerOfPowerActivated","chaosTheoryStartEvent","Event","chaosTheoryEndEvent","listenerAttached","_e$detail","applyMove","getPosition","spellName","spellResult","rng","spellDetails","spellDetail","gameUI","spellNameId","notificationBox","description","duration","turnsLeft","notificationElement","turnsLeftElement","whitePawns","blackPawns","whiteRooks","blackRooks","whiteKnights","blackKnights","whiteBishops","blackBishops","whiteQueen","blackQueen","pawn1","addChessPiece","pawn6","rook1","rook2","rook3","rook4","knight1","knight2","knight3","knight4","bishop2","bishop3","bishop1","bishop4","queen2","king2","queen1","king1","clickedElement","isPiece","moveToSquare","currentlySelected","alertBox","isSamePiece","isSameColor","isInvalidMove","pieceClass","cls","clearValidMoves","handleBoardClick","oldPiece","oldType","oldColor","chaosTheoryTurnsLeft","clearPetrification","attemptToTransferPetrification","updatePetrifiedPieces","oldRow","oldCol","toChessNotation","fromPosition","toPosition","captureOccurred","isCapture","moveEvent","capture","socket","forceRandomMove","excludeMiniBoardArea","forceRemove","movingPiece","requestAnimationFrame","effect","handleMagicalCardEffect","showSpellInteraction","checkAndPlaceTowerEachTurn","checkTowerCountAndActivateBeam","removeAttribute","newImagePath","gridArea","outerHTML","existingPiece","clickedSquare","retrieveOrCreatePiece","showValidMoves","capturedContainer","textAlign","pattern","filteredValidMoves","pathSquare","_loop","clickListener","diceRoll","rollDice","performRandomMove","switchTurn","checkMiniBoardAndEndFinalStand","hasChildNodes","firstChild","_pieceClass$split2","squareIndex","item","existingPieceElement","replaceChild","spellType","isActive","specialPawn","refreshPieceEventListeners","toggleGameState","restoreNormalGameState","pawnType","_this7","showSelectSquarePrompt","chessPieceInstance","pawnPlacementListener","selectedSquareElement","currentTarget","_chessPieceInstance$c2","convertSquareIdToRowCol","addSpecialPawn","isSquareEmpty","spellListener","_this8","setupSquareListeners","hideSelectSquarePrompt","_this9","boundHandleSquareClick","_this10","attributes","childList","subtree","attributeFilter","MutationObserver","mutationsList","observer","mutation","attributeName","enableListeners","observe","_this11","needsListener","closeButton","getElementsByClassName","squareSelector","_this12","enemyColor","pawnSquare","isPawnOnMiniBoard","moveForward","doubleMoveRow","doubleMoveCol","_i","_captureOffsets","captureCol","captureSquare","_i2","_captureOffsets3","direction","_i3","_captureOffsets5","dr","dc","kingMoves","currentPiece","onMiniBoard","_this13","cell","_this14","cols","seed","increment","modulus","nextSeed","newSeed","nextValue","_this15","currentSeed","originalSquare","rngResult","nextRandom","shuffledPositions","updateInternalBoardStateFromDOM","updateBoardVisuals","_this16","gameBoard","toggleSpellMode","chessBoardElement","_this$determineTopLef","determineTopLeftCorner","highlightArea","preventDefault","stopPropagation","_this$determineTopLef2","applySpellEffects","deactivateSpell","clearHighlights","highlightX","highlightY","pawnFinalNumbers","_this17","kingsNumber","random","closestEnemyPawn","closestAlliedPawn","smallestEnemyDifference","MAX_SAFE_INTEGER","smallestAlliedDifference","number","pawn","difference","box","newTypes","randomType","newPiece","boardRect","getBoundingClientRect","squareSize","mouseX","clientX","left","mouseY","clientY","selector","players","_this18","riftDuration","defineAndShowRiftArea","spell","updateEffect","updateNotification","endEffect","removeRiftArea","removeNotification","isInRift","randomlyPlacePiece","riftSpell","riftCenterRow","riftCenterCol","_ref4","_ref6","_ref7","_ref8","_this19","isRandomlyPlacing","emptySquares","_randomSquare$id$spli2","randomRow","randomCol","setupMiniBoard","clearMiniBoard","_this$game","_this20","highlightMiniBoardArea","allSquares","isWithinMiniBoard","_this21","unoccupiedSquares","randomIndex","forceMovePieceToSquare","_this22","topLeftSquare","bottomRightSquare","chessboard","miniBoardContainer","topLeftRect","bottomRightRect","_this23","miniBoardSquares","miniBoardWhitePieces","miniBoardBlackPieces","endFinalStand","_this24","whitePiecesCount","blackPiecesCount","attachEventListenersToPiece","applyFinalStandOutcome","finalStandPlayerPieces","queryAlliedMiniBoardPieces","selectionContainer","selectOpponentPiece","opponentColor","finalStandOpponentPieces","queryOponentMiniBoardPieces","placePiecesOnMiniBoard","opponentPawn","opponentUpgradedPiece","selectedPawns","randomlySelectPieces","selectedUpgradedPiece","alliedColor","alliedPawn","upgradedPieceSelector","alliedUpgradedPiece","shuffledPieces","sort","selectedPieces","playerPieces","_this25","forceMovePieceInsideMiniBoard","toRow","toCol","attempts","ally","enemy","enemyPieces","allyColor","allyPieces","selectedEnemies","selectedEnemyIndices","selectedAllies","selectedAllyIndices","processSelectedPieces","totalPieces","totalTurnsPetrified","turnsPetrified","totalTurnsUntilDestruction","turnsUntilDestruction","applyPetrification","_this26","child","turnPetrified","getCurrentTurnCount","petrifyElement","petrifiedOnTurn","createPetrifiTimer","_this27","indicator","turnNumberMatch","_this28","updatePetrificationIndicator","turnsPassed","petrificationIndicator","turnsRemaining","randomAlly","numPieces","piecesArray","_ref9","_this29","effectRoll","removepPiece","movePieceToRandomSquare","swapPiece","squareEffectRoll","createMagmaSquare","createHole","createRock","randomSquare","_this30","pieceLandedEvent","isSplit","otherPiece","areAdjacent","canMergeWith","splitPart","seedElements","seedElement","seedStage","MAX_GROWTH_STAGE","castFirePlantSpell","castStonePlantSpell","castLightPlantSpell","castMysticPlantSpell","castWaterPlantSpell","castEarthPlantSpell","castWindPlantSpell","castQuakePlantSpell","boardElements","getBoardElements","randomElement","getRandomElement","triggerFunction","triggerInfernoWave","triggerSandstormDance","triggerEclipseMirage","triggerThermalShock","triggerVerdantResurgence","triggerHurricaneSurge","triggerDarkFlame","triggerIcyBloom","triggerArcaneIllumination","triggerWhisperingShadows","triggerReflectionPool","triggerFrozenGround","triggerWildfireGrowth","triggerRadiantWind","triggerTerrifyingQuake","triggerEtherealBreeze","alliedPieces","_this31","movesPerPlayer","rollDiceForSpell","currentMove","totalMoves","moveInterval","selectRandomPiece","_this32","assignRowClassesToPawns","friendlyPawns","enemyPawns","allPawns","delay","numberBox","createNumberBox","rollCount","maxRolls","interval","randomNumber","displayKingsNumber","displayElement","opacity","backgroundColor","getRandomColor","baseColor","getBaseColor","shade","bgColor","textColor","isLightColor","rgb","rowElement","_this33","enchantedGrounds","Set","border","_this34","effects","upgradePiece","downgradePiece","teleportPiece","freezePiece","selectedEffect","spellDescription","startShufflingAnimation","spellPopup","spellNameElement","spellDescriptionElement","cardContainer","card","alliance","allianceColor","alliedPawns","parentSquare","selectedPawn","newType","updatePieceAppearanceAndFunctionality","alliancePiece","allianceParent","formattedNewType","toUpperCase","_this35","randomIndexes","selectTwoDistinctRandomIndexes","square1","square2","attribute","swapAttributes","swapChessPieces","updateInternalGameStateForSwap","index2","index1","element1","element2","temp","piece1","piece2","tempContainer","cloneNode","shielded","randomPiece","_this36","currentTurnCount","numberOfPiecesToFreeze","_loop2","pieceToFreeze","freezeDurationInTurns","unfreezeTurn","unfreezeCheckInterval","frozen","parentColor","positions","shuffleArray","newPos","newSquareId","_ref10","blinkStep","_this37","diceContainer","showDiceRoll","rowChange","applyGravitationalField","parentPiece","totalRows","allPawnElements","currentTurn","_pawnElement$classLis","spellDuration","randomDirection","newMovement","currentMovement","isUnderSpell","originalMovement","unOccupiedSquares","chosenSquare","coords","activationTurn","placeTower","activateBeamOfLight","_this38","tower","nextTower","drawBeam","checkAndApplyBeamEffects","tower1","tower2","newTurnCount","turnChangeEvent","storePiecePositions","createMiniBoardContainers","hideMainBoard","divideBoardIntoMiniBoards","_this39","miniBoardId","getMiniBoard","miniBoardDiv","preparePawnCreation","castRealityShatterSpell","castFrostGridSpell","activateDaggerSpell","castLightsaberSpell","chaosWarp","castNecronomancerSpell","castChaosTheorySpell","selectPiecesForMerge","_this40","mergedPiece","createMergedPiece","placeMergedPieceOnBoard","mergedPieces","splitMergedPiece","capturingPiece","capturedPiece","_this41","daggerImg","castDaggerSpell","getRandomDirection","getPieceFromCoords","_this$calculateNewPos2","calculateNewPosition","removePiece","reviveCapturedPieces","removeAndStealEnemyPieces","_this42","getCapturedPieces","placePieceOnBoard","_this43","getPieceType","addPieceToPlayerSet","_this44","enemyPawn","enemyPawnSelected","opponentUpgradedPieceSelected","alliedUpgradedPieceSelected","alliedPawnSelected","enhancePiece","isEnhanced","boxShadow","_this45","playLightsaberAnimation","removalColumnIndex","removePiecesInColumn","columnIndex","isEnemyPiece","initialSeed","_this46","lightsaberSound","Audio","currentColumn","targetColumns","columnsMoved","lightsaberInterval","updateLightsaberColumn","play","totalColumns","lightsaber","columnWidth","offsetWidth","audioElement","resetEvent","eligiblePieces","allPieces","shuffledMovements","applySpell","isRiftMove","fromSquare","toSquare","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","queue","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","deps","dep","wrapDeps","getResult","fnQueue","q","ns","def","current","definition","chunkId","promises","globalThis","prop","url","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","onScriptComplete","onerror","clearTimeout","doneFns","nmd","paths","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","chunkLoadingGlobal","self"],"sourceRoot":""}